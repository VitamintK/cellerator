(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    554488,      12194]
NotebookOptionsPosition[    549684,      12032]
NotebookOutlinePosition[    550147,      12050]
CellTagsIndexPosition[    550104,      12047]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
MathSBML-Level2.nb
\
\>", "Title",
 CellChangeTimes->{{3.50621468022414*^9, 3.506214690691759*^9}}],

Cell[TextData[{
 StyleBox["SBML Level-2 Specific support functions for MathSBML",
  FontSize->24],
 "\nIndividual package extracted for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "-8 support\n\n2.8.2011 - makeTF readded to file (it somehow got lost in the \
split); added error Abort to makeTF if incorrect argument. \n1.24.-2011 - the \
function getLevel2reactions would not open or allow a file save operation \
because of special formatting. To  fix this problem, the code had to be \
extracted in M7 and all formatted cleared before upgrade to V8"
}], "Text",
 CellChangeTimes->{{3.5049777863846393`*^9, 3.5049778940467973`*^9}, {
  3.506214616373228*^9, 3.506214669584922*^9}, {3.5062185122004757`*^9, 
  3.5062185217788925`*^9}}],

Cell[CellGroupData[{

Cell["File Description", "Section",
 CellChangeTimes->{{3.395408039119268*^9, 3.395408049088715*^9}, {
  3.5062180912805367`*^9, 3.5062181026997566`*^9}}],

Cell[TextData[{
 StyleBox[" ",
  FontSize->16],
 StyleBox["Filename:\tMathSBML-Level2.nb\n Description:\tMathSBML is an SBML \
reader for ",
  FontSize->12],
 StyleBox["Mathematica \n \t\t",
  FontSize->12,
  FontSlant->"Italic"],
 StyleBox["This is part of the MathSBML Package\n Organization: \tCaltech \
Biological Network Modeling Center\n License:\tLGPL \n \n ",
  FontSize->12],
 "    This file is part of MathSBML.\n \n    MathSBML is free software: you \
can redistribute it and/or modify\n    it under the terms of the GNU Lesser \
General Public License as published by\n    the Free Software Foundation, \
either version 3 of the License, or\n    (at your option) any later version.\n\
\n    This program is distributed in the hope that it will be useful,\n    \
but WITHOUT ANY WARRANTY; without even the implied warranty of\n    \
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU \
General Public License for more details.\n\n    You should have received a \
copy of the GNU Lesser General Public License\n    along with this program.  \
If not, see <http://www.gnu.org/licenses/>.",
 StyleBox["\n ",
  FontSize->12]
}], "Text",
 CellChangeTimes->{{3.388248302205469*^9, 3.388248304035112*^9}, 
   3.388264681197356*^9, {3.3882668683761797`*^9, 3.388266875242931*^9}, 
   3.388353386077384*^9, {3.388363325911048*^9, 3.3883633263870773`*^9}, 
   3.3883996477410192`*^9, {3.388761163736053*^9, 3.38876116441009*^9}, {
   3.389125922604425*^9, 3.389125923136166*^9}, {3.390045172241888*^9, 
   3.39004517571679*^9}, {3.39019850450497*^9, 3.3901985115655603`*^9}, {
   3.392748682342765*^9, 3.392748683344193*^9}, {3.3954080212118177`*^9, 
   3.395408027048024*^9}, {3.395690507776781*^9, 3.3956905087487507`*^9}, {
   3.3973955266739798`*^9, 3.397395527497595*^9}, {3.401465824219963*^9, 
   3.401465836954739*^9}, 3.506217737019514*^9, {3.5062177764407835`*^9, 
   3.506217778375187*^9}, 3.506217826938072*^9, {3.5062180797833166`*^9, 
   3.506218242226402*^9}, {3.5062184993148537`*^9, 3.5062185004848557`*^9}, {
   3.537137145030026*^9, 3.537137151198946*^9}},
 FontSize->10,
 Background->None]
}, Closed]],

Cell["Level-2 Specific functions", "Section"],

Cell[CellGroupData[{

Cell["getSBMLlevel2", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getSBMLlevel2", "[", 
    RowBox[{"sbml_", ",", "filename_", ",", " ", 
     RowBox[{"opt___", "?", "OptionQ"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{
      "models", ",", " ", "modelid", ",", "   ", "statistics", ",", 
       "modelCounterString", ",", " ", "modelName", ",", 
       RowBox[{"importedModel", "=", 
        RowBox[{"{", "}"}]}], ",", " ", "numericalSolution", ",", " ", 
       RowBox[{"dbg", "=", "False"}], ",", " ", "addConstantSpeciesBackIn", 
       ",", "expressRule", ",", "sm", ",", "t0", ",", "cpu", ",", 
       "modelmetaid"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dbg", "=", 
       RowBox[{
        RowBox[{"Global`debug", "/.", 
         RowBox[{"{", "opt", "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"Global`debug", "\[Rule]", " ", "False"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"expressRule", "[", 
        RowBox[{"Rule", "[", 
         RowBox[{
          RowBox[{"a_", "?", "StringQ"}], ",", " ", 
          RowBox[{"b_", "?", "StringQ"}]}], "]"}], "]"}], ":=", " ", 
       RowBox[{"Rule", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", "a", "]"}], ",", " ", 
         RowBox[{"ToExpression", "[", "b", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"addConstantSpeciesBackIn", "[", "id_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"removeReplacementRule", "[", "id", "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"defineVariable", "[", "id", "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"addDummyODE", "[", "id", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"addConstantSpeciesBackIn", "[", "x___", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Error: getSBMLLevel2: addConstantSpeciesBackIn: x=\>\"", ",", 
           "x"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SBML$Trace", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Global`trace", "/.", 
          RowBox[{"{", "opt", "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{"Global`trace", "\[Rule]", " ", "False"}], "}"}]}], ")"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$UnitAssociations", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$ODES", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$NameIDAssociations", "=", 
       RowBox[{"{", "}"}]}], ";", "  ", "\[IndentingNewLine]", 
      RowBox[{"$SBML$ConstantSpecies", "=", 
       RowBox[{"{", "}"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"$SBML$SpeciesThatAreAmounts", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$SpeciesThatAreConcentrations", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$Species$IDs", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$StoichiometryMatrix", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$IDTable", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$MetaIDTable", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$LocalReactionParameterTable", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$KineticLaws", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$MetaIDAssociations", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "hasOnlySubstanceUnitsIndicator", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hasOnlySubstanceUnitsIndicator", "[", "x_", "]"}], ":=", " ", 
       "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", "SBMLSpeciesCompartment", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SBMLSpeciesCompartment", "[", "x_", "]"}], ":=", 
       "Indeterminate"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
        RowBox[{"dbg", "\[Or]", " ", "SBML$Trace"}], ",", 
        "\"\<getSBMLevel2: SBML level.version = \>\"", ",", " ", 
        "$SBML$Level$Version"}], " ", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$SBML$printModelName", ",", "\[IndentingNewLine]", 
        RowBox[{"modelCounterString", "=", 
         RowBox[{"\"\< ********** Model \>\"", "<>", 
          RowBox[{"ToString", "[", "$SBML$modelcount", "]"}], "<>", 
          "\"\< ********** \\n\>\""}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"modelCounterString", "=", "\"\<\>\""}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", " ", 
        RowBox[{
         RowBox[{"verboseSave", "[", 
          RowBox[{
           RowBox[{
           "modelCounterString", "<>", "\"\<File Name:\>\"", "<>", " ", 
            "filename", "<>", "\"\<\\nSBML Level \>\"", "<>", 
            RowBox[{"ToString", "[", "$SBML$Level", "]"}], "<>", 
            "\"\< Version \>\"", "<>", 
            RowBox[{"ToString", "[", "$SBML$Version", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"getSBMLNotes", "[", "sbml", "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "check", " ", "for", " ", "extraneous", " ", "objects", " ", "in", " ",
         "file"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s", ",", " ", "objects"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"s", "=", 
          RowBox[{"First", "[", "sbml", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"objects", "[", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<sbml\>\"", ",", "a_", ",", " ", "b_"}], "]"}], "]"}],
           ":=", " ", "b"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{
           RowBox[{"objects", "[", "s", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"XMLElement", "\[Rule]", " ", "List"}], "}"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"s", "=", 
          RowBox[{"First", "/@", "s"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s", "=", " ", 
          RowBox[{"Complement", "[", 
           RowBox[{"s", ",", " ", 
            RowBox[{"{", 
             RowBox[{
             "\"\<model\>\"", ",", " ", "\"\<notes\>\"", ",", " ", 
              "\"\<annotation\>\""}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
             "\"\< Unknown or invalid object:\>\"", "//", "boldBlack"}], ",", 
             " ", 
             RowBox[{"#", "//", "boldBlue"}], ",", " ", 
             RowBox[{
             "\"\< in SBML container. Allowed objects are: \>\"", "//", 
              "boldBlack"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{"\"\<annotation, \>\"", "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\<notes, \>\"", "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\<model\>\"", "//", "boldBlue"}]}], 
            "\[IndentingNewLine]", "]"}], "&"}], "/@", "s"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{"**", "**", " ", "Models"}], " ", "*****)"}],
       FontColor->RGBColor[0, 1, 0]], 
      StyleBox["\[IndentingNewLine]",
       FontColor->RGBColor[0, 1, 0]], "\[IndentingNewLine]", 
      RowBox[{"$SBML$Model", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"sbml", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<model\>\"", ",", "___"}], "]"}], ",", "3"}], "]"}]}], 
      ";", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"modelid", ",", " ", "modelName", ",", " ", "modelmetaid"}], 
        "}"}], "=", 
       RowBox[{"getLevel2ModelName", "[", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MB$ID", "=", "modelid"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"MB$Name", "=", "modelName"}], ";", "\[IndentingNewLine]", 
         RowBox[{"MB$MetaID", "=", "modelmetaid"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"newModel", "[", 
          RowBox[{
           RowBox[{"Global`level", "\[Rule]", " ", "$SBML$Level"}], ",", 
           RowBox[{"Global`version", "\[Rule]", " ", "$SBML$Version"}], ",", 
           " ", 
           RowBox[{"Global`echo", "\[Rule]", " ", "MB$Echo"}], ",", " ", 
           RowBox[{"Global`id", "\[Rule]", " ", "MB$ID"}], ",", " ", 
           RowBox[{"Global`name", "\[Rule]", " ", "MB$Name"}], ",", " ", 
           RowBox[{"Global`metaid", "\[Rule]", " ", "MB$MetaID"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"MB$ModelAnnotation", "=", 
          RowBox[{
           RowBox[{"getAnnotations", "[", "$SBML$Model", "]"}], "//", 
           "Flatten"}]}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"MB$ModelNotes", "=", 
          RowBox[{
           RowBox[{"getNotes", "[", "$SBML$Model", "]"}], "//", "Flatten"}]}],
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<getSBMLlevel2: MB$Load:\>\"", ",", "MB$Load"}], "]"}]}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<getSBMLlevel2: MB$ModelNotes:\>\"", ",", "MB$ModelNotes"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$Model", " ", "=", " ", 
       RowBox[{"First", "[", "$SBML$Model", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"checkModelOrder", "[", "$SBML$Model", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
        RowBox[{"dbg", "\[Or]", " ", "SBML$Trace"}], ",", 
        "\"\<getSBMLlevel2:: modelid, modelName\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"modelid", ",", "modelName"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<$SBML$Model: \>\"", ",", "$SBML$Model"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2Functions\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2Functions", "[", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{"SBML$Trace", ",", "\"\<Trace>> Calling getLevel2units\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2units", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", 
        "\"\<Trace>> Calling getLevel2compartmentTypes\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2compartmentTypes", "[", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2speciesTypes\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2speciesTypes", "[", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2compartments\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2compartments", "[", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2species\>\""}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2species", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2parameters\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2parameters", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SBMLBoundaryConditionQ", "[", "unknownX_", "]"}], ":=", " ", 
       "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SBMLConstantQ", "[", "unknownX_", "]"}], ":=", " ", "False"}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"getLevel2InitialAssignments", "[", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{"SBML$Trace", ",", "\"\<Trace>> Calling getLevel2rules\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2rules", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"getLevel2constraints", "[", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{
       "SBML$Trace", ",", "\"\<Trace>> Calling getLevel2reactions\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"t0", "=", 
       RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2reactions", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cpu", "=", 
       RowBox[{
        RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"SBML$Trace", ",", "\"\<CPU: \>\"", ",", "cpu"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"checkParameterShadowing", "[", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{"SBML$Trace", ",", "\"\<Trace>> Calling getLevel2events\>\""}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"getLevel2events", "[", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"addConstantSpeciesBackIn", "/@", "$SBML$ConstantSpecies"}], 
        ";"}], " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", " ", "Verbose"}], " ", "Listing"}], " ", 
        "*****)"}],
       FontColor->RGBColor[0, 1, 0]], "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{"SBML$Trace", ",", "\"\<Trace>> Handling Verbose data\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"$SBML$verbose", ",", " ", 
        RowBox[{"verbosePrint", "[", "]"}]}], "]"}], ";", " ", 
      StyleBox["\[IndentingNewLine]",
       FontColor->RGBColor[0, 1, 0]], "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", " ", "Return"}], " ", "Data"}], " ", "*****)"}],
       FontColor->RGBColor[0, 1, 0]], "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", " ", 
       RowBox[{"SBML$Trace", ",", "\"\<Trace>> Handling Return data\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"SBMLRead$return", ",", 
        StyleBox["\[IndentingNewLine]",
         FontColor->RGBColor[0, 1, 0]], 
        StyleBox["\[IndentingNewLine]",
         FontColor->RGBColor[0, 1, 0]], 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnContext", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLContext", "\[Rule]", " ", "$SBML$Context"}]}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnODES", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{"Global`SBMLODES", "\[Rule]", " ", "$SBML$ODES"}]}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnIC", ",", " ", 
           RowBox[{"importedModel", "=", "\[IndentingNewLine]", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", "\[IndentingNewLine]", 
              RowBox[{"Global`SBMLIC", "\[Rule]", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"initialize", "[", "SBMLVariables", "]"}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnConstants", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{"Global`SBMLConstants", "\[Rule]", 
               RowBox[{"(", "SBMLReplacementRules", ")"}]}]}], "]"}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnBoundaryConditions", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{"Global`SBMLBoundaryConditions", "\[Rule]", 
               RowBox[{"(", "SBMLBoundaryConditions", ")"}]}]}], "]"}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnGlobalParameters", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{"Global`SBMLParameters", "\[Rule]", 
               RowBox[{"(", "SBMLGlobalParameters", ")"}]}]}], "]"}]}]}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnSpeciesTypes", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">",
                "2.15"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"importedModel", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"importedModel", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Global`SBMLSpeciesTypes", "\[Rule]", 
                    "$SBML$SpeciesTypes"}], " ", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Global`SBMLSpeciesTypeAssociations", "\[Rule]", " ", 
                    "$SBML$SpeciesTypeAssociations"}]}], 
                   "\[IndentingNewLine]", "}"}]}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnMetaIDAssociations", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{"Global`SBMLMetaIDAssociations", "\[Rule]", 
               RowBox[{"(", "$SBML$MetaIDAssociations", ")"}]}]}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnCompartmentTypes", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">",
                "2.15"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"importedModel", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"importedModel", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Global`SBMLCompartmentTypes", "\[Rule]", 
                    "$SBML$CompartmentTypes"}], ",", 
                    RowBox[{
                    "Global`SBMLCompartmentTypeAssociations", "\[Rule]", " ", 
                    "$SBML$CompartmentTypeAssociations"}]}], "}"}]}], " ", 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnSpecies", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", "\[IndentingNewLine]", 
              RowBox[{"Global`SBMLSpecies", "\[Rule]", 
               RowBox[{"functionate", "[", "$SBML$Species$IDs", "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnModelVariables", ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", "\[IndentingNewLine]", 
               RowBox[{"Global`SBMLModelVariables", "\[Rule]", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{"functionate", "[", "SBMLVariables", "]"}], 
                 "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnAssignmentRules", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLAssignmentRules", "\[Rule]", " ", 
               "$SBML$Assignment$Rules"}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnAlgebraicRules", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLAlgebraicRules", "\[Rule]", " ", 
               "$SBML$Algebraic$Rules"}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.15"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"SBMLRead$returnConstraints", ",", " ", 
              RowBox[{"importedModel", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"importedModel", ",", 
                 RowBox[{
                 "Global`SBMLConstraints", "\[Rule]", " ", 
                  "$SBML$Constraints"}]}], "]"}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{"SBMLRead$returnInitialAssignments", ",", " ", 
              RowBox[{"importedModel", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"importedModel", ",", 
                 RowBox[{
                 "Global`SBMLInitialAssignments", "\[Rule]", " ", 
                  "$SBML$InitialAssignments"}]}], "]"}]}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnReactions", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLReactions", "\[Rule]", " ", "$SBML$Reactions"}]}], 
             "]"}]}]}], "]"}], ";", 
         StyleBox["\[IndentingNewLine]",
          FontColor->RGBColor[0, 1, 0]], 
         StyleBox["\[IndentingNewLine]",
          FontColor->RGBColor[0, 1, 0]], 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnKineticLaws", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLKineticLaws", "\[Rule]", " ", 
               "$SBML$KineticLaws"}]}], "]"}]}]}], "]"}], ";", 
         StyleBox["\[IndentingNewLine]",
          FontColor->RGBColor[0, 1, 0]], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnStoichiometryMatrix", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{
               "Global`SBMLStoichiometryMatrix", "\[Rule]", 
                "$SBML$StoichiometryMatrix"}]}], " ", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnConservationMatrix", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MatrixQ", "[", "$SBML$StoichiometryMatrix", "]"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"importedModel", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"importedModel", ",", " ", 
                 RowBox[{"Global`SBMLConservationMatrix", "\[Rule]", 
                  RowBox[{
                  "conservationMatrix", "[", "$SBML$StoichiometryMatrix", " ",
                    "]"}]}]}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"importedModel", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"importedModel", ",", " ", 
                 RowBox[{"Global`SBMLConservationMatrix", "\[Rule]", 
                  RowBox[{"{", "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnMassBalanceEquations", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{
               "Global`SBMLMassBalanceEquations", "\[Rule]", 
                "SBML$MassBalanceEquations"}]}], " ", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnMassActionEquations", ",", " ", 
           RowBox[{
            RowBox[{"importedModel", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{
               "Global`SBMLMassActionEquations", "\[Rule]", " ", 
                "SBML$MassAction$Equations"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"importedModel", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{
               "Global`SBMLMassActionVariables", "\[Rule]", 
                "$SBML$MassActionVariables"}]}], " ", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnFunctions", ",", 
           RowBox[{
            RowBox[{"importedModel", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{
               "Global`SBMLFunctions", "\[Rule]", " ", "$SBML2$Functions"}]}],
               "]"}]}], ";"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnUnitDefinitions", ",", " ", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLUnitDefinitions", "\[Rule]", " ", 
               "$SBML$UnitRules"}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnUnitAssociations", ",", 
           RowBox[{"importedModel", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"importedModel", ",", 
              RowBox[{
              "Global`SBMLUnitAssociations", "\[Rule]", " ", 
               "$SBML$UnitAssociations"}]}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnNameIDAssociations", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{
               "Global`SBMLNameIDAssociations", "\[Rule]", " ", 
                "$SBML$NameIDAssociations"}]}], "]"}]}], ";"}]}], " ", 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnEvents", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{
               "Global`SBMLEvents", "\[Rule]", " ", "$SBML$Events"}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnModelName", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{
               "Global`SBMLModelName", "\[Rule]", " ", "modelName"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{"Global`SBMLModelid", "\[Rule]", " ", "modelid"}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"SBMLRead$returnCompartments", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{"Global`SBMLCompartments", "\[Rule]", " ", 
                RowBox[{"ToExpression", "/@", "$SBML$Compartmentids"}]}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "SBMLRead$returnSpeciesCompartmentAssociations", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", 
               RowBox[{
               "Global`SBMLSpeciesCompartmentAssociations", "\[Rule]", " ", 
                RowBox[{
                "expressRule", "/@", 
                 "$SBML$SpeciesCompartmentAssociations"}]}]}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SBMLRead$returnSolution", ">", "0"}], ",", " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"debugPrint", "[", " ", 
             RowBox[{"SBML$Trace", ",", 
              RowBox[{
              "\"\<Trace>> Determining Numerical Solution, duration = \>\"", "<>", 
               RowBox[{"ToString", "[", "SBMLRead$returnSolution", "]"}], 
               "<>", "\"\< NDSolveOptions-> \>\"", "<>", 
               RowBox[{"ToString", "[", "SBML$NDSolveOptions", "]"}]}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"numericalSolution", " ", "=", " ", 
             RowBox[{"SBMLNDSolve", "[", 
              RowBox[{
              "importedModel", ",", " ", "SBMLRead$returnSolution", ",", " ", 
               "SBML$NDSolveOptions"}], "]"}]}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"importedModel", " ", "=", " ", 
             RowBox[{"Append", "[", 
              RowBox[{"importedModel", ",", " ", 
               RowBox[{
               "Global`SBMLNumericalSolution", "\[Rule]", " ", 
                "numericalSolution"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"importedModel", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"importedModel", ",", " ", 
         RowBox[{"Global`SBMLLevelVersion", "\[Rule]", " ", 
          RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"printStatistics", "[", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MB$Load", " ", "\[And]", " ", "MB$Echo"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"\"\<SMBL Model \>\"", "//", "boldGreen"}], ",", " ", 
           RowBox[{"modelid", "//", "boldBlue"}], ",", 
           RowBox[{
           "\"\< loaded into Model Builder \>\"", "//", "boldGreen"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "importedModel", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.432491856531539*^9, 3.43249186428997*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["checkModelOrder", "Subsection"],

Cell["added 2.5.28 9/15/06", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"checkModelOrder", "[", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<model\>\"", ",", " ", "stuff_", ",", " ", "morestuff_"}], 
      "]"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", " ", "so", ",", " ", "types", ",", " ", "order", ",", " ", 
        "bad", ",", " ", "number", ",", " ", "numbers", ",", "lv"}], "}"}], 
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lv", " ", "=", " ", 
        RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"lv", " ", "<", " ", "2.15"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"types", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<listOfFunctionDefinitions\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfUnitDefinitions\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfCompartments\>\"", ",", " ", "\[IndentingNewLine]", 
             "\"\<listOfSpecies\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfParameters\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfRules\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfReactions\>\"", ",", " ", "\[IndentingNewLine]", 
             "\"\<listOfEvents\>\""}], "\[IndentingNewLine]", "}"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"types", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<listOfFunctionDefinitions\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfUnitDefinitions\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfCompartmentTypes\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfSpeciesTypes\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfCompartments\>\"", ",", " ", "\[IndentingNewLine]", 
             "\"\<listOfSpecies\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfParameters\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfInitialAssignments\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfRules\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfConstraints\>\"", ",", "\[IndentingNewLine]", 
             "\"\<listOfReactions\>\"", ",", " ", "\[IndentingNewLine]", 
             "\"\<listOfEvents\>\""}], "\[IndentingNewLine]", "}"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"order", "[", "x_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"types", ",", "x"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{"morestuff", "/.", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "\[Rule]", " ", "List"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{"First", "/@", "s"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"s", ",", " ", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<notes\>\"", ",", " ", "\"\<annotation\>\""}], 
               "}"}], ",", " ", "#"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "see", " ", "if", " ", "there", " ", "are", " ", "unknown", " ", 
         "model", " ", "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"bad", " ", "=", " ", 
        RowBox[{"Complement", "[", 
         RowBox[{"s", ",", " ", "types"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
           RowBox[{
           "\"\<The model contains an unknown top level element \>\"", "//", 
            "boldBlack"}], ",", " ", 
           RowBox[{"#", "//", "boldBlue"}]}], "]"}], "&"}], "/@", "bad"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"s", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"s", ",", " ", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"types", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "see", " ", "if", " ", "there", " ", "are", " ", "duplicated", " ", 
         "elements"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"number", "[", "object_", "]"}], ":=", " ", 
        RowBox[{"Length", "[", 
         RowBox[{"Position", "[", 
          RowBox[{"s", ",", " ", "object"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"numbers", " ", "=", " ", 
        RowBox[{"number", "/@", "types"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", ">", "1"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
              RowBox[{
              "\"\<The model contains multiple \>\"", "//", "boldBlack"}], 
              ",", " ", 
              RowBox[{"#2", "//", "boldBlue"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"numbers", ",", " ", "types"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "see", " ", "if", " ", "the", " ", "elements", " ", "are", " ", "in", 
         " ", "the", " ", "correct", " ", "order"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"so", " ", "=", " ", 
        RowBox[{"order", "/@", "s"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "i", ",", "type1", ",", " ", "type2", ",", " ", "i1", ",", " ", 
           "i2"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "2"}], ",", " ", 
            RowBox[{"i", "\[LessEqual]", " ", 
             RowBox[{"Length", "[", "s", "]"}]}], ",", " ", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"i1", "=", 
              RowBox[{"so", "[", 
               RowBox[{"[", 
                RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"i2", "=", 
              RowBox[{"so", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i1", ">", "i2"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"type1", "=", 
                 RowBox[{"types", "[", 
                  RowBox[{"[", "i1", "]"}], "]"}]}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"type2", "=", 
                 RowBox[{"types", "[", 
                  RowBox[{"[", "i2", "]"}], "]"}]}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                  "\"\< The model contains objects that are not in the proper \
order: \>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"type2", "//", "boldBlue"}], " ", ",", " ", 
                  RowBox[{
                  "\"\< is not allowed to follow \>\"", "//", "boldBlack"}], 
                  ",", " ", 
                  RowBox[{"type1", "//", "boldBlue"}], ",", " ", 
                  RowBox[{
                  "\"\<\\nThe proper order is:\\n\>\"", "//", "boldBlack"}], 
                  ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"StringJoin", "@@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "\"\<\\t\\t\>\"", "<>", "#", "<>", "\"\<\\n\>\""}], "&"}],
                     "/@", "types"}], ")"}]}], ")"}], "\[IndentingNewLine]", "//",
                    "boldBlue"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"checkModelOrder", "[", "u_", "]"}], ":=", 
    RowBox[{"Print", "[", 
     RowBox[{
      RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
      RowBox[{"\"\<checkModelOrder: not a model:\>\"", "//", "boldBlack"}], 
      ",", " ", 
      RowBox[{"u", "//", "boldBlue"}]}], "]"}]}], ";"}], " "}]}], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
check for identifier collision: addID, removeID, collisionCheck\
\>", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{"$$LoadBug", ",", " ", 
    RowBox[{
    "Print", "[", "\"\<Loading: level-2 specific functions\>\"", "]"}]}], 
   "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$SBML$IDTable", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "force", " ", "initialization", " ", "at", " ", "load", " ", "time"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$SBML$MetaIDTable", "=", 
    RowBox[{"{", "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "force", " ", "initialization", " ", "at", " ", "load", " ", "time"}], " ",
    "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"identifyID", "[", "id_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "type", "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Position", "[", 
        RowBox[{"$SBML$IDTable", ",", " ", "id"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "p", "]"}], ">", "0"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p", "=", 
          RowBox[{"p", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"type", "=", 
          RowBox[{"$SBML$IDTable", "[", 
           RowBox[{"[", 
            RowBox[{"p", ",", " ", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "type", "]"}], ";"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\"\<Unknown\>\"", "]"}], ";"}]}], " ", 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addID", "[", 
    RowBox[{"id_", ",", " ", "kind_", ",", " ", 
     RowBox[{"check_:", "True"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"did", ",", " ", 
       RowBox[{"dbg", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<addID: adding: kind: \>\"", ",", " ", "kind", ",", " ", 
           "\"\< id: \>\"", ",", " ", "id"}], "]"}], ";"}]}], " ", "]"}], ";",
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"did", " ", "=", " ", 
       RowBox[{"decontextify", "[", "id", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", 
        RowBox[{"collisionCheck", "[", 
         RowBox[{"did", ",", "kind", ",", "True"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$IDTable", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"$SBML$IDTable", ",", " ", 
         RowBox[{"stringer", "/@", 
          RowBox[{"{", 
           RowBox[{"did", ",", "kind"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "id", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"addMetaID", "[", 
    RowBox[{"meta_", ",", " ", "id_", ",", " ", "kind_", ",", " ", 
     RowBox[{"check_:", "True"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"did", ",", " ", 
       RowBox[{"dbg", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<addMetaID: meta(in): \>\"", ",", " ", "meta"}], "]"}]}],
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"did", " ", "=", " ", 
       RowBox[{"decontextify", "[", "meta", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", 
        RowBox[{"metacollisionCheck", "[", 
         RowBox[{"did", ",", "id", ",", "kind", ",", "True"}], "]"}]}], "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"$SBML$MetaIDTable", ",", " ", 
        RowBox[{"stringer", "/@", 
         RowBox[{"{", 
          RowBox[{"did", ",", "kind"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"$SBML$MetaIDAssociations", ",", " ", "\[IndentingNewLine]", 
        RowBox[{"Rule", "[", 
         RowBox[{"did", ",", " ", 
          RowBox[{"stringer", "[", "id", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<addMetaID: meta(out): \>\"", ",", " ", 
          RowBox[{"meta", "\[Rule]", " ", "id"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "meta", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeID", "[", 
    RowBox[{"id_", ",", " ", "kind_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"did", ",", " ", "matches", ",", " ", "meta", ",", " ", 
       RowBox[{"dbg", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<removeID:\>\"", ",", " ", 
          RowBox[{"{", 
           RowBox[{"id", " ", ",", " ", "kind"}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"did", "=", 
       RowBox[{"decontextify", "[", "id", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"$SBML$IDTable", ",", " ", 
           RowBox[{"stringer", "/@", 
            RowBox[{"{", 
             RowBox[{"did", ",", "kind"}], "}"}]}]}], "]"}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"matches", " ", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"$SBML$IDTable", ",", " ", 
            RowBox[{
             RowBox[{"Equal", "[", 
              RowBox[{
               RowBox[{"stringer", "[", "id", "]"}], ",", " ", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], 
         ";", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", " ", 
             RowBox[{"\"\<removeID: \>\"", "//", "boldBlack"}], ",", " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\< is listed as a \>\"", "//", "boldBlack"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\< and not as a \>\"", "//", "boldBlack"}], ",", "  ", 
             RowBox[{"kind", "//", "boldBlue"}], ",", 
             RowBox[{"\"\< in the symbol table.\>\"", "//", "boldBlack"}]}], 
            "]"}], "&"}], "/@", "matches"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", " ", 
         RowBox[{"\"\<removeID:  stringer/@{did,kind}: \>\"", ",", " ", 
          RowBox[{"stringer", "/@", 
           RowBox[{"{", 
            RowBox[{"did", ",", "kind"}], "}"}]}]}], "]"}]}], "]"}], ";", " ",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$IDTable", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"$SBML$IDTable", ",", " ", 
         RowBox[{"{", 
          RowBox[{"stringer", "/@", 
           RowBox[{"{", 
            RowBox[{"did", ",", "kind"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"remove", " ", "any", " ", 
        RowBox[{"metaid", "'"}], "s", " ", "that", " ", "are", " ", 
        "pointing", " ", "to", " ", "this", " ", 
        RowBox[{"id", "!!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"meta", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"$SBML$MetaIDAssociations", ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Equal", "[", 
           RowBox[{"id", ",", " ", 
            RowBox[{"decontextify", "[", 
             RowBox[{"Last", "[", "#", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "meta", "]"}], ">", "0"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"meta", " ", "=", " ", 
          RowBox[{"First", "/@", "meta"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"dbg", ",", " ", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<removeID: meta: \>\"", ",", " ", "meta"}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"removeMetaID", "[", 
            RowBox[{"#", ",", " ", "kind"}], "]"}], "&"}], "/@", "meta"}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"$SBML$MetaIDAssociations", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"$SBML$MetaIDAssociations", ",", " ", "meta"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"dbg", ",", " ", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<removeID: $SBML$MetaIDAssociations: \>\"", ",", " ", 
             "$SBML$MetaIDAssociations"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"dbg", ",", " ", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<removeID: $SBML$MetaIDTable: \>\"", ",", " ", 
             "$SBML$MetaIDTable"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", " ", "\[IndentingNewLine]", "]"}], ";"}]}], " ",
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeMetaID", "[", 
    RowBox[{"id_", ",", " ", "kind_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"did", ",", " ", "matches", ",", " ", 
       RowBox[{"dbg", "=", "False"}], ",", " ", "sel"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"did", "=", 
       RowBox[{"decontextify", "[", "id", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"$SBML$MetaIDTable", ",", " ", 
           RowBox[{"stringer", "/@", 
            RowBox[{"{", 
             RowBox[{"did", ",", "kind"}], "}"}]}]}], "]"}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"matches", " ", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"$SBML$MetaIDTable", ",", " ", 
            RowBox[{
             RowBox[{"Equal", "[", 
              RowBox[{
               RowBox[{"stringer", "[", "id", "]"}], ",", " ", 
               RowBox[{"First", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], 
         ";", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", " ", 
             RowBox[{"\"\<removeMetaID: \>\"", "//", "boldBlack"}], ",", " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\< is listed as a \>\"", "//", "boldBlack"}], ",", 
             " ", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\< and not as a \>\"", "//", "boldBlack"}], ",", "  ", 
             RowBox[{"kind", "//", "boldBlue"}], ",", 
             RowBox[{"\"\< in the symbol table.\>\"", "//", "boldBlack"}]}], 
            "]"}], "&"}], "/@", "matches"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$MetaIDTable", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"$SBML$MetaIDTable", ",", 
         RowBox[{"{", " ", 
          RowBox[{"stringer", "/@", 
           RowBox[{"{", 
            RowBox[{"did", ",", "kind"}], "}"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<removeMetaID: kind: \>\"", ",", " ", "kind"}], "]"}]}], 
       "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<removeMetaID: did: \>\"", ",", " ", "did"}], "]"}]}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$MetaIDAssociations", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"$SBML$MetaIDAssociations", ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"First", "[", "#", "]"}], " ", "\[NotEqual]", " ", 
            "did"}], " ", ")"}], "&"}]}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"collisionCheck", "[", 
    RowBox[{"id_", ",", " ", "kind_", ",", " ", 
     RowBox[{"msg_:", "True"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matches", ",", "found"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"matches", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"$SBML$IDTable", ",", " ", 
         RowBox[{
          RowBox[{"Equal", "[", 
           RowBox[{
            RowBox[{"stringer", "[", "id", "]"}], ",", " ", 
            RowBox[{"First", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"found", " ", "=", " ", 
       RowBox[{
        RowBox[{"Length", "[", "matches", "]"}], ">", "0"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"msg", ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
             RowBox[{"kind", "//", "boldBlue"}], ",", " ", 
             RowBox[{"\"\<:\>\"", "//", "boldBlack"}], ",", " ", 
             RowBox[{"id", "//", "boldBlue"}], ",", 
             RowBox[{
             "\"\< collides with previously defined \>\"", "//", 
              "boldBlack"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "//", "boldBlue"}], ",", 
             RowBox[{"\"\<:\>\"", "//", "boldBlack"}], ",", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "//", "boldBlue"}]}], "]"}], 
           "&"}], "/@", "matches"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", " ", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "matches", "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"metacollisionCheck", "[", 
   RowBox[{"metaid_", ",", "id_", ",", " ", "kind_", ",", " ", 
    RowBox[{"msg_:", "True"}]}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matches", ",", "found"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"matches", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"$SBML$MetaIDTable", ",", " ", 
        RowBox[{
         RowBox[{"Equal", "[", 
          RowBox[{
           RowBox[{"stringer", "[", "metaid", "]"}], ",", " ", 
           RowBox[{"First", "[", "#", "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"found", " ", "=", " ", 
      RowBox[{
       RowBox[{"Length", "[", "matches", "]"}], ">", "0"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"msg", ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
            RowBox[{"kind", "//", "boldBlue"}], ",", " ", 
            RowBox[{"\"\< metaid:\>\"", "//", "boldBlack"}], ",", " ", 
            RowBox[{"metaid", "//", "boldBlue"}], ",", 
            RowBox[{"\"\< (id=\>\"", "//", "boldBlack"}], ",", " ", 
            RowBox[{
             RowBox[{"decontextify", "[", "id", "]"}], "//", "boldBlue"}], 
            ",", " ", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<) collides with previously defined \>\"", "//", 
             "boldBlack"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "//", "boldBlue"}], ",", 
            RowBox[{"\"\< metaid:\>\"", "//", "boldBlack"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"\"\< (id = \>\"", "//", "boldBlack"}], " ", ",", 
            RowBox[{"boldBlue", "[", " ", 
             RowBox[{"decontextify", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/.", 
               RowBox[{"(", "$SBML$MetaIDAssociations", ")"}]}], "]"}], "]"}],
             ",", " ", 
            RowBox[{"\"\<)\>\"", "//", "boldBlack"}]}], "\[IndentingNewLine]",
            "]"}], "&"}], "/@", "matches"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "matches", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.389969295676838*^9, 3.389969331119722*^9}, {
  3.3899709783208027`*^9, 3.389970979413519*^9}, {3.396980399813408*^9, 
  3.396980400606626*^9}, {3.396980437782756*^9, 3.396980441363085*^9}, {
  3.396981901758155*^9, 3.396981902570228*^9}, {3.396987155987578*^9, 
  3.396987184012267*^9}, {3.396987217608343*^9, 3.396987303174205*^9}, {
  3.3969873448451347`*^9, 3.396987366761044*^9}, {3.396987410831827*^9, 
  3.3969874112376013`*^9}, {3.396987446589666*^9, 3.396987450405746*^9}, {
  3.3969874825315933`*^9, 3.396987486439332*^9}, {3.3969892229862022`*^9, 
  3.396989252258383*^9}, {3.39704891251832*^9, 3.397048913096354*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2ModelName", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2ModelName", "[", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "modeloptions", ",", " ", "modelid", ",", " ", "modelName", ",", " ", 
       "meta", ",", "sbo", ",", " ", "header"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"abortIfNoTag", "[", 
       RowBox[{"$SBML$Model", ",", " ", "\"\<model\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modeloptions", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"extractXMLOptions", ",", "$SBML$Model"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modelid", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<id\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<id\>\"", "\[Rule]", " ", 
             RowBox[{"\"\<Model\>\"", "<>", 
              RowBox[{"ToString", "[", "$SBML$modelcount", "]"}]}]}], "}"}]}],
           "&"}], ",", " ", "modeloptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"modelName", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<name\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", " ", "modeloptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"meta", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<metaid\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", " ", "modeloptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sbo", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<sboTerm\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", " ", "modeloptions"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "modelid", "]"}], "<", "1"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
           RowBox[{"\"\<no \>\"", "//", "boldBlack"}], ",", " ", 
           RowBox[{"\"\<model\>\"", "//", "boldBlue"}], ",", " ", 
           RowBox[{"\"\< found in SBML.\>\"", "//", "boldBlack"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
          RowBox[{
          "\"\<The SBML contains multiple models.\\nThe model \>\"", "//", 
           "boldBlack"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"First", "[", "modelid", "]"}], "//", "boldBlue"}], ",", 
          RowBox[{"\"\< will be used.\>\"", "//", "boldBlack"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<\\nThe model \>\"", "//", "boldBlack"}], ",", " ", 
          RowBox[{"#", "//", "boldBlue"}], ",", " ", 
          RowBox[{"\"\< will be ignored.\>\"", "//", "boldBlack"}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Rest", "[", "modelid", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"modelid", " ", "=", " ", 
       RowBox[{
        RowBox[{"First", "[", "modelid", "]"}], " ", "//", " ", 
        "makeIntoValidSId"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meta", " ", "=", " ", 
       RowBox[{
        RowBox[{"First", "[", "meta", "]"}], "//", "makeIntoValidSId"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"sbo", "=", 
       RowBox[{"First", "[", "sbo", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"SBML$CheckModelContext", ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Contexts", "[", "]"}], ",", 
             RowBox[{"modelid", "<>", "\"\<`\>\""}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"PreviousModelContexts", ",", 
                 RowBox[{"modelid", "<>", "\"\<`\>\""}]}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                 RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", " ", 
                 RowBox[{"\"\<The model id \>\"", "//", "boldBlack"}], ",", 
                 RowBox[{"modelid", "//", "boldBlue"}], ",", 
                 RowBox[{
                 "\"\< collides with an existing Mathematica context [this \
could occur if the model has been previously read during the same Mathematica \
session].\>\"", "//", "boldBlack"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "*)"}], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"modelName", " ", "=", " ", 
       RowBox[{"First", "[", "modelName", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"saveNameIDAssociation", "[", 
       RowBox[{"modelName", ",", "modelid"}], "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"header", "=", 
          RowBox[{"\"\<Model id: \>\"", "<>", "modelid"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"modelName", "\[NotEqual]", " ", "\"\<\>\""}], ",", " ", 
           RowBox[{"header", " ", "=", " ", 
            RowBox[{
            "\"\<Model name: \>\"", "<>", "modelName", "<>", "\"\<\\n\>\"", "<>",
              "header"}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"meta", "\[NotEqual]", " ", "\"\<\>\""}], ",", " ", 
           RowBox[{"header", " ", "=", " ", 
            RowBox[{
            "header", "<>", "\"\<\\nModel metaid: \>\"", "<>", "meta"}]}]}], 
          "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"sbo", "\[NotEqual]", " ", "\"\<\>\""}], ",", " ", 
           RowBox[{"header", " ", "=", " ", 
            RowBox[{
            "header", "<>", "\"\<\\nModel sboTerm: \>\"", "<>", "sbo"}]}]}], 
          "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"verboseSave", "[", 
          RowBox[{"header", ",", " ", 
           RowBox[{"{", "}"}], ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"setModelContext", "[", "modelid", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"modelid", ",", " ", "modelName", ",", " ", "meta"}], "}"}], 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["saveNameIDAssociation", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"saveNameIDAssociation", "[", 
    RowBox[{"name_", ",", " ", "id_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"name", "\[NotEqual]", " ", "\"\<\>\""}], ")"}], " ", 
          "\[And]", 
          RowBox[{"(", " ", 
           RowBox[{"name", "\[NotEqual]", " ", "id"}], ")"}], " ", "\[And]", 
          RowBox[{"(", " ", 
           RowBox[{"id", "\[NotEqual]", " ", "\"\<Indeterminate\>\""}], 
           ")"}]}], ")"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$SBML$NameIDAssociations", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"$SBML$NameIDAssociations", ",", " ", 
            RowBox[{"id", "\[Rule]", " ", "name"}]}], "]"}]}], ";"}]}], " ", 
       "\[IndentingNewLine]", "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2Functions", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getLevel2Functions", "[", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", ",", 
      RowBox[{"dbg", "=", "False"}], ",", " ", "getFunction", ",", "id", ",", 
      " ", "name", ",", "opts", ",", "args", ",", "functionDefinition", ",", 
      "htmlfunctiondef", ",", " ", "fdef", ",", " ", "farg", ",", "fid", ",", 
      "fname"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["getFunction",
        FontColor->RGBColor[0, 0, 1]], "[", "functionXML_", "]"}], ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "f", ",", "math", ",", "meta", ",", "sboTerm", ",", " ", "id", ",", 
          " ", "sym"}], "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "=", " ", "functionXML"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{"dbg", ",", "\"\<getFunction: f:\>\"", ",", " ", "f"}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"opts", " ", "=", " ", 
          RowBox[{"extractXMLOptions", "[", "f", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"id", " ", "=", " ", 
          RowBox[{
           RowBox[{"\"\<id\>\"", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<id\>\"", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
            "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"meta", " ", "=", " ", 
          RowBox[{
           RowBox[{"\"\<metaid\>\"", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}]}],
          ";", " ", "\[IndentingNewLine]", 
         RowBox[{"sboTerm", "=", 
          RowBox[{
           RowBox[{"\"\<sboTerm\>\"", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], 
            "}"}]}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"addID", "[", 
            RowBox[{"id", ",", " ", "\"\<function\>\""}], "]"}], ";"}], " ", 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"id", " ", "=", " ", 
          RowBox[{"makeIntoValidSId", "[", "id", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"stringer", "[", "id", "]"}], "==", 
            "\"\<Indeterminate\>\""}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"id", " ", "=", " ", 
             RowBox[{"\"\<function\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"MB$functioncounter", "++"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldOrange"}], ",", 
              RowBox[{
              "\"\<Required function id missing from <functionDefinition../>. \
Assigned \>\"", "//", "boldBlack"}], ",", 
              RowBox[{"id", "//", "boldRed"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"MB$Load", ",", 
           RowBox[{"addFunction", "[", "f", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"name", " ", "=", " ", 
          RowBox[{
           RowBox[{"\"\<name\>\"", "/.", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"id", " ", "=", " ", 
          RowBox[{"contextify", "[", "id", "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"checkForSymbolCollision", "[", 
          RowBox[{"id", ",", "\"\<function\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{"dbg", ",", "\"\<getFunction: {id, name}:\>\"", ",", " ", 
           RowBox[{"{", 
            RowBox[{"id", ",", " ", "name"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"math", "=", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{"f", ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<math\>\"", ",", "___"}], "]"}], ",", "3"}], "]"}]}],
          ";", " ", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "math", "]"}], ">", "0"}], ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"math", " ", "=", " ", 
            RowBox[{"First", "[", "math", "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", " ", 
              RowBox[{
              "\"\< getLevel2Functions: functionDefintion for \>\"", "//", 
               "boldBlack"}], ",", " ", 
              RowBox[{"id", "//", "boldBlue"}], ",", " ", 
              RowBox[{
              "\"\< is missing the <math> element:\\n\>\"", "//", 
               "boldBlack"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"XMLHighlightForm", "[", 
                RowBox[{
                "f", ",", "Purple", ",", " ", "\"\<functionDefinition\>\""}], 
                "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "f", "]"}], ";", "\[IndentingNewLine]", " ", 
            RowBox[{"Abort", "[", "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
          "]"}], ";", " ", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "dbg", ",", "\"\<getFunction: math:\>\"", ",", " ", "math"}], "]"}],
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "2.5", ".24", " ", "added", " ", "the", " ", "next", " ", "line"}], 
          " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"math", " ", "=", 
          RowBox[{"checkMathMLElements", "[", "math", "]"}]}], ";", 
         "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
         RowBox[{"functionDefinition", " ", "=", " ", 
          RowBox[{"SymbolicSBMLMathMLToExpression", "[", "math", "]"}]}], ";",
          "\[IndentingNewLine]", 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         StyleBox[
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "2.3", ".36", " ", "check", " ", "for", " ", "any", " ", 
             "symbols", " ", "that", " ", "are", " ", "not", " ", 
             "arguments"}], ",", " ", 
            RowBox[{
            "and", " ", "assume", " ", "that", " ", "they", " ", "are", " ", 
             "defined", " ", "somewhere", " ", "in", " ", "the", " ", 
             "model"}], ",", " ", 
            RowBox[{"such", " ", "as", " ", "other", " ", "functions"}], ",", 
            " ", 
            RowBox[{"and", " ", "contextify", " ", "them"}]}], " ", 
           "\[IndentingNewLine]", "*)"}],
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         RowBox[{"sym", " ", "=", 
          RowBox[{"getSymbols", "[", "functionDefinition", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"sym", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"sym", ",", 
            RowBox[{"{", " ", "Global`t", "}"}]}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"sym", "=", 
          RowBox[{"decontextify", "/@", "sym"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{"dbg", ",", "\"\<getFunction: sym:\>\"", ",", " ", "sym"}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          StyleBox[
           RowBox[{"list", " ", "of", " ", 
            RowBox[{"{", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"bvar", ",", "..."}], "]"}], " ", "}"}]}],
           FontWeight->"Plain"], " ", "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"args", " ", "=", " ", 
          RowBox[{"Cases", "[", 
           RowBox[{"functionXML", ",", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<bvar\>\"", ",", "___"}], "]"}], ",", " ", 
            "Infinity"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{"list", " ", "of", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"ci", ",", 
                RowBox[{"{", "}"}], ",", "variable"}], "]"}], ",", "..."}], 
             " ", "}"}]}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"args", " ", "=", " ", 
          RowBox[{"Flatten", "[", 
           RowBox[{"extractXMLSubElements", "/@", "args"}], "]"}]}], ";", " ",
          "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          StyleBox[" ",
           FontWeight->"Plain"], 
          StyleBox[
           RowBox[{"list", " ", "of", " ", "variable", " ", "names"}],
           FontWeight->"Plain"], 
          StyleBox[" ",
           FontWeight->"Plain"], "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"args", " ", "=", 
          RowBox[{"extractXMLSubElements", "/@", "args"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"args", " ", "=", " ", 
          RowBox[{"ToExpression", "/@", 
           RowBox[{"Flatten", "[", "args", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sym", " ", "=", " ", 
          RowBox[{"Complement", "[", 
           RowBox[{"sym", ",", "args"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sym", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Rule", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"contextify", "[", "#", "]"}]}], "]"}], "&"}], ",", 
            " ", "sym"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "dbg", ",", "\"\<getFunction: args:\>\"", ",", " ", "args"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{"dbg", ",", "\"\<getFunction: sym:\>\"", ",", " ", "sym"}], 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"functionDefinition", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"functionDefinition", "//.", "sym"}], ")"}], "//", 
            "InputForm"}], "//", "ToString"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "dbg", ",", "\"\<getFunction: functionDefinition:\>\"", ",", " ", 
           "functionDefinition"}], "]"}], ";", "\[IndentingNewLine]", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"$SBML2$Functions", " ", "=", " ", 
          RowBox[{"Append", "[", 
           RowBox[{"$SBML2$Functions", ",", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"id", "<>", "\"\<->\>\"", "<>", "functionDefinition"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"saveNameIDAssociation", "[", 
          RowBox[{"name", ",", "id"}], "]"}], ";", " ", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"!", "$SBML$verboseContext"}], ",", " ", 
              RowBox[{"id", " ", "=", " ", 
               RowBox[{"decontextify", "[", "id", "]"}]}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.15"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{
             "id", ",", "meta", ",", " ", "name", ",", " ", 
              "functionDefinition", ",", "sboTerm"}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{
             "id", ",", "meta", ",", " ", "name", ",", " ", 
              "functionDefinition"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"end", " ", "of", " ", 
       StyleBox["getFunction",
        FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"$SBML2$Functions", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"$SBML$Model", ",", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<listOfFunctionDefinitions\>\"", ",", "___"}], "]"}], 
        ",", "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"debugPrint", "[", 
      RowBox[{"dbg", ",", "\"\<getLevel2Functions: f(1): \>\"", ",", "f"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"f", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"f", ",", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<functionDefinition\>\"", ",", "___"}], "]"}], ",", 
        "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"debugPrint", "[", 
      RowBox[{"dbg", ",", "\"\<getLevel2Functions: f(2): \>\"", ",", "f"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{"getFunction", ",", " ", "f"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"debugPrint", "[", 
      RowBox[{"dbg", ",", "\"\<getLevel2Functions: f(3): \>\"", ",", "f"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"htmlfunctiondef", "[", "z_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "f", ",", "fdef", ",", "fid", ",", "fmeta", ",", " ", "fname"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "=", "z"}], ";", "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"f", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fid", "=", 
          RowBox[{"f", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fmeta", "=", 
          RowBox[{"f", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fname", "=", 
          RowBox[{"f", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fdef", "=", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"fdef", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<Function\>\"", "\[Rule]", " ", "\"\<\>\""}], 
             "}"}]}], " ", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"\"\<{\>\"", "<>", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{"fdef", ",", "1"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], "<>", "\"\<}\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"ToExpression", "[", "fdef", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"farg", " ", "=", 
          RowBox[{"fid", "<>", "\"\<[\>\"", "<>", 
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{"StringDrop", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"First", "[", "fdef", "]"}], "//", "stringer"}], ",", 
               "1"}], "]"}], ",", 
             RowBox[{"-", "1"}]}], "]"}], "<>", "\"\<]:=\>\""}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"StringDrop", "[", 
           RowBox[{
            RowBox[{"StringDrop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Rest", "[", "fdef", "]"}], "//", "stringer"}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"farg", "<>", "fdef"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"fdef", " ", "=", " ", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"fdef", ",", 
            RowBox[{"\"\<,\>\"", "\[Rule]", " ", "\"\<@COMMA\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"fname", ",", "fmeta", ",", " ", "fdef"}], "}"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
           "2.15"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Move", " ", "SBOTerm", " ", "from", " ", "part", " ", "5", " ", 
            "to", " ", "part", " ", "3"}], "*)"}], " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "f", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Block", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"f1", ",", "f2", ",", "f3", ",", "f4", ",", "f5"}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"f1", ",", "f2", ",", "f3", ",", "f4", ",", "f5"}],
                    "}"}], " ", "=", " ", 
                  RowBox[{"Transpose", "[", "f", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"f", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "f1", ",", "f2", ",", "f5", ",", "f3", ",", "f4"}], "}"}],
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
            "$SBML$OutputFormatIsHTML", ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"f", "=", 
               RowBox[{"htmlfunctiondef", "/@", "f"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"verboseSave", "[", 
               RowBox[{"\"\<Function Definitions\>\"", ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Name\>\"", ",", "\"\<MetaID\>\"", ",", 
                  "\"\<SBOTerm\>\"", ",", " ", 
                  "\"\<Definition (id[arguments]:=def)\>\""}], "}"}], ",", 
                " ", "f"}], "]"}]}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"verboseSave", "[", 
              RowBox[{"\"\<Function Definitions\>\"", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", 
                 "\"\<SBOTerm\>\"", ",", "\"\<Name\>\"", ",", " ", 
                 "\"\<Function Definition\>\""}], "}"}], ",", " ", "f"}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
            "$SBML$OutputFormatIsHTML", ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"f", "=", 
               RowBox[{"htmlfunctiondef", "/@", "f"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"verboseSave", "[", 
               RowBox[{"\"\<Function Definitions\>\"", ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Name\>\"", ",", "\"\<MetaID\>\"", ",", " ", 
                  "\"\<Definition (id[arguments]:=def)\>\""}], "}"}], ",", 
                " ", "f"}], "]"}]}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"verboseSave", "[", 
              RowBox[{"\"\<Function Definitions\>\"", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", "\"\<Name\>\"",
                  ",", " ", "\"\<Function Definition\>\""}], "}"}], ",", " ", 
               "f"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.396031062467033*^9, 3.396031062999259*^9}, {
  3.3960311070628157`*^9, 3.396031111169544*^9}, {3.3960314130804033`*^9, 
  3.396031453847007*^9}, {3.3960319160482397`*^9, 3.396031921510418*^9}, {
  3.396032174702784*^9, 3.396032236329136*^9}, {3.396032275355641*^9, 
  3.3960322758158083`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2units", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2units", "[", 
    RowBox[{"opt___", "?", "OptionQ"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "\[IndentingNewLine]", 
       RowBox[{"dbg", "=", "False"}], ",", "defaultUnitsNeeded", ",", 
       "defaultUnitRules", ",", "checkBuiltInRedef", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"specTable3", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<substance\>\"", "\[Rule]", " ", "\"\<mole\>\""}], ",", 
          RowBox[{"\"\<volume\>\"", "\[Rule]", " ", "\"\<litre\>\""}], ",", 
          " ", 
          RowBox[{"\"\<time\>\"", "\[Rule]", " ", "\"\<second\>\""}], ",", 
          RowBox[{"\"\<area\>\"", "\[Rule]", " ", "\"\<metre^2\>\""}], ",", 
          " ", 
          RowBox[{"\"\<length\>\"", "\[Rule]", " ", "\"\<metre\>\""}]}], 
         "}"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"L2V1AllowedScalableDefaultUnits", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<substance\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<mole\>\"", ",", " ", "\"\<item\>\""}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<volume\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<litre\>\"", ",", " ", "\"\<metre^3\>\""}], "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<area\>\"", "\[Rule]", " ", 
           RowBox[{"{", "\"\<metre^2\>\"", "}"}]}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<length\>\"", "\[Rule]", " ", 
           RowBox[{"{", "\"\<metre\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<time\>\"", "\[Rule]", " ", 
           RowBox[{"{", "\"\<second\>\"", "}"}]}]}], "\[IndentingNewLine]", 
         "}"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"L2V2AllowedScalableDefaultUnits", "=", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<substance\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<dimensionless\>\"", ",", "\"\<mole\>\"", ",", " ", 
             "\"\<item\>\"", ",", " ", "\"\<gram\>\"", ",", " ", 
             "\"\<kilogram\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<volume\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<dimensionless\>\"", ",", "\"\<litre\>\"", ",", " ", 
             "\"\<metre^3\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<area\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<dimensionless\>\"", ",", "\"\<metre^2\>\""}], 
            "}"}]}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{"\"\<length\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<dimensionless\>\"", ",", "\"\<metre\>\""}], "}"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<time\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"\"\<dimensionless\>\"", ",", "\"\<second\>\""}], 
            "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", " ", 
       "\[IndentingNewLine]", "allowedScaling", ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"builtInQuantities", "=", 
        RowBox[{"{", 
         RowBox[{
         "\"\<substance\>\"", ",", "\"\<volume\>\"", ",", "\"\<time\>\"", 
          ",", "\"\<area\>\"", ",", " ", "\"\<length\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", "builtInDefs", ",", "comment", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"commonMisspellings", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<meter\>\"", ",", "\"\<liter\>\""}], "}"}]}], ",", "cms",
        ",", "\[IndentingNewLine]", 
       RowBox[{"correctSpellings", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<meter\>\"", "\[Rule]", " ", "\"\<metre\>\""}], ",", 
          " ", 
          RowBox[{"\"\<liter\>\"", "\[Rule]", " ", "\"\<litre\>\""}]}], 
         "}"}]}], ",", "\[IndentingNewLine]", "getSBMLUnitDefinition", ",", 
       "\[IndentingNewLine]", "unitDefinitions", ",", "names", ",", "defs", 
       ",", "ids", ",", "\[IndentingNewLine]", 
       RowBox[{"allowedKinds", "=", 
        RowBox[{"{", 
         RowBox[{
         "\"\<ampere\>\"", ",", "\"\<becquerel\>\"", ",", "\"\<candela\>\"", 
          ",", "\"\<Celsius\>\"", ",", "\"\<coulomb\>\"", ",", 
          "\"\<dimensionless\>\"", ",", "\"\<farad\>\"", ",", "\"\<gram\>\"", 
          ",", "\"\<gray\>\"", ",", "\"\<henry\>\"", ",", "\"\<hertz\>\"", 
          ",", "\"\<item\>\"", ",", "\"\<joule\>\"", ",", "\"\<katal\>\"", 
          ",", "\"\<kelvin\>\"", ",", "\"\<kilogram\>\"", ",", 
          "\"\<litre\>\"", ",", "\"\<lumen\>\"", ",", "\"\<lux\>\"", ",", 
          "\"\<metre\>\"", ",", "\"\<mole\>\"", ",", "\"\<newton\>\"", ",", 
          "\"\<ohm\>\"", ",", "\"\<pascal\>\"", ",", "\"\<radian\>\"", ",", 
          "\"\<second\>\"", ",", "\"\<siemens\>\"", ",", "\"\<sievert\>\"", 
          ",", "\"\<steradian\>\"", ",", "\"\<tesla\>\"", ",", "\"\<volt\>\"",
           ",", "\"\<watt\>\"", ",", "\"\<weber\>\""}], "}"}]}], ",", 
       "\[IndentingNewLine]", "unitsDefinedInThisModel", ",", "inherentKinds",
        ",", " ", "unitOptions", ",", " ", "metas"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"names", "=", 
       RowBox[{"{", "}"}]}], ";", " ", 
      RowBox[{"ids", "=", 
       RowBox[{"{", "}"}]}], ";", " ", 
      RowBox[{"defs", "=", 
       RowBox[{"{", "}"}]}], ";", " ", 
      RowBox[{"metas", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"allowedScaling", "=", 
       RowBox[{"Switch", "[", "\[IndentingNewLine]", 
        RowBox[{
        "$SBML$Level$Version", ",", "\[IndentingNewLine]", "\"\<2.1\>\"", ",",
          "L2V1AllowedScalableDefaultUnits", ",", "\[IndentingNewLine]", 
         "\"\<2.2\>\"", ",", "L2V2AllowedScalableDefaultUnits", ",", 
         "\[IndentingNewLine]", "\"\<2.3\>\"", ",", 
         "L2V2AllowedScalableDefaultUnits", ",", "  ", "\[IndentingNewLine]", 
         "\"\<2.4\>\"", ",", "L2V2AllowedScalableDefaultUnits", ",", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "no", " ", "changes", " ", "here", " ", "in", " ", "L2V3", " ", 
           "so", " ", "use", " ", "same", " ", "variable"}], " ", "*)"}], 
         "\[IndentingNewLine]", "_", ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
           RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
           RowBox[{
           "\"\<getLevel2Units: Table 3 Values undefined for SBML \
Level.Version = \>\"", "//", "boldBlack"}], ",", " ", 
           RowBox[{"$SBML$Level$Version", "//", "boldBlue"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Set", " ", "flags", " ", "used", " ", "elsewehere", " ", "for", " ", 
        "checking", " ", "to", " ", "see", " ", "if", " ", "units", " ", 
        "are", " ", "scaled", " ", "properly"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"$ScalableUnits$Substance", "=", 
       RowBox[{"\"\<substance\>\"", "/.", "allowedScaling"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$ScalableUnits$Volume", "=", 
       RowBox[{"\"\<volume\>\"", "/.", "allowedScaling"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$ScalableUnits$Area", "=", 
       RowBox[{"\"\<area\>\"", "/.", "allowedScaling"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$ScalableUnits$Length", "=", 
       RowBox[{"\"\<length\>\"", "/.", "allowedScaling"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$ScalableUnits$Time", "=", 
       RowBox[{"\"\<time\>\"", "/.", "allowedScaling"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"inherentKinds", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"allowedKinds", ",", "builtInQuantities"}], "]"}]}], ";", " ",
       "\[IndentingNewLine]", 
      RowBox[{"specTable3", "=", " ", 
       RowBox[{"unitsContextify", "[", "specTable3", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"builtInQuantities", "=", 
       RowBox[{"unitsContextify", "[", "builtInQuantities", "]"}]}], ";", " ",
       "\[IndentingNewLine]", 
      RowBox[{"commonMisspellings", "=", 
       RowBox[{"unitsContextify", "[", "commonMisspellings", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"correctSpellings", "=", " ", 
       RowBox[{"unitsContextify", "[", "correctSpellings", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"allowedKinds", " ", "=", " ", 
       RowBox[{"unitsContextify", "[", "allowedKinds", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"unitsDefinedInThisModel", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2units: inherentKinds:\>\"", ",", 
        "inherentKinds"}], "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["getLevel2UnitDefinition",
         FontColor->RGBColor[0, 0, 1]], "[", "z_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "opts", ",", "units", ",", "listofunits", ",", "name", ",", " ", 
           "unitspecs", ",", "kinds", ",", "exponents", ",", "levelVersion", 
           ",", "scales", ",", "disallowedKinds", ",", "unitdef", ",", 
           "unitdefinition", ",", 
           RowBox[{"dbg", "=", "False"}], ",", "id", ",", "meta", ",", " ", 
           "rawid", ",", " ", "multipliers", ",", " ", "getUnitFields", ",", 
           " ", "offsets"}], "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<--->getLevel2UnitDefinition:z \>\"", ",", "z"}], 
           "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            StyleBox["getUnitFields",
             FontColor->RGBColor[0, 0, 1]], "[", "x_", "]"}], ":=", " ", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"k", ",", "e", ",", "s", ",", "m", ",", "o"}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"k", " ", "=", " ", 
               RowBox[{
                RowBox[{"\"\<kind\>\"", "/.", "x"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<kind\>\"", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
                 "}"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"k", " ", "=", " ", 
               RowBox[{"unitsContextify", "[", "k", "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"e", "=", 
               RowBox[{
                RowBox[{"\"\<exponent\>\"", "/.", "x"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\"\<exponent\>\"", "\[Rule]", " ", "\"\<1\>\""}], 
                 "}"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"s", " ", "=", " ", 
               RowBox[{
                RowBox[{"\"\<scale\>\"", "/.", "x"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\"\<scale\>\"", "\[Rule]", " ", "\"\<0\>\""}], 
                 "}"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"m", "=", 
               RowBox[{
                RowBox[{"\"\<multiplier\>\"", "/.", "x"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\"\<multiplier\>\"", "\[Rule]", " ", "\"\<1\>\""}], 
                 "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"levelVersion", "=", 
               RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}]}], 
              ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "revised", " ", "in", " ", "version", " ", "2.9", ".0", 
                    " ", "to", " ", "only", " ", "check", " ", "for", " ", 
                    "2.1"}], " ", "&"}], " ", "lower", " ", "vers", " ", 
                  "2.2"}], " ", "&"}], " ", "higher", " ", "rather", " ", 
                "than", " ", "specific", " ", "versions"}], " ", "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"levelVersion", "<", " ", "2.15"}], ",", "  ", 
                RowBox[{
                 RowBox[{"o", "=", 
                  RowBox[{
                   RowBox[{"\"\<offset\>\"", "/.", "x"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{"\"\<offset\>\"", "\[Rule]", " ", "\"\<0\>\""}], 
                    "}"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"o", "=", 
                  RowBox[{"\"\<offset\>\"", "/.", "x"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"o", "\[NotEqual]", " ", "\"\<offset\>\""}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", " ", 
                    RowBox[{
                    "\"\<getLevel2Units: the \>\"", "//", "boldBlack"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<offset\>\"", "//", "boldBlue"}], ",", " ", 
                    RowBox[{
                    "\"\< field in a unit definition is not allowed in SBML \
Level 2 Version 2:\\n\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{"z", ",", " ", "Purple", ",", " ", 
                    RowBox[{
                    "\"\<offset=\\\"\>\"", "<>", "o", "<>", 
                    "\"\<\\\"\>\""}]}], "]"}]}]}], "\[IndentingNewLine]", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"o", "=", "\"\<0\>\""}], ";", " ", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"small", " ", "letter", " ", "oh"}], " ", "=", " ", 
                   RowBox[{"quote", " ", "zero"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"decontextify", "[", "k", "]"}], "\[Equal]", " ", 
                    "\"\<Celsius\>\""}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", " ", 
                    RowBox[{
                    "\"\<getLevel2Units: the value \>\"", "//", "boldBlack"}],
                     ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<Celsius\>\"", "//", "boldBlue"}], ",", " ", 
                    RowBox[{
                    "\"\< is not an allowed unit kind in SBML Level 2 Version \
2:\\n\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{
                    "z", ",", " ", "Purple", ",", " ", 
                    "\"\<kind=\\\"Celsius\\\"\>\""}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"k", ",", "e", ",", "s", ",", "m", ",", "o"}], "}"}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            StyleBox["unitdef",
             FontColor->RGBColor[0, 0, 1]], "[", 
            RowBox[{"{", 
             RowBox[{
             "kind_", ",", " ", "exp_", ",", " ", "scale_", ",", 
              "multiplier_", ",", " ", "offset_"}], "}"}], "]"}], ":=", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", "v", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"v", "=", 
                RowBox[{"ToExpression", "[", 
                 RowBox[{
                 "multiplier", "<>", "\"\<* 10^\>\"", "<>", "scale", "<>", 
                  "\"\<*(\>\"", "<>", "kind", "<>", "\"\<)^\>\"", "<>", "exp",
                   "<>", "\"\< +\>\"", "<>", "offset"}], "]"}]}], ";"}], " ", 
              "*)"}], " ", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"revised", " ", "version", " ", 
               RowBox[{
                RowBox[{"4", "/", "25"}], "/", "05"}], " ", "v2", ".4", ".13",
                " ", "based", " ", "on", " ", "L2v1", " ", "errata"}], " ", 
              "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"v", "=", 
               RowBox[{"ToExpression", "[", 
                RowBox[{
                "\"\<(\>\"", "<>", "multiplier", "<>", "\"\<* 10^\>\"", "<>", 
                 "scale", "<>", "\"\<*(\>\"", "<>", "kind", "<>", 
                 "\"\<))^\>\"", "<>", "exp", "<>", "\"\< +\>\"", "<>", 
                 "offset"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"unitdef\",
FontColor->RGBColor[0, 0, 1]]\): v \>\"", ",", "v"}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Return", "[", "v", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"opts", " ", "=", " ", 
           RowBox[{"extractXMLOptions", "[", "z", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"id", " ", "=", " ", 
           RowBox[{
            RowBox[{"\"\<id\>\"", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<id\>\"", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
             "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"meta", " ", "=", " ", 
           RowBox[{
            RowBox[{"\"\<metaid\>\"", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"addID", "[", 
             RowBox[{"id", ",", " ", "\"\<unit\>\""}], "]"}], ";"}], " ", 
           "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"id", " ", "=", "  ", 
           RowBox[{"makeIntoValidSId", "[", "id", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rawid", "=", "id"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"id", " ", "=", " ", 
           RowBox[{"unitsContextify", "[", "id", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"checkForSymbolCollision", "[", 
           RowBox[{"id", ",", "\"\<unit\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"name", " ", "=", " ", 
           RowBox[{
            RowBox[{"\"\<name\>\"", "/.", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "opts", "}"}], "]"}]}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", "==", "\"\<Indeterminate\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"\"\<name\>\"", "==", "\"\<\>\""}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{
                RowBox[{
                "printWarning", "[", 
                 "\"\<<unitDefinition ...> has neither an 'id' nor a \
'name'.\>\"", "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"id", " ", "=", "  ", 
                 RowBox[{"unitsContextify", "[", 
                  RowBox[{"makeIntoValidSId", "[", "name", "]"}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"printWarning", "[", 
                 RowBox[{
                 "\"\<<unit Definition ...> for unit with name=\\\"\>\"", "<>",
                   "name", "<>", 
                  "\"\<\\\" has no 'id' specification. An an assignment of \
id=\\\"\>\"", "<>", "id", "<>", "\"\<\\\" has been performed.\>\""}], "]"}], 
                ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"saveNameIDAssociation", "[", 
           RowBox[{"name", ",", "id"}], "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", " ", "\"\<getSBMLUnitDefinition: input \>\"", ",", 
            "z"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", " ", "\"\<getSBMLUnitDefinition: opts \>\"", ",", 
            "opts"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"listofunits", " ", "=", " ", 
           RowBox[{"Cases", "[", 
            RowBox[{"z", ",", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<listOfUnits\>\"", ",", "___"}], "]"}], ",", "3"}], 
            "]"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", " ", "\"\<getSBMLUnitDefinition: listofunits \>\"", 
            ",", "listofunits"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "listofunits", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"units", " ", "=", 
              RowBox[{"Cases", "[", 
               RowBox[{"listofunits", ",", 
                RowBox[{"XMLElement", "[", 
                 RowBox[{"\"\<unit\>\"", ",", "___"}], "]"}], ",", "3"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"debugPrint", "[", 
              RowBox[{
              "dbg", ",", " ", "\"\<getSBMLUnitDefinition: units \>\"", ",", 
               "units"}], "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "units", "]"}], ">", "0"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"unitOptions", " ", "=", " ", 
                 RowBox[{"Map", "[", 
                  RowBox[{"extractXMLOptions", ",", "units"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"unitspecs", "=", 
                 RowBox[{"Map", "[", 
                  RowBox[{"getUnitFields", ",", "unitOptions"}], "]"}]}], ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "kinds", ",", "exponents", ",", "scales", ",", 
                   "multipliers", ",", " ", "offsets"}], "}"}], "=", 
                 RowBox[{"Transpose", "[", "unitspecs", "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"disallowedKinds", "=", 
                 RowBox[{"Complement", "[", 
                  RowBox[{"kinds", ",", "allowedKinds"}], "]"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"cms", " ", "=", " ", 
                 RowBox[{"Intersection", "[", 
                  RowBox[{"commonMisspellings", ",", " ", "disallowedKinds"}],
                   "]"}]}], ";", " ", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "cms", "]"}], ">", "0"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"kinds", " ", "=", " ", 
                    RowBox[{"kinds", "/.", "correctSpellings"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"unitspecs", " ", "=", " ", 
                    RowBox[{"unitspecs", "/.", "correctSpellings"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"disallowedKinds", "=", 
                    RowBox[{"Complement", "[", 
                    RowBox[{"kinds", ",", "allowedKinds"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                    RowBox[{
                    "\"\<getLevel2UnitDefinition: Possible mispelling: \>\"", 
                    "//", "boldBlack"}], ",", " ", 
                    RowBox[{"\"\<Invalid unit kind \>\"", "//", "boldBlack"}],
                     ",", " ", 
                    RowBox[{"#", "//", "boldBlue"}], ",", " ", 
                    RowBox[{"\"\< replaced with \>\"", "//", "boldBlack"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "/.", "correctSpellings"}], ")"}], "//", 
                    "boldBlue"}]}], "\[IndentingNewLine]", "]"}], "&"}], ",", 
                    "cms"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", "]"}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                    RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                    RowBox[{
                    "\"\<getLevel2Units: invalid unit kind \>\"", "//", 
                    "boldBlack"}], ",", " ", 
                    RowBox[{
                    RowBox[{"decontextify", "[", "#", "]"}], "//", 
                    "boldBlue"}], ",", "\"\<\\n\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{"z", ",", " ", "Purple", ",", " ", 
                    RowBox[{"\"\<kind=\\\"\>\"", "<>", 
                    RowBox[{"decontextify", "[", "#", "]"}], "<>", 
                    "\"\<\\\"\>\""}]}], "]"}]}]}], "\[IndentingNewLine]", 
                   "]"}], "&"}], "/@", "disallowedKinds"}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"unitOptions", "=", 
                 RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"kinds", "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"ToString", "[", "id", "]"}], "/.", 
                    "specTable3"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"ToString", "[", "id", "]"}], "\[Rule]", " ", 
                    "\"\<Indeterminate\>\""}], "}"}]}], "}"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"exponents", "=", 
                 RowBox[{"{", "\"\<1\>\"", "}"}]}], ";", "  ", 
                RowBox[{"scales", "=", 
                 RowBox[{"{", "\"\<0\>\"", "}"}]}], ";", " ", 
                RowBox[{"multipliers", "=", 
                 RowBox[{"{", "\"\<1\>\"", "}"}]}], ";", "  ", 
                RowBox[{"offsets", "=", 
                 RowBox[{"{", "\"\<0\>\"", "}"}]}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"unitspecs", " ", "=", " ", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "kinds", ",", "exponents", ",", "scales", ",", " ", 
                    "multipliers", ",", " ", "offsets"}], "}"}], "]"}]}], ";",
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                  RowBox[{"\"\<empty \>\"", "//", "boldBlack"}], ",", " ", 
                  RowBox[{"\"\<<listOfUnits>\>\"", "//", "boldBlue"}], ",", 
                  RowBox[{
                  "\"\< in unitDefinition:\\n\>\"", "//", "boldBlack"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{
                    "z", ",", " ", "Purple", ",", " ", 
                    "\"\<listOfUnits\>\""}], "]"}]}]}], "\[IndentingNewLine]",
                  "]"}], ";"}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"debugPrint", "[", 
              RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\): unitspecs \>\"", ",", "unitspecs"}], "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"debugPrint", "[", 
              RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\): unitOptions \>\"", ",", "unitOptions"}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"debugPrint", "[", 
              RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\): kinds \>\"", ",", "kinds"}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"unitdefinition", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"Apply", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"unitdef", ",", "unitspecs"}], "]"}]}], "]"}], "//",
                 "InputForm"}], "//", "ToString"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"debugPrint", "[", 
              RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\): unitdefinition \>\"", ",", 
               "unitdefinition"}], "]"}], ";"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"unitdefinition", "=", "\"\<Indeterminate\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
               RowBox[{
               "\"\<getLevel2UnitDefinition: no \>\"", "//", "boldBlack"}], 
               ",", " ", 
               RowBox[{"\"\<listOfUnits\>\"", "//", "boldBlue"}], ",", " ", 
               RowBox[{"\"\< in unit definition:\\n\>\"", "//", "boldBlack"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"XMLHighlightForm", "[", 
                 RowBox[{
                 "z", ",", " ", "Purple", ",", " ", 
                  "\"\<unitDefinition\>\""}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
             StyleBox["check",
              FontColor->GrayLevel[0.500008]], 
             StyleBox[" ",
              FontColor->GrayLevel[0.500008]], 
             StyleBox["for",
              FontColor->GrayLevel[0.500008]], 
             StyleBox[" ",
              FontColor->GrayLevel[0.500008]], 
             StyleBox["nesting",
              FontColor->GrayLevel[0.500008]], 
             StyleBox[" ",
              FontColor->GrayLevel[0.500008]], " ", "2.4", ".18"}], ";", " ", 
            RowBox[{
            "l2v2", " ", "nesting", " ", "removed", " ", "in", " ", "2.5", 
             ".26"}]}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"kinds", "=", 
           RowBox[{"decontextify", "/@", "kinds"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", " ", "\"\<\!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\): kinds \>\"", ",", "kinds"}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"unitsDefinedInThisModel", ",", "#"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
                  RowBox[{
                  "\"\< getLevel2Units: Nested unit definitions are not \
permitted:\\n\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{"z", ",", " ", "Purple", ",", " ", 
                    RowBox[{
                    "\"\<kind=\\\"\>\"", "<>", "#", "<>", "\"\<\\\"\>\""}]}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], "&"}], ",", "kinds"}], "]"}], ";",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"unitsDefinedInThisModel", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"unitsDefinedInThisModel", ",", "rawid"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", " ", 
            "\"\<getLevel2UnitDefinition: unitsDefinedInThisModel \>\"", ",", 
            "unitsDefinedInThisModel"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            StyleBox["checkBuiltInRedef",
             FontColor->RGBColor[0, 0, 1]], "[", 
            RowBox[{"id_", ",", " ", "allowed_", ",", " ", "formula_"}], 
            "]"}], ":=", " ", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"math", ",", "allowable", ",", "did", ",", "ok"}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"did", "=", 
               RowBox[{"unitsDecontextify", "[", "id", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"math", "=", 
               RowBox[{"unitsDecontextify", "[", "formula", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"math", "=", 
               RowBox[{"ToExpression", "[", "math", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"allowable", "=", 
               RowBox[{"ToExpression", "/@", "allowed"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ok", "=", 
               RowBox[{"math", "/", "allowable"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"ok", "=", 
               RowBox[{"NumberQ", "/@", "ok"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"ok", "=", 
               RowBox[{"Or", "@@", "ok"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "ok"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                  RowBox[{
                  "\"\<getLevel2UnitDefinition: Invalid redefinition of \
built-in unit \>\"", "//", "boldBlack"}], ",", " ", 
                  RowBox[{"did", "//", "boldBlue"}], ",", " ", 
                  RowBox[{"\"\< as \>\"", "//", "boldBlack"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"math", "//", "boldBlue"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                  "\"\<\\nAny redefinition of \>\"", "//", "boldBlack"}], ",",
                   " ", 
                  RowBox[{"did", "//", "boldBlue"}], ",", " ", 
                  RowBox[{
                  "\"\< must be a rescaling of \>\"", "//", "boldBlack"}], 
                  ",", " ", 
                  RowBox[{"allowed", "//", "boldBlue"}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           StyleBox[
            RowBox[{"end", " ", "checkBuiltInRedef"}],
            FontColor->RGBColor[0, 0, 1]], " ", "*)"}], "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"builtInQuantities", ",", " ", "id"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"checkBuiltInRedef", "[", 
              RowBox[{"id", ",", " ", 
               RowBox[{
                RowBox[{"decontextify", "[", "id", "]"}], "/.", 
                "allowedScaling"}], ",", " ", "unitdefinition"}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
            "id", ",", " ", "meta", ",", " ", "name", ",", "unitdefinition"}],
             "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";", " ", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"end", " ", "getSBMLUnitDefinition"}], " ", "*)"}],
       FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$UnitsDefined", " ", "=", "allowedKinds"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfUnitDefinitions\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", " ", "\"\<getLevel2units: u(1): \>\"", ",", "u"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"u", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"u", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<unitDefinition\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", " ", "\"\<getLevel2units: u(2): \>\"", ",", "u"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addUnit", "/@", "u"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", " ", "\"\<getLevel2units: returned from addUnit/@u \>\""}],
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", " ", "\"\<getLevel2units: calling  \!\(\*
StyleBox[\"getLevel2UnitDefinition\",
FontColor->RGBColor[0, 0, 1]]\) \>\""}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"unitDefinitions", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         StyleBox["getLevel2UnitDefinition",
          FontColor->RGBColor[0, 0, 1]], ",", "u"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", " ", "\"\<getLevel2units: unitDefinitions \>\"", ",", 
        "unitDefinitions"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "unitDefinitions", "]"}], ">", "0"}], ",", 
        " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ids", ",", "metas", ",", " ", "names", ",", " ", "defs"}],
            "}"}], " ", "=", " ", 
          RowBox[{"Transpose", "[", "unitDefinitions", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"$SBML$UnitsDefined", " ", "=", " ", 
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"$SBML$UnitsDefined", ",", " ", "ids"}], "]"}], "//", 
           "Union"}]}], ";", "\[IndentingNewLine]", 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         RowBox[{"$SBML$UnitRules", "=", 
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "\[Rule]", "#2"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{"ToExpression", ",", "ids"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Map", "[", 
               RowBox[{"ToExpression", ",", "defs"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         StyleBox[
          RowBox[{"(*", " ", 
           RowBox[{"remove", " ", "indeterminate", " ", "rules"}], " ", "*)"}],
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"$SBML$UnitRules", " ", "=", " ", 
          RowBox[{"Select", "[", 
           RowBox[{"$SBML$UnitRules", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"InputForm", "[", 
                RowBox[{"Last", "[", "#", "]"}], "]"}], "]"}], "\[NotEqual]", 
              " ", "\"\<Indeterminate\>\""}], "&"}]}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"defaultUnitsNeeded", " ", "=", " ", 
          RowBox[{"Complement", "[", 
           RowBox[{"builtInQuantities", ",", "ids"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"defaultUnitRules", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ToExpression", "[", "#", "]"}], "\[Rule]", 
              RowBox[{"ToExpression", "[", " ", 
               RowBox[{"(", 
                RowBox[{"#", "/.", "specTable3"}], ")"}], "]"}]}], "&"}], ",",
             "defaultUnitsNeeded"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "dbg", ",", "\"\<getSBMLUnits: defaultUnitRules \>\"", ",", 
           "defaultUnitRules"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"$SBML$UnitRules", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"$SBML$UnitRules", ",", " ", "defaultUnitRules"}], "]"}]}],
          ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "corrected", " ", "2.3", ".35", " ", "to", " ", "return", " ", "to", 
          " ", "expressions"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$SBML$UnitRules", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Rule", "[", 
              RowBox[{
               RowBox[{"ToExpression", "[", 
                RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"Last", "[", "#", "]"}], "]"}]}], "]"}], "&"}], ",", 
            "specTable3"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$UnitsDefined", "=", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"$SBML$UnitsDefined", ",", "builtInQuantities"}], "]"}], "//",
         "Union"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"builtInQuantities", "=", 
       RowBox[{"ToExpression", "/@", "builtInQuantities"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"builtInDefs", " ", "=", " ", 
       RowBox[{"builtInQuantities", "//.", "$SBML$UnitRules"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: $SBML$UnitRules \>\"", ",", 
           "$SBML$UnitRules"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: $SBML$UnitsDefined \>\"", ",", 
           "$SBML$UnitsDefined"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: ids \>\"", ",", "ids"}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: defs \>\"", ",", "defs"}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: builtInQuantities \>\"", ",", 
           "builtInQuantities"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", "\"\<getSBMLunits: builtInDefs \>\"", ",", 
           "builtInDefs"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "True", ",", " ", 
           "\"\<getSBMLunits: $SBML$verboseBuiltInUnits \>\"", ",", 
           "$SBML$verboseBuiltInUnits"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
       "saveVerboseData", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"comment", "=", "\"\< (Excluding Built-in Units)\>\""}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
          "$SBML$verboseBuiltInUnits", ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ids", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"ids", ",", " ", 
               RowBox[{"stringer", "/@", "builtInQuantities"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"names", "  ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"names", ",", " ", 
               RowBox[{"unitsDecontextify", "[", 
                RowBox[{"stringer", "/@", "builtInQuantities"}], "]"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"defs", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"defs", ",", " ", 
               RowBox[{"stringer", "/@", "builtInDefs"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"metas", " ", "=", " ", 
             RowBox[{"Join", "[", 
              RowBox[{"metas", ",", 
               RowBox[{"Table", "[", 
                RowBox[{"\"\<\>\"", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"Length", "[", "builtInDefs", "]"}], "}"}]}], 
                "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"comment", "=", "\"\< (Including Built-in Units)\>\""}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"debugPrint", "[", 
             RowBox[{
             "dbg", ",", " ", "\"\<getSBMLunits: ids \>\"", ",", "ids"}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"debugPrint", "[", 
             RowBox[{
             "dbg", ",", " ", "\"\<getSBMLunits: defs \>\"", ",", "defs"}], 
             "]"}], ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "$SBML$verboseContext"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ids", " ", "=", 
             RowBox[{"decontextify", "[", "ids", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"defs", " ", "=", " ", 
             RowBox[{"unitsDecontextify", "[", "defs", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"verboseSave", "[", 
          RowBox[{
           RowBox[{"\"\<Unit Definitions\>\"", "<>", "comment"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", "\"\<Name\>\"", 
             ",", " ", "\"\<Formula\>\""}], "}"}], ",", " ", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"ids", ",", "metas", ",", "  ", "names", ",", "defs"}], 
             "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.390201309541212*^9, 3.390201309983798*^9}, {
  3.3902022899627333`*^9, 3.390202297602528*^9}, {3.390202333288313*^9, 
  3.390202406024433*^9}, {3.390295656792025*^9, 3.3902958286854467`*^9}, {
  3.397156867742117*^9, 3.3971568700428753`*^9}, {3.3971572076945133`*^9, 
  3.397157209572229*^9}, {3.432491492592609*^9, 3.432491802428576*^9}, {
  3.432492238762053*^9, 3.432492239508816*^9}, {3.432492283466779*^9, 
  3.432492284365058*^9}, {3.432492359532186*^9, 3.432492374657398*^9}, {
  3.432492877524759*^9, 3.432492905721341*^9}, {3.432492964169024*^9, 
  3.432493012640783*^9}, {3.432493109493942*^9, 3.432493145025959*^9}, {
  3.43249328646371*^9, 3.432493302140052*^9}, {3.432493410593002*^9, 
  3.432493442446367*^9}, {3.432493481544564*^9, 3.43249348230178*^9}, {
  3.506216816898907*^9, 3.5062168302626715`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2compartmentTypes", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2compartmentTypes", "[", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dbg", "=", "False"}], ",", "st", ",", "ids", ",", "metas", 
       ",", " ", "names"}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"st", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfCompartmentTypes\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], "<", 
         "2.15"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "st", "]"}], ">", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
              RowBox[{"\"\< listOfCompartmentTypes \>\"", "//", "boldBlue"}], 
              ",", " ", 
              RowBox[{
              "\"\<is not supported in SBML Level \>\"", "//", "boldBlack"}], 
              ",", " ", 
              RowBox[{"$SBML$Level$Version", "//", "boldBlack"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartmentTypes: st(1)\>\"", ",", " ", 
        "st"}], "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"st", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"st", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<compartmentType\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartmentTypes: st(2)\>\"", ",", " ", 
        "st"}], "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addCompartmentType", "/@", "st"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"st", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"extractXMLOptions", ",", "st"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartmentTypes: st(3)\>\"", ",", " ", 
        "st"}], "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ids", " ", "=", 
       RowBox[{"makeIntoValidSId", "/@", 
        RowBox[{"(", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\"\<id\>\"", "/.", "#"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<id\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
            "&"}], ",", " ", "st"}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"addID", "[", 
           RowBox[{"#", ",", " ", "\"\<compartmentType\>\""}], "]"}], "&"}], "/@",
          "ids"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"names", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<name\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", "st"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"metas", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<metaid\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", "st"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartmentTypes: {ids,names}:\>\"", ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"ids", ",", "names"}], "}"}]}], "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ids", "=", 
       RowBox[{"contextify", "[", "ids", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentTypes", "=", 
       RowBox[{"ToExpression", "/@", "ids"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"checkForSymbolCollision", "[", 
         RowBox[{"#", ",", "\"\<compartmentType\>\""}], "]"}], "&"}], "/@", 
       "ids"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{"saveNameIDAssociation", ",", 
        RowBox[{"{", 
         RowBox[{"names", ",", "ids"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "$SBML$verboseContext"}], ",", 
           RowBox[{
            RowBox[{"ids", " ", "=", " ", 
             RowBox[{"decontextify", "[", "ids", "]"}]}], ";"}]}], "]"}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"verboseSave", "[", 
          RowBox[{"\"\<CompartmentTypes\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<ID\>\"", ",", "\"\<MetaID\>\"", ",", " ", "\"\<Name\>\""}], 
            "}"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"ids", ",", "metas", ",", " ", "names"}], "}"}], "]"}]}],
           "\[IndentingNewLine]", "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
       "]"}], ";"}]}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2compartments", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2compartments", "[", 
    RowBox[{"opt___", "?", "OptionQ"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"c", ",", 
       RowBox[{"dbg", "=", "False"}], ",", "ids", ",", "cids", ",", " ", 
       "vids", ",", " ", "names", ",", "spatialDimensions", ",", " ", "sizes",
        ",", " ", "units", ",", "outsides", ",", " ", "constants", ",", 
       "ctypes", ",", "vctypes", ",", "\[IndentingNewLine]", "derivedunits", 
       ",", "fixid", ",", " ", "fixspatialDimensions", ",", " ", "fixUnits", 
       ",", " ", "checkConstant", ",", " ", "spatialUnits", ",", 
       "conversionFactors", ",", " ", "normalizedSizes", ",", "vdata", ",", 
       "vhead", ",", " ", "metas"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartments: $SBML$Model\>\"", ",", " ", 
        "$SBML$Model"}], "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfCompartments\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartments: c(1)\>\"", ",", " ", "c"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"c", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"c", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<compartment\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2compartments: c(2)\>\"", ",", " ", "c"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addCompartment", "/@", "c"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "c", "]"}], "<", "1"}], "  ", ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ids", " ", "=", " ", 
          RowBox[{"{", "\"\<\>\"", "}"}]}], ";", " ", 
         RowBox[{"names", " ", "=", " ", 
          RowBox[{"{", "\"\<\>\"", "}"}]}], ";", " ", 
         RowBox[{"spatialDimensions", "=", 
          RowBox[{"{", "\"\<3\>\"", "}"}]}], " ", ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"sizes", "=", 
          RowBox[{"{", "\"\<1\>\"", "}"}]}], ";", " ", 
         RowBox[{"units", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"unitsContextify", "[", "\"\<volume\>\"", "]"}], "}"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"outsides", "=", 
          RowBox[{"{", " ", "\"\<\>\"", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"constants", "=", 
          RowBox[{"{", "\"\<true\>\"", "}"}]}], ";", "  ", 
         RowBox[{"$SBML$NCompartments", " ", "=", "1"}], ";"}], " ", 
        StyleBox["\[IndentingNewLine]",
         FontWeight->"Plain"], 
        StyleBox["\[IndentingNewLine]",
         FontWeight->"Plain"], 
        StyleBox[
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "this", " ", "is", " ", "the", " ", "else", " ", "clause"}], ",", 
           " ", 
           RowBox[{"i", ".", "e"}], ",", " ", 
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], "\[GreaterEqual]", " ", 
            "1"}]}], " ", "*)"}],
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"$SBML$NCompartments", "=", 
          RowBox[{"Length", "[", "c", "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"extractXMLOptions", ",", " ", "c"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"debugPrint", "[", 
          RowBox[{
          "dbg", ",", "\"\<getLevel2compartments: c(3)\>\"", ",", " ", "c"}], 
          "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         StyleBox[
          RowBox[{"(*", " ", 
           RowBox[{"get", " ", "information"}], " ", "*)"}],
          FontWeight->"Plain"], 
         StyleBox[" ",
          FontWeight->"Plain"], "\[IndentingNewLine]", 
         StyleBox["\[IndentingNewLine]",
          FontWeight->"Plain"], 
         RowBox[{"ids", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<id\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\"\<id\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
             "&"}], ",", " ", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vids", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{"makeIntoValidSId", ",", " ", "ids"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ids", " ", "=", " ", "vids"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"metas", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<metaid\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], 
               "}"}]}], "&"}], ",", " ", "c"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"addID", "[", 
              RowBox[{"#", ",", " ", "\"\<compartment\>\""}], "]"}], "&"}], "/@",
             "ids"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"checkForSymbolCollision", "[", 
            RowBox[{
             RowBox[{"contextify", "[", "#", "]"}], ",", 
             "\"\<compartment\>\""}], "]"}], "&"}], "/@", "ids"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"names", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<name\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
             "&"}], ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"spatialDimensions", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<spatialDimensions\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{
               "\"\<spatialDimensions\>\"", "\[Rule]", " ", "\"\<3\>\""}], 
               "}"}]}], "&"}], ",", "c"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sizes", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<size\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{
               "\"\<size\>\"", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
               "}"}]}], "&"}], ",", " ", "c"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"units", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<units\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{
               "\"\<units\>\"", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
               "}"}]}], "&"}], ",", "c"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"units", "=", 
          RowBox[{"unitsContextify", "[", "units", "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"outsides", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<outside\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\"\<outside\>\"", "\[Rule]", " ", "\"\<\>\""}], 
               "}"}]}], "&"}], ",", "c"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"constants", " ", "=", " ", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"\"\<constant\>\"", "/.", "#"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\"\<constant\>\"", "\[Rule]", " ", "\"\<true\>\""}], 
               "}"}]}], "&"}], ",", " ", "c"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.15"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ctypes", "=", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"\"\<compartmentType\>\"", "/.", "#"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<compartmentType\>\"", "\[Rule]", " ", 
                   "\"\<Indeterminate\>\""}], "}"}]}], "&"}], ",", "c"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ctypes", "=", 
             RowBox[{"Map", "[", 
              RowBox[{"makeIntoValidSId", ",", "ctypes"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"vctypes", "=", 
             RowBox[{"contextify", "/@", "ctypes"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"ctypes", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"contextify", "/@", "ids"}], ",", "vctypes"}], "}"}], 
              "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ctypes", "=", 
             RowBox[{
              RowBox[{"Select", "[", 
               RowBox[{"ctypes", ",", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Last", "[", "#", "]"}], "\[NotEqual]", " ", 
                   "\"\<Indeterminate\>\""}], ")"}], "&"}]}], "]"}], "//", 
              "ToExpression"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"$SBML$CompartmentTypeAssociations", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Rule", "@@", "#"}], "&"}], "/@", "ctypes"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Map", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"$SBML$CompartmentTypes", ",", 
                    RowBox[{"Last", "[", "#", "]"}]}], "]"}]}], ",", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
                   RowBox[{"\"\<Compartment \>\"", "//", "boldBlack"}], ",", 
                   RowBox[{
                    RowBox[{"decontextify", "[", 
                    RowBox[{"First", "[", "#", "]"}], "]"}], "//", 
                    "boldBlue"}], ",", " ", 
                   RowBox[{
                   "\"\< is defined as an unknown compartmentType: \>\"", "//",
                     "boldBlack"}], ",", " ", 
                   RowBox[{
                    RowBox[{"decontextify", "[", 
                    RowBox[{"Last", "[", "#", "]"}], "]"}], "//", 
                    "boldBlue"}]}], "]"}]}], "]"}], "&"}], ",", 
              "\[IndentingNewLine]", "ctypes"}], "\[IndentingNewLine]", "]"}],
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", 
        "\"\<getLevel2compartments:{ids,names,spatialDimensions,sizes,units,\
outsides,constants}(1)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "ids", ",", "names", ",", "spatialDimensions", ",", "sizes", ",", 
          "units", ",", "outsides", ",", "constants"}], "}"}]}], "]"}], ";", 
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[
        RowBox[{"check", " ", "ids"}],
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[1, 0, 1]], "*)"}], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["fixid",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{
         RowBox[{"id_", "?", "StringQ"}], ",", " ", 
         RowBox[{"name_", "?", "StringQ"}], ",", " ", 
         RowBox[{"num_", "?", "IntegerQ"}]}], "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", "\[NotEqual]", " ", "\"\<\>\""}], ",", " ", 
            RowBox[{"Return", "[", "id", "]"}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"name", "\[NotEqual]", " ", "\"\<\>\""}], ",", 
            RowBox[{"Return", "[", 
             RowBox[{"makeIntoValidSId", "[", "name", "]"}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"\"\<Compartment\>\"", "<>", 
            RowBox[{"ToString", "[", "num", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", " ", 
        StyleBox["fixid",
         FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ids", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"fixid", ",", " ", 
         RowBox[{"{", 
          RowBox[{"ids", ",", " ", "names", ",", " ", 
           RowBox[{"Range", "[", "$SBML$NCompartments", "]"}]}], "}"}]}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"ids", " ", "=", " ", 
       RowBox[{"contextify", "[", "ids", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"defineParameter", "[", "ids", "]"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", 
        "\"\<getLevel2compartments:{ids,names,spatialDimensions,sizes,units,\
outsides,constants}(2)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "ids", ",", "names", ",", "spatialDimensions", ",", "sizes", ",", 
          "units", ",", "outsides", ",", "constants"}], "}"}]}], "]"}], ";", 
      " ", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain"], 
      StyleBox[
       RowBox[{
        StyleBox["(*",
         FontWeight->"Plain"], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        RowBox[{
         RowBox[{"save", " ", "name"}], "-", 
         RowBox[{
         "id", " ", "associations", " ", "where", " ", "appropriate"}]}], 
        StyleBox[" ",
         FontWeight->"Plain"], 
        StyleBox["*)",
         FontWeight->"Plain"]}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[" ",
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{"saveNameIDAssociation", ",", " ", 
        RowBox[{"{", 
         RowBox[{"names", ",", " ", "ids"}], "}"}]}], "]"}], ";", " ", 
      StyleBox["\[IndentingNewLine]",
       FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"check", " ", "spatialDimentions"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["fixspatialDimensions",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"d_", ",", " ", "id_"}], "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<0\>\"", ",", "\"\<3\>\""}], "]"}], ",", " ", 
              "d"}], "]"}], ",", " ", 
            RowBox[{"Return", "[", "d", "]"}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"d", "\[NotEqual]", " ", "\"\<\>\""}], " ", "\[And]", 
             " ", "$SBML$warnings"}], ",", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Warning: \>\"", "//", "boldOrange"}], ",", 
              "\[IndentingNewLine]", " ", 
              RowBox[{
              "\"\<Invalid spatialDimensions of \>\"", "//", "boldBlack"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ToString", "[", "d", "]"}], "//", "boldRed"}], ",", 
              RowBox[{"\"\< for compartment \>\"", "//", "boldBlack"}], ",", 
              RowBox[{"id", "//", "boldRed"}], ",", " ", 
              RowBox[{"\"\< set to 3.\>\"", "//", "boldBlack"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "\"\<3\>\"", "]"}], ";"}]}], " ", 
        "\[IndentingNewLine]", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", 
        StyleBox["fixspatialDimensions",
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["*)",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
      RowBox[{"spatialDimensions", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"fixspatialDimensions", ",", 
         RowBox[{"{", 
          RowBox[{"spatialDimensions", ",", "ids"}], "}"}]}], "]"}]}], ";", 
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", 
        "\"\<getLevel2compartments:{ids,names,spatialDimensions,sizes,units,\
outsides,constants}(3)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "ids", ",", "names", ",", "spatialDimensions", ",", "sizes", ",", 
          "units", ",", "outsides", ",", "constants"}], "}"}]}], "]"}], ";", 
      " ", "\[IndentingNewLine]", 
      StyleBox["\[IndentingNewLine]",
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"(*", " ", 
       RowBox[{"check", " ", "sizes"}], " ", "*)"}], "\[IndentingNewLine]", 
      StyleBox[" ",
       FontWeight->"Plain",
       FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
      RowBox[{"sizes", " ", "=", " ", 
       RowBox[{"stringulate", "[", 
        RowBox[{"fromEForm", "/@", "sizes"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", 
        "\"\<getLevel2compartments:{ids,names,spatialDimensions,sizes,units,\
outsides,constants}(4)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "ids", ",", "names", ",", "spatialDimensions", ",", "sizes", ",", 
          "units", ",", "outsides", ",", "constants"}], "}"}]}], "]"}], ";", 
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"check", " ", "units"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 1]], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["fixUnits",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{
        "unit_", ",", " ", "compartment_", ",", " ", "spatialDimensions_"}], 
        "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fixed", ",", "derived", ",", "allowed", ",", "ok", ",", 
           RowBox[{"dbg", "=", "False"}], ",", " ", "whichallowed", ",", " ", 
           "conversionFactor"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"allowed", "=", 
           RowBox[{"unitsContextify", "[", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "spatialDimensions", ",", "\[IndentingNewLine]", "\"\<0\>\"", 
              ",", "\"\<dimensionless\>\"", ",", "\[IndentingNewLine]", 
              "\"\<1\>\"", ",", " ", "\"\<length\>\"", ",", 
              "\[IndentingNewLine]", "\"\<2\>\"", ",", " ", "\"\<area\>\"", 
              ",", "\[IndentingNewLine]", "\"\<3\>\"", ",", " ", 
              "\"\<volume\>\""}], "\[IndentingNewLine]", "]"}], "]"}]}], ";", 
          " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2compartments: fixUnits:{unit,compartment}\>\"", ",",
             " ", 
            RowBox[{"{", 
             RowBox[{"unit", " ", ",", " ", "compartment"}], "}"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getLevel2compartments: allowed\>\"", ",", " ", 
            "allowed"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"unit", "\[Equal]", " ", "\"\<Indeterminate\>\""}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"allowed", " ", "=", " ", 
              RowBox[{"ToExpression", "[", "allowed", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"derived", " ", "=", 
              RowBox[{"allowed", "//.", "$SBML$UnitRules"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"whichallowed", "=", "derived"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"conversionFactor", "=", "1"}], ";", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"debugPrint", "[", 
              RowBox[{
              "dbg", ",", 
               "\"\<getLevel2compartments: fixUnits: Indeterminate:  \
{allowed, derived}: \>\"", ",", 
               RowBox[{"{", 
                RowBox[{"allowed", ",", "derived"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"debugPrint", "[", 
              RowBox[{
              "dbg", ",", 
               "\"\<getLevel2compartments: fixUnits: Returning: \
{allowed,derived,whichallowed, conversionFactor}: \>\"", ",", 
               RowBox[{"{", 
                RowBox[{
                "allowed", ",", "derived", ",", "whichallowed", ",", " ", 
                 "conversionFactor"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "allowed", ",", "derived", ",", "whichallowed", ",", " ", 
                "conversionFactor"}], "}"}], "]"}]}]}], "\[IndentingNewLine]",
            "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"$SBML$UnitsDefined", ",", "unit"}], "]"}]}], " ", 
             "\[And]", " ", "$SBML$warnings"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Warning: \>\"", "//", "boldOrange"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<Invalid units=\>\"", "//", "boldBlack"}], ",", 
               RowBox[{"unit", "//", "boldRed"}], ",", 
               RowBox[{"\"\< in compartment id=\>\"", "//", "boldBlack"}], 
               ",", 
               RowBox[{"compartment", "//", "boldRed"}], ",", 
               RowBox[{
               "\"\< The 'units' field must refer to a previously defined \
unitDefinition 'id' attribute value.\>\"", "//", "boldBlack"}]}], "]"}], 
             ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"fixed", " ", "=", " ", 
           RowBox[{"unit", "/.", 
            RowBox[{"unitsContextify", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<meter\>\"", "\[Rule]", " ", "\"\<metre\>\""}], 
               ",", " ", 
               RowBox[{"\"\<liter\>\"", "\[Rule]", " ", "\"\<litre\>\""}]}], 
              "}"}], "]"}]}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"printWarning", "[", 
           RowBox[{
            RowBox[{"fixed", "\[NotEqual]", " ", "unit"}], ",", " ", 
            RowBox[{"\"\<Units '\>\"", "<>", 
             RowBox[{"decontextify", "[", "unit", "]"}], "<>", 
             "\"\<' specified for compartment '\>\"", "<>", "compartment", 
             "<>", "\"\<' assumed to be '\>\"", "<>", 
             RowBox[{"decontextify", "[", "fixed", "]"}], "<>", 
             "\"\<'.\>\""}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getLevel2compartments: fixUnits: fixed\>\"", ",", 
            "fixed"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2compartments: fixUnits: $SBML$UnitRules\>\"", ",", 
            " ", "$SBML$UnitRules"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"derived", " ", "=", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", "fixed", "]"}], "//.", 
            "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getLevel2compartments: fixUnits: derived\>\"", 
            ",", "derived"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"allowed", "=", 
           RowBox[{"unitsContextify", "[", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "spatialDimensions", ",", "\[IndentingNewLine]", "\"\<0\>\"", 
              ",", 
              RowBox[{"{", "\"\<dimensionless\>\"", "}"}], ",", 
              "\[IndentingNewLine]", "\"\<1\>\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<length\>\"", ",", " ", "\"\<metre\>\""}], "}"}], 
              ",", "\[IndentingNewLine]", "\"\<2\>\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{"\"\<area\>\"", ",", " ", "\"\<metre^2\>\""}], "}"}], 
              ",", "\[IndentingNewLine]", "\"\<3\>\"", ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<volume\>\"", ",", "\"\<metre^3\>\"", ",", " ", 
                "\"\<litre\>\""}], "}"}]}], "\[IndentingNewLine]", "]"}], 
            "]"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"allowed", " ", "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", " ", "allowed", "]"}], "//.", 
            "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getLevel2compartments: fixUnits: allowed\>\"", 
            ",", " ", "allowed"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"ok", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"derived", ",", "#"}], "}"}], "&"}], ",", " ", 
             "allowed"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ok", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", " ", "ok"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ok", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"NumberQ", ",", " ", "ok"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"whichallowed", "=", 
           RowBox[{"Position", "[", 
            RowBox[{"ok", ",", "True"}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"ok", " ", "=", " ", 
           RowBox[{"Apply", "[", 
            RowBox[{"Or", ",", " ", "ok"}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getLevel2compartments: fixUnits: ok: \>\"", ",", 
            "ok"}], "]"}], ";", "\[IndentingNewLine]", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"!", "ok"}], ")"}], " ", "\[And]", " ", 
             "$SBML$warnings"}], ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<Specified units=\>\"", "//", "boldBlack"}], ",", 
              RowBox[{"fixed", "//", "boldBlue"}], ",", 
              RowBox[{"\"\< for compartment \>\"", "//", "boldBlack"}], ",", 
              RowBox[{"compartment", "//", "boldBlue"}], ",", 
              RowBox[{
              "\"\< do not appear to be valid units for a compartment of \
spatialDimensions=\>\"", "//", "boldBlack"}], ",", 
              RowBox[{"spatialDimensions", "//", "boldBlue"}], ",", 
              RowBox[{
              "\"\< Valid units are any units derived from one of the \
following: \>\"", "//", "boldBlack"}], ",", 
              RowBox[{
               RowBox[{"list2CommaSeparatedString", "[", 
                RowBox[{
                 RowBox[{"Map", "[", 
                  RowBox[{"InputForm", ",", "allowed"}], "]"}], "//", 
                 "Union"}], "]"}], "//", "boldBlue"}], ",", 
              RowBox[{
              "\"\<-- the only units that can be derived from \>\"", "//", 
               "boldBlack"}], ",", 
              RowBox[{"fixed", "//", "boldBlue"}], ",", 
              RowBox[{"\"\< are \>\"", "//", "boldBlack"}], ",", 
              RowBox[{
               RowBox[{"ToString", "[", "derived", "]"}], "//", 
               "boldBlue"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
          " ", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2compartments: fixUnits: return value: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{"fixed", ",", "derived"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ListQ", "[", "whichallowed", "]"}], "\[And]", 
             RowBox[{
              RowBox[{"Length", "[", "whichallowed", "]"}], ">", "0"}]}], ",",
             " ", "\[IndentingNewLine]", 
            RowBox[{"whichallowed", "=", 
             RowBox[{"First", "[", "whichallowed", "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumberQ", "[", "whichallowed", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"whichallowed", "=", 
              RowBox[{"allowed", "[", 
               RowBox[{"[", "whichallowed", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"conversionFactor", "=", 
              RowBox[{"derived", "/", "whichallowed"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"whichallowed", "=", "Indeterminate"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"conversionFactor", "=", "Indeterminate"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getLevel2compartments:fixUnits: compartment:\>\"", ",", 
               "compartment"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getLevel2compartments:fixUnits: allowed:\>\"", ",", 
               "allowed"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getLevel2compartments:fixUnits: whichallowed:\>\"", ",", 
               "whichallowed"}], "]"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getLevel2compartments:fixUnits: derived:\>\"", ",", 
               "derived"}], "]"}], ";", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getLevel2compartments:fixUnits: conversionFactor:\>\"", 
               ",", "conversionFactor"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
            "fixed", ",", "derived", ",", "whichallowed", ",", " ", 
             "conversionFactor"}], "}"}], "]"}], ";"}]}], " ", 
        "\[IndentingNewLine]", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", " ", 
        StyleBox["fixUnits",
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], "*)"}], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"units", " ", "=", " ", 
       RowBox[{"MapThread", "[", 
        RowBox[{"fixUnits", ",", 
         RowBox[{"{", 
          RowBox[{"units", ",", " ", "ids", ",", " ", "spatialDimensions"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "units", ",", "derivedunits", ",", "spatialUnits", ",", 
         "conversionFactors"}], "}"}], "=", 
       RowBox[{"Transpose", "[", "units", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normalizedSizes", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ToExpression", "/@", "sizes"}], ")"}], "*", 
        "conversionFactors"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", " ", 
        "\"\<getLevel2compartments: \
{units,derivedunits,spatialUnits,conversionFactors,normalizedSizes}\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "units", ",", "derivedunits", ",", "spatialUnits", ",", 
          "conversionFactors", ",", "normalizedSizes"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$UnitAssociations", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"$SBML$UnitAssociations", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Rule", "[", 
             RowBox[{
              RowBox[{"ToExpression", "[", "#1", "]"}], ",", " ", "#2"}], 
             "]"}], "&"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"ids", ",", "derivedunits"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", 
        "\"\<getLevel2compartments:{ids,names,spatialDimensions,sizes,units,\
outsides,constants}(5)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "ids", ",", "names", ",", "spatialDimensions", ",", "sizes", ",", 
          "units", ",", "outsides", ",", "constants"}], "}"}]}], "]"}], ";", 
      " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"check", " ", "constants"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 1]], "\[IndentingNewLine]", 
      RowBox[{"constants", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToUpperCase", "[", "#", "]"}], "\[Equal]", 
             "\"\<FALSE\>\""}], ",", "False", ",", "True"}], "]"}], "&"}], 
         ",", "constants"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"definef", "[", 
          RowBox[{"SBMLIC", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"ids", ",", "sizes"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"definef", "[", 
          RowBox[{"SBMLIC\[UnderBracket]SI", ",", " ", 
           RowBox[{"ToExpression", "[", "#1", "]"}], ",", " ", "#2"}], "]"}], 
         "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ids", ",", " ", "normalizedSizes"}], "}"}]}], "]"}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"cids", " ", "=", " ", 
       RowBox[{"ToExpression", "/@", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"#1", ",", " ", "#2", ",", 
             RowBox[{"functionate", "[", " ", "#2", "]"}]}], "]"}], "&"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"constants", ",", " ", "ids"}], "}"}]}], "]"}]}]}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"definef", "[", 
          RowBox[{"SBMLCompartmentSize", ",", "#1", ",", " ", "#2"}], "]"}], 
         "&"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ToExpression", "/@", "ids"}], ",", 
          RowBox[{"(", 
           RowBox[{"conversionFactors", "*", "cids"}], ")"}]}], "}"}]}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["checkConstant",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"id_", ",", " ", "constant_"}], "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SBMLConstantQ", "[", "id", "]"}], "=", "constant"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"constant", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"defineParameter", "[", "id", "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"addReplacementRule", "[", "id", "]"}], ";"}], " ", 
            "\[IndentingNewLine]", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"defineVariable", "[", "id", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", " ", 
        StyleBox["checkConstant",
         FontColor->RGBColor[0, 0, 1]]}], "*)"}], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        StyleBox["checkConstant",
         FontColor->RGBColor[0, 0, 1]], ",", " ", 
        RowBox[{"{", 
         RowBox[{"ids", ",", "constants"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"(*", " ", 
        RowBox[{"check", " ", "outsides"}], " ", "*)"}],
       FontColor->RGBColor[1, 0, 1]], " ", "\[IndentingNewLine]", 
      RowBox[{"outsides", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"makeIntoValidSId", ",", " ", "outsides"}], "]"}]}], ";", " ",
       "\[IndentingNewLine]", 
      RowBox[{"outsides", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#", "\[Equal]", " ", "\"\<\>\""}], ",", " ", "#", ",", 
            RowBox[{"contextify", "[", "#", "]"}]}], "]"}], "&"}], ",", " ", 
         "outsides"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"printWarning", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#1", "\[NotEqual]", " ", "\"\<\>\""}], ")"}], "\[And]", 
            RowBox[{"(", 
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"ids", ",", " ", "#1"}], "]"}]}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
           "\"\<Outside compartment \\\"\>\"", "<>", "#1", "<>", 
            "\"\<\\\" indicated for compartment \\\"\>\"", "<>", "#2", "<>", 
            "\"\<\\ is not a known compartment.\>\""}]}], "]"}], "&"}], ",", 
        "  ", 
        RowBox[{"{", 
         RowBox[{"outsides", ",", " ", "ids"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentNames", "=", "names"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$Compartmentids", "=", "ids"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentSizes", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Symbol", "[", "#1", "]"}], "\[Rule]", " ", 
           RowBox[{"ToExpression", "[", "#2", "]"}]}], "&"}], ",", 
         RowBox[{"{", 
          RowBox[{"ids", ",", "sizes"}], "}"}]}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentUnits", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", " ", "#2"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ids", ",", " ", "units"}], "}"}]}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentOutsides", "=", "outsides"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$CompartmentSpatialDimensions", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[Rule]", " ", "#2"}], "&"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"ids", ",", "spatialDimensions"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
       "saveVerboseData", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "$SBML$verboseContext"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ids", " ", "=", " ", 
             RowBox[{"decontextify", "[", "ids", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"outsides", " ", "=", " ", 
             RowBox[{"decontextify", "[", "outsides", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"units", " ", "=", " ", 
             RowBox[{"unitsDecontextify", "[", "units", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"derivedunits", "=", 
             RowBox[{"unitsDecontextify", "[", "derivedunits", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"derivedunits", " ", "=", " ", 
             RowBox[{"ToString", "/@", 
              RowBox[{"(", 
               RowBox[{"InputForm", "/@", "derivedunits"}], ")"}]}]}], ";", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"spatialUnits", "=", 
             RowBox[{"stringer", "/@", 
              RowBox[{"unitsDecontextify", "[", "spatialUnits", "]"}]}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">",
                "2.15"}], ",", 
              RowBox[{"vctypes", "=", 
               RowBox[{"decontextify", "[", "vctypes", "]"}]}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"vhead", "=", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ID\>\"", ",", "\"\<MetaID\>\"", ",", " ", "\"\<Name\>\""}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.15"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"vhead", ",", "\"\<CompartmentType\>\""}], "]"}]}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"vhead", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"vhead", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Dimension\>\"", ",", "\"\<Size\>\"", ",", "\"\<Units\>\"", 
              ",", "\"\<Derived Units\>\"", ",", " ", "\"\<Outside\>\"", ",", 
              "\"\<Constant\>\""}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"vdata", "=", 
          RowBox[{"{", 
           RowBox[{"ids", ",", "metas", ",", " ", "names"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.15"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"vdata", ",", "vctypes"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"vdata", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"vdata", ",", 
            RowBox[{"{", 
             RowBox[{
             "spatialDimensions", ",", "sizes", ",", " ", "units", ",", 
              "derivedunits", ",", "outsides", ",", "constants"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"$SBML$verboseNormalizedValues", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"vhead", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"vhead", ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Normalized\>\"", ",", "\"\<Normalized Units\>\""}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"vdata", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"vdata", ",", 
               RowBox[{"{", 
                RowBox[{"normalizedSizes", ",", "spatialUnits"}], "}"}]}], 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"verboseSave", "[", 
          RowBox[{"\"\<Compartments\>\"", ",", "vhead", ",", 
           RowBox[{"Transpose", "[", "vdata", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3902147048806458`*^9, 3.390214736867599*^9}, {
  3.390215075780491*^9, 3.3902150764279947`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2speciesTypes", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2speciesTypes", "[", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dbg", "=", "False"}], ",", "st", ",", "ids", ",", "metas", 
       ",", " ", "names"}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"st", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfSpeciesTypes\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], "<", 
         "2.2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "st", "]"}], ">", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
              RowBox[{"\"\< listOfSpeciesTypes \>\"", "//", "boldBlue"}], ",",
               " ", 
              RowBox[{
              "\"\<is not supported in SBML Level \>\"", "//", "boldBlack"}], 
              ",", " ", 
              RowBox[{"$SBML$Level$Version", "//", "boldBlack"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2speciesTypes: st(1)\>\"", ",", " ", "st"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"st", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"st", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<speciesType\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2speciesTypes: st(2)\>\"", ",", " ", "st"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addSpeciesType", "/@", "st"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"st", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"extractXMLOptions", ",", "st"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2speciesTypes: st(3)\>\"", ",", " ", "st"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ids", " ", "=", 
       RowBox[{"makeIntoValidSId", "/@", 
        RowBox[{"(", " ", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\"\<id\>\"", "/.", "#"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<id\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
            "&"}], ",", " ", "st"}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"checkForSymbolCollision", "[", 
         RowBox[{
          RowBox[{"contextify", "[", "#", "]"}], ",", "\"\<speciesType\>\""}],
          "]"}], "&"}], "/@", "ids"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"names", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<name\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", "st"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2speciesTypes: {ids,names}:\>\"", ",", " ", 
        RowBox[{"{", 
         RowBox[{"ids", ",", "names"}], "}"}]}], "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"metas", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<metaid\>\"", "/.", "#"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}], 
          "&"}], ",", "st"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"metas", " ", "=", " ", 
       RowBox[{"stringer", "/@", "metas"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ids", "=", 
       RowBox[{"contextify", "[", "ids", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$SpeciesTypes", "=", 
       RowBox[{"ToExpression", "/@", "ids"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"MapThread", "[", 
       RowBox[{"saveNameIDAssociation", ",", 
        RowBox[{"{", 
         RowBox[{"names", ",", "ids"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "$SBML$verboseContext"}], ",", 
           RowBox[{
            RowBox[{"ids", " ", "=", " ", 
             RowBox[{"decontextify", "[", "ids", "]"}]}], ";"}]}], "]"}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"verboseSave", "[", 
          RowBox[{"\"\<SpeciesTypes\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<ID\>\"", ",", "\"\<MetaID\>\"", ",", "\"\<Name\>\""}], "}"}],
            ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"ids", ",", "metas", ",", " ", "names"}], "}"}], "]"}]}],
           "\[IndentingNewLine]", "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
       "]"}], ";"}]}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.397155878442688*^9, 3.397155890021439*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["setCrossProduct", "Subsection"],

Cell["\<\
returns all possible combinations of {x, y} where x is an element of l1 and y \
is an element of l2\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"setCrossProduct", "[", 
    RowBox[{"l1_", ",", " ", "l2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], ":=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "#"}], "}"}], "&"}], ",", " ", "l2"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"f", ",", "l1"}], "]"}], "//", "Flatten"}], ",", "2"}], 
        "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getIDandName", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getIDandName", "[", 
    RowBox[{"opt_", ",", " ", "def_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"id", ",", " ", "vid", ",", "name"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"id", " ", "=", " ", 
       RowBox[{
        RowBox[{"\"\<id\>\"", "/.", "opt"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\"\<id\>\"", "\[Rule]", " ", "def"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"vid", "=", 
       RowBox[{"makeIntoValidSId", "[", "id", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"id", " ", "=", " ", "vid"}], ";", "\[IndentingNewLine]", 
      RowBox[{"id", " ", "=", " ", 
       RowBox[{"contextify", "[", "id", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"defineVariable", "[", "id", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"name", " ", "=", 
       RowBox[{
        RowBox[{"\"\<name\>\"", "/.", "opt"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"saveNameIDAssociation", "[", " ", 
       RowBox[{"name", ",", "id"}], "]"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"id", ",", "name"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2species", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2species", "[", "opt___", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dbg", "=", "False"}], ",", "s", ",", " ", 
       StyleBox["getSpecies",
        FontColor->RGBColor[0, 0, 1]], ",", "n"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$SBML$SpeciesCompartmentAssociations", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["getSpecies",
         FontColor->RGBColor[0, 0, 1]], "[", "s_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "sp", ",", "id", ",", "name", ",", "compartment", ",", 
           "initialAmount", ",", "initialConcentration", ",", "units", ",", 
           "boundaryCondition", ",", "charge", ",", "constant", ",", 
           "isConcentration", ",", " ", "isAmount", ",", "type", ",", "ok", 
           ",", " ", "allowedUnitNumerators", ",", " ", 
           "allowedUnitDenominators", ",", "sd", ",", " ", "possibleUnits", 
           ",", "ic", ",", " ", "tfvalue", ",", "substanceConversion", ",", 
           "compartmentDerivedUnits", ",", "speciesBaseUnits", ",", 
           "speciesType", ",", "\[IndentingNewLine]", "derivedSubstanceUnits",
            ",", "derivedSpatialSizeUnits", ",", "check", ",", "vol", ",", 
           "normalizedInitialAmount", ",", "\[IndentingNewLine]", 
           "substanceUnits", ",", " ", "spatialSizeUnits", ",", " ", 
           "defSpatialSizeUnits", ",", "dim", ",", "hasOnlySubstanceUnits", 
           ",", " ", "initialSubstanceAmount", ",", "fixCubicMetres", ",", 
           " ", "conversionFactor", ",", "idoft", ",", "newrule", ",", "comp",
            ",", " ", "returnValue", ",", " ", "headers", ",", " ", "t0", ",",
            " ", "cpu", ",", " ", "t1", ",", " ", "CPU", ",", 
           RowBox[{"dbg", "=", "False"}], ",", "  ", 
           RowBox[{"debug", "=", "False"}]}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t0", "=", 
           RowBox[{"TimeUsed", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<------> getSpecies:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"debug", ",", " ", "\"\<getSpecies: s \>\"", ",", "s"}], 
           "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            StyleBox["fixCubicMetres",
             FontColor->RGBColor[1, 0, 0]], "[", "u_", "]"}], ":=", " ", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"str", ",", " ", "s1", ",", " ", "s2"}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"str", "=", 
               RowBox[{"ToString", "[", 
                RowBox[{"InputForm", "[", "u", "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s1", " ", "=", " ", 
               RowBox[{
                RowBox[{"StringPosition", "[", 
                 RowBox[{"str", ",", " ", "\"\<metre\>\""}], "]"}], "//", 
                "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{
                RowBox[{"StringPosition", "[", 
                 RowBox[{"str", ",", " ", "\"\<litre\>\""}], "]"}], "//", 
                "Length"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"s1", ">", "0"}], " ", "\[And]", " ", 
                 RowBox[{"s2", ">", "0"}]}], ",", 
                RowBox[{"Return", "[", 
                 RowBox[{"(", 
                  RowBox[{"u", "/.", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"Rule", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"unitsContextify", "[", "\"\<litre\>\"", "]"}], "//",
                     "ToExpression"}], ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"unitsContextify", "[", "\"\<metre\>\"", "]"}], "//",
                     "ToExpression"}], ")"}], "^", "3"}]}], 
                    "\[IndentingNewLine]", "]"}], "}"}]}], ")"}], "]"}]}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Return", "[", "u", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{"end", " ", "of", " ", 
            StyleBox["fixCubicMetres",
             FontColor->RGBColor[1, 0, 0]]}], " ", "*)"}], " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tfvalue", "[", "\"\<true\>\"", "]"}], ":=", " ", "True"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tfvalue", "[", "\"\<false\>\"", "]"}], ":=", " ", 
           "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tfvalue", "[", "___", "]"}], ":=", " ", "False"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"sp", " ", "=", " ", 
           RowBox[{"extractXMLOptions", "[", "s", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getLevel2Species: getSpecies:XML options extracted:\>\"", 
              ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"debug", ",", " ", "\"\<getSpecies: sp \>\"", ",", "sp"}], 
           "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"n", "++"}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"getID", "&"}], "Name", " ", "also", " ", "has", " ", 
            "defineVarible", " ", "in", " ", "it"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"id", ",", "name"}], "}"}], " ", "=", " ", 
           RowBox[{"getIDandName", "[", 
            RowBox[{"sp", ",", " ", 
             RowBox[{"\"\<species\>\"", "<>", 
              RowBox[{"ToString", "[", "n", "]"}]}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getLevel2Species: getSpecies:id:\>\"", ",", " ", "id", ",", 
              "\"\<:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"checkForSymbolCollision", "[", 
           RowBox[{"id", ",", "\"\<species\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getLevel2Species: getSpecies:checked for symbol collision: \
\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"addID", "[", 
             RowBox[{"id", ",", " ", "\"\<species\>\""}], "]"}], ";"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<getLevel2Species: getSpecies:id added:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"$SBML$Species$IDs", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"$SBML$Species$IDs", ",", 
             RowBox[{"ToExpression", "[", "id", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "replace", " ", "option", " ", "checking", " ", "with", " ", 
             "getSBMLfield", " ", "to", " ", "allow", " ", "things", " ", 
             "like", " ", "\"\<compartment\>\""}], "\[Rule]", " ", 
            RowBox[{"\"\<compartment\>\"", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"etc", ".", " ", "5"}], "/", "17"}], "/", "04"}]}]}], 
           "\[IndentingNewLine]", "*)"}], " ", "\[IndentingNewLine]", 
          RowBox[{"speciesType", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<speciesType\>\"", ",", "s"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", "speciesType", "]"}], ">", "0"}], 
            ",", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"speciesType", "=", 
              RowBox[{"makeIntoValidSId", "[", "speciesType", "]"}]}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"speciesType", "=", 
              RowBox[{"contextify", "[", "speciesType", "]"}]}], ";", " ", 
             RowBox[{"$SBML$SpeciesTypeAssociations", "=", 
              RowBox[{"Append", "[", "\[IndentingNewLine]", 
               RowBox[{
               "$SBML$SpeciesTypeAssociations", ",", "\[IndentingNewLine]", 
                RowBox[{"Rule", "[", 
                 RowBox[{
                  RowBox[{"ToExpression", "[", "id", "]"}], ",", 
                  RowBox[{"ToExpression", "[", "speciesType", "]"}]}], 
                 "]"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"$SBML$SpeciesTypes", ",", 
                  RowBox[{"ToExpression", "[", "speciesType", "]"}]}], 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Warning: \>\"", "//", "boldOrange"}], ",", " ", 
                  RowBox[{"\"\<Species \>\"", "//", "boldBlack"}], ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "id", "]"}], "//", 
                   "boldBlue"}], ",", " ", 
                  RowBox[{
                  "\"\< is defined as an unknown speciesType \>\"", "//", 
                   "boldBlack"}], ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "speciesType", "]"}], "//", 
                   "boldBlue"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"compartment", "=", 
           RowBox[{"contextify", "[", 
            RowBox[{"getSBMLfield", "[", 
             RowBox[{"\"\<compartment\>\"", ",", "s"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"decontextify", "[", "compartment", "]"}], "==", 
             "\"\<\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{"printWarning", "[", 
             RowBox[{
             "\"\<Species \\\"\>\"", "<>", "id", "<>", "\"\<\\\" is =\>\""}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{"$SBML$Compartmentids", ",", "compartment"}], 
                 "]"}]}], ",", " ", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Block", "[", 
                 RowBox[{
                  RowBox[{"{", "dc", "}"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"dc", "=", 
                    RowBox[{"decontextify", "[", "compartment", "]"}]}], ";", 
                   " ", "\[IndentingNewLine]", 
                   RowBox[{"dc", "=", 
                    RowBox[{"quote", "[", "dc", "]"}]}], ";", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                    RowBox[{
                    "\"\<unknown compartment \>\"", "//", "boldBlack"}], ",", 
                    RowBox[{
                    RowBox[{"decontextify", "[", "compartment", "]"}], "//", 
                    "boldBlue"}], ",", 
                    RowBox[{
                    "\"\< specified for species \>\"", "//", "boldBlack"}], 
                    ",", " ", 
                    RowBox[{
                    RowBox[{"decontextify", "[", "id", "]"}], "//", 
                    "boldBlue"}], ",", "\"\<\\n\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{"s", ",", " ", "Purple", ",", " ", 
                    RowBox[{"\"\<compartment=\>\"", "<>", "dc"}]}], "]"}]}]}],
                     "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"dim", " ", "=", " ", 
           RowBox[{
            RowBox[{
            "compartment", "/.", "$SBML$CompartmentSpatialDimensions"}], "/.", 
            RowBox[{"{", 
             RowBox[{"compartment", "\[Rule]", " ", "\"\<Indeterminate\>\""}],
              "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dim", " ", "\[Equal]", " ", "\"\<Indeterminate\>\""}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", " ", 
              RowBox[{
              "\"\< Unable to determine spatial dimensions of compartment \
\>\"", "//", "boldBlack"}], ",", " ", 
              RowBox[{
               RowBox[{"decontextify", "[", "compartment", "]"}], "//", 
               "boldBlue"}]}], " ", "]"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", "\"\<getSpecies: dim\>\"", ",", " ", "dim"}], 
           "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SBMLConstantQ", "[", "compartment", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"$SBML$SpeciesCompartmentAssociations", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$SpeciesCompartmentAssociations", ",", " ", 
                RowBox[{"id", "\[Rule]", " ", "compartment"}]}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SBMLSpeciesCompartment", "[", 
               RowBox[{
                RowBox[{"functionate", "[", "id", "]"}], "//", 
                "ToExpression"}], "]"}], "=", 
              RowBox[{"compartment", "//", "ToExpression"}]}], ";"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"$SBML$SpeciesCompartmentAssociations", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$SpeciesCompartmentAssociations", ",", " ", 
                RowBox[{"id", "\[Rule]", " ", 
                 RowBox[{"functionate", "[", "compartment", "]"}]}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SBMLSpeciesCompartment", "[", 
               RowBox[{
                RowBox[{"functionate", "[", "id", "]"}], "//", 
                "ToExpression"}], "]"}], "=", 
              RowBox[{
               RowBox[{"functionate", "[", "compartment", "]"}], "//", 
               "ToExpression"}]}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"type", " ", "=", " ", "\"\<\>\""}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"initialAmount", "=", 
           RowBox[{
            RowBox[{"\"\<initialAmount\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<initialAmount\>\"", "\[Rule]", "\"\<\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"isAmount", "=", 
           RowBox[{"(", 
            RowBox[{"initialAmount", "\[NotEqual]", " ", "\"\<\>\""}], 
            ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isAmount", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", "\"\<initialAmount\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"initialAmount", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"initialAmount", "//", "fromEForm"}], "//", 
                "InputForm"}], "//", "ToString"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ic", " ", "=", " ", "initialAmount"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"initialConcentration", "=", 
           RowBox[{
            RowBox[{"\"\<initialConcentration\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{
             "\"\<initialConcentration\>\"", "\[Rule]", "  ", "\"\<\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"isConcentration", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{"initialConcentration", " ", "\[NotEqual]", "\"\<\>\""}], 
            ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isConcentration", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", "\"\<initialConcentration\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"initialConcentration", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"initialConcentration", "//", "fromEForm"}], "//", 
                "InputForm"}], "//", "ToString"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ic", " ", "=", " ", "initialConcentration"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"id", "/.", "$SBML$CompartmentSpatialDimensions"}], 
                ")"}], " ", "\[Equal]", " ", "\"\<0\>\""}], ")"}], "  ", 
             "\[And]", " ", "isConcentration"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"printWarning", "[", 
              RowBox[{
              "\"\<Field \\\"initialConcentration\\\" setting for compartment \
\\\"\>\"", "<>", "id", "<>", 
               "\"\<\\\" ignored because the compartment has a \
\\\"spatialDimensions\\\"=\\\"0\\\".\>\""}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"isConcentration", "=", "False"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"initialConcentration", "=", "\"\<\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"type", "=", "\"\<initialAmount\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"isAmount", ",", " ", 
               RowBox[{"ic", "=", "initialAmount"}], ",", " ", 
               RowBox[{"ic", "=", "$SBML$IndeterminateValue"}]}], " ", "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"isAmount", " ", "\[And]", " ", "isConcentration"}], " ", 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"isAmount", "=", "False"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"initialAmount", "=", " ", "\"\<\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"type", "=", "\"\<initialConcentration\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ic", " ", "=", " ", "initialConcentration"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"printWarning", "[", "\[IndentingNewLine]", 
              RowBox[{
              "\"\<Fields \\\"initialAmount\\\" and \
\\\"initialConcentration\\\" are both set for species \\\"\>\"", "<>", "id", 
               "<>", "\"\<\\\". These fields are mutually exclusive.  \
\\\"initialAmount\\\" will be ignored.\>\""}], "]"}], ";"}]}], " ", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{"isAmount", " ", "\[Or]", " ", "isConcentration"}], 
              ")"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ic", " ", "=", " ", "$SBML$IndeterminateValue"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"type", "=", "\"\<Indeterminate\>\""}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"substanceUnits", "=", 
           RowBox[{
            RowBox[{"\"\<substanceUnits\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{
             "\"\<substanceUnits\>\"", "\[Rule]", " ", "\"\<substance\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"substanceUnits", "=", 
           RowBox[{"unitsContextify", "[", "substanceUnits", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"derivedSubstanceUnits", "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", "substanceUnits", "]"}], "//.", 
            "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", 
            "\"\<getlevel2Species: getSpecies: substanceUnits:\>\"", ",", " ",
             "substanceUnits"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", 
            "\"\<getlevel2Species: getSpecies: derivedSubstanceUnits:\>\"", 
            ",", " ", "derivedSubstanceUnits"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", 
            "\"\<getlevel2Species: getSpecies: $SBML$UnitRules:\>\"", ",", 
            " ", "$SBML$UnitRules"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"check", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"derivedSubstanceUnits", "/", 
              RowBox[{"(", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"unitsContextify", "[", "\"\<substance\>\"", "]"}], 
                "]"}], ")"}]}], ")"}], "//.", "$SBML$UnitRules"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"debug", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<\!\(\*
StyleBox[\"getSpecies\",
FontColor->RGBColor[0, 0, 1]]\): check=\>\"", "//", "boldRed"}], ",", 
              "check"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"NumberQ", "[", "check", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
              "add", " ", "additional", " ", "calculations", " ", "2.666", 
               " ", "because", " ", "earlier", " ", "check", " ", "only", " ",
                "checks", " ", "one", " ", "of", " ", "the", 
               "\[IndentingNewLine]", "ultimate", " ", "units"}], ",", " ", 
              RowBox[{"not", " ", "all", " ", "the", " ", "possibilities"}]}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<$ScalableUnits$Substance:\>\"", ",", " ", 
                  "$ScalableUnits$Substance"}], "]"}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<derivedSubstanceUnits:\>\"", ",", " ", 
                  "derivedSubstanceUnits"}], "]"}], ";"}]}], " ", 
              "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"derivedSubstanceUnits", "=", 
              RowBox[{
               RowBox[{"decontextify", "[", "derivedSubstanceUnits", "]"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{"ToExpression", "/@", "$ScalableUnits$Substance"}], 
                ")"}]}]}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"check", " ", "=", 
              RowBox[{"Or", "@@", 
               RowBox[{"(", " ", 
                RowBox[{"NumberQ", "/@", "derivedSubstanceUnits"}], ")"}]}]}],
              ";", " ", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<derivedSubstanceUnits:\>\"", ",", " ", 
                  "derivedSubstanceUnits"}], "]"}], ";", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{"\"\<check=\>\"", ",", "check"}], "]"}], ";"}]}], 
              " ", "\[IndentingNewLine]", "]"}], ";", " ", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "check"}], ",", " ", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", 
                  RowBox[{"\"\<species id=\>\"", "//", "boldBlack"}], ",", 
                  " ", 
                  RowBox[{"id", "//", "boldBlue"}], ",", 
                  RowBox[{"\"\< substanceUnits = \>\"", "//", "boldBlack"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "substanceUnits", "]"}], "//",
                    "boldBlue"}], ",", 
                  RowBox[{"\"\< derived units = \>\"", "//", "boldBlack"}], 
                  ",", " ", 
                  RowBox[{"derivedSubstanceUnits", "//", "boldBlue"}], ",", 
                  " ", 
                  RowBox[{
                  "\"\< do not appear to simplify to units of substance.\>\"",
                    "//", "boldBlack"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"$SBML$warnings", " ", "\[And]", " ", 
             RowBox[{"!", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"$SBML$UnitsDefined", ",", " ", "substanceUnits"}], 
               "]"}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Warning: \>\"", "//", "boldRed"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<Unknown substanceUnits = \>\"", "//", "boldBlack"}], ",", 
               RowBox[{
                RowBox[{"decontextify", "[", "substanceUnits", "]"}], "//", 
                "boldRed"}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\< specified for species \>\"", "//", "boldBlack"}],
                ",", 
               RowBox[{"id", "//", "boldRed"}], ",", " ", 
               RowBox[{"\"\<\\nKnown units are \>\"", "//", "boldBlack"}], 
               ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"decontextify", "/@", "$SBML$UnitsDefined"}], ")"}], 
                "//", "boldBlack"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"hasOnlySubstanceUnits", "=", 
           RowBox[{
            RowBox[{"\"\<hasOnlySubstanceUnits\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{
             "\"\<hasOnlySubstanceUnits\>\"", "\[Rule]", " ", 
              "\"\<false\>\""}], "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<true\>\"", ",", "\"\<false\>\""}], "}"}], ",", 
               " ", "hasOnlySubstanceUnits"}], "]"}]}], ",", " ", 
            RowBox[{"hasOnlySubstanceUnits", "=", "\"\<false\>\""}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"hasOnlySubstanceUnitsIndicator", "[", 
            RowBox[{"ToExpression", "[", 
             RowBox[{"functionate", "[", "id", "]"}], "]"}], "]"}], "=", 
           RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"spatialSizeUnits", "=", 
           RowBox[{
            RowBox[{"\"\<spatialSizeUnits\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{
             "\"\<spatialSizeUnits\>\"", "\[Rule]", " ", "\"\<1\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getLevel2species: spatialSizeUnits(0):\>\"", ",", 
              "spatialSizeUnits", ",", " ", "\"\<:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", "\"\<getSpecies: spatialSizeUnits(0): \>\"", 
            ",", " ", "spatialSizeUnits"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", "\"\<getSpecies: hasOnlySubstanceUnits: \>\"", 
            ",", " ", "hasOnlySubstanceUnits"}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"debugPrint", "[", 
              RowBox[{
              "debug", ",", " ", "\"\<getSpecies: spatialSizeUnits(1): \>\"", 
               ",", " ", "spatialSizeUnits"}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"spatialSizeUnits", "\[NotEqual]", " ", "\"\<1\>\""}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"debugPrint", "[", 
                 RowBox[{
                 "debug", ",", " ", 
                  "\"\<getSpecies: spatialSizeUnits(2): \>\"", ",", " ", 
                  "spatialSizeUnits"}], "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 StyleBox[
                  RowBox[{
                  "spatialSizeUnits", " ", "should", " ", "not", " ", "be", 
                   " ", "specified", " ", "but", " ", "were"}],
                  FontWeight->"Plain"], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Warning: \>\"", "//", "boldOrange"}], ",", " ", 
                  RowBox[{"\"\< spatialSizeUnits = \>\"", "//", "boldRed"}], 
                  ",", 
                  RowBox[{"spatialSizeUnits", "//", "boldRed"}], ",", 
                  RowBox[{
                  "\"\< may not be specified for species \>\"", "//", 
                   "boldBlack"}], ",", " ", 
                  RowBox[{"id", "//", "boldRed"}], ",", 
                  RowBox[{
                  "\"\< because hasOnlySubstanceUnits = false.\>\"", "//", 
                   "boldBlack"}]}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"spatialSizeUnits", "=", "\"\<1\>\""}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", " ",
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"debugPrint", "[", 
              RowBox[{
              "debug", ",", " ", "\"\<getSpecies: spatialSizeUnits(3): \>\"", 
               ",", " ", "spatialSizeUnits"}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"spatialSizeUnits", "==", "\"\<1\>\""}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                StyleBox[
                 RowBox[{
                 "spatialSizeUnits", " ", "should", " ", "have", " ", "been", 
                  " ", "given", " ", "but", " ", "were", " ", "not"}],
                 FontWeight->"Plain"], " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"defSpatialSizeUnits", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"compartment", "/.", "$SBML$CompartmentUnits"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    "compartment", "\[Rule]", " ", "\"\<Indeterminate\>\""}], 
                    "}"}]}], ")"}], "//", "decontextify"}], ")"}], "//", 
                  "stringer"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"debugPrint", "[", 
                 RowBox[{
                 "debug", ",", " ", 
                  "\"\<getSpecies: defSpatialSizeUnits(1): \>\"", ",", " ", 
                  "defSpatialSizeUnits"}], "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                  "defSpatialSizeUnits", "==", "\"\<Indeterminate\>\""}], ",",
                   "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"defSpatialSizeUnits", "=", 
                    RowBox[{"Switch", "[", 
                    RowBox[{
                    "dim", ",", "\[IndentingNewLine]", "\"\<0\>\"", ",", 
                    "\"\<dimensionless\>\"", ",", "\[IndentingNewLine]", 
                    "\"\<1\>\"", ",", "\"\<length\>\"", ",", 
                    "\[IndentingNewLine]", "\"\<2\>\"", ",", "\"\<area\>\"", 
                    ",", "\[IndentingNewLine]", "\"\<3\>\"", ",", 
                    "\"\<volume\>\"", ",", "\[IndentingNewLine]", "_", ",", 
                    "\"\<Indeterminate\>\""}], "\[IndentingNewLine]", "]"}]}],
                    ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"debugPrint", "[", 
                 RowBox[{
                 "debug", ",", " ", 
                  "\"\<getSpecies: defSpatialSizeUnits(2): \>\"", ",", " ", 
                  "defSpatialSizeUnits"}], "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"spatialSizeUnits", "=", 
                 RowBox[{
                  RowBox[{"\"\<spatialSizeUnits\>\"", "/.", "sp"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<spatialSizeUnits\>\"", "\[Rule]", " ", 
                    "defSpatialSizeUnits"}], "}"}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"dbg", ",", " ", 
                  RowBox[{
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<compartment:\>\"", ",", "compartment", ",", 
                    "\"\< defSpatialSizeUnits:\>\"", ",", 
                    "defSpatialSizeUnits", ",", " ", 
                    "\"\< spatialSizeUnits:\>\"", ",", " ", 
                    "spatialSizeUnits"}], "]"}], ";"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"debugPrint", "[", 
                 RowBox[{
                 "debug", ",", " ", 
                  "\"\<getSpecies: spatialSizeUnits(4): \>\"", ",", " ", 
                  "spatialSizeUnits"}], "]"}], ";"}]}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "debug", ",", " ", "\"\<getSpecies: spatialSizeUnits(5): \>\"", 
            ",", " ", "spatialSizeUnits"}], "]"}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getLevel2species: spatialSizeUnits(1):\>\"", ",", 
              "spatialSizeUnits", ",", " ", "\"\<:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"spatialSizeUnits", "==", "\"\<1\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"spatialSizeUnits", "=", "\"\<Indeterminate\>\""}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"units", "=", "substanceUnits"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"spatialSizeUnits", "=", 
              RowBox[{"unitsContextify", "[", "spatialSizeUnits", "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"units", "=", 
              RowBox[{
              "\"\<(\>\"", "<>", "substanceUnits", "<>", "\"\<)/(\>\"", "<>", 
               "spatialSizeUnits", "<>", "\"\<)\>\""}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getSpecies: units (1) :(\>\"", ",", " ", "id", ",", 
              "\"\<),\>\"", ",", " ", "units", ",", " ", "\"\<:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
            "spatialSizeUnits", "\[NotEqual]", " ", "\"\<Indeterminate\>\""}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<getLevel2species: spatialSizeUnits,$SBML$UnitsDefined:\>\
\"", ",", "spatialSizeUnits", ",", "$SBML$UnitsDefined", ",", " ", 
                 "\"\<:\>\"", ",", 
                 RowBox[{
                  RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], 
              "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"$SBML$warnings", " ", "\[And]", " ", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                  "$SBML$UnitsDefined", ",", " ", "spatialSizeUnits"}], 
                  "]"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                  "\"\<Unknown spatialSizeUnits = \>\"", "//", "boldBlack"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "spatialSizeUnits", "]"}], "//",
                    "boldBlue"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                  "\"\< specified for species \>\"", "//", "boldBlack"}], ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "id", "]"}], "//", 
                   "boldBlue"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{"s", ",", " ", "Purple", ",", " ", 
                    RowBox[{"\"\<spatialSizeUnits=\>\"", "<>", 
                    RowBox[{"quote", "[", 
                    RowBox[{"decontextify", "[", "spatialSizeUnits", "]"}], 
                    "]"}]}]}], "]"}]}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"derivedSpatialSizeUnits", "=", 
              RowBox[{
               RowBox[{"ToExpression", "[", "spatialSizeUnits", "]"}], "//.", 
               "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"check", " ", "=", " ", 
              RowBox[{
               RowBox[{"Switch", "[", 
                RowBox[{"dim", ",", "\[IndentingNewLine]", "\"\<0\>\"", ",", 
                 RowBox[{
                 "unitsContextify", "[", "\"\<dimensionless\>\"", "]"}], ",", 
                 "\[IndentingNewLine]", "\"\<1\>\"", ",", 
                 RowBox[{"unitsContextify", "[", "\"\<length\>\"", "]"}], ",",
                  "\[IndentingNewLine]", "\"\<2\>\"", ",", 
                 RowBox[{"unitsContextify", "[", "\"\<area\>\"", "]"}], ",", 
                 "\[IndentingNewLine]", "\"\<3\>\"", ",", 
                 RowBox[{"unitsContextify", "[", "\"\<volume\>\"", "]"}], ",",
                  "\[IndentingNewLine]", "_", ",", "\"\<Indeterminate\>\""}], 
                "\[IndentingNewLine]", "]"}], "//", "ToExpression"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"vol", " ", "=", " ", 
              RowBox[{"check", "//.", "$SBML$UnitRules"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"check", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"derivedSpatialSizeUnits", "/", "check"}], ")"}], "//.",
                "$SBML$UnitRules"}]}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<check:\>\"", ",", "check", ",", " ", "\"\<:\>\"", ",", 
                 RowBox[{
                  RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], 
              "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"check", " ", "=", " ", 
              RowBox[{"fixCubicMetres", "[", "check", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", " ", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<getLevel2species: check=\>\"", ",", "check", ",", " ", 
                 "\"\<:\>\"", ",", 
                 RowBox[{
                  RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], 
              "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"NumberQ", "[", "check", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Waring: \>\"", "//", "boldRed"}], ",", 
                  RowBox[{"\"\<spatialSizeUnits = \>\"", "//", "boldBlack"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"spatialSizeUnits", "//", "decontextify"}], "//", 
                   "boldBlue"}], ",", 
                  RowBox[{"\"\< for species = \>\"", "//", "boldBlack"}], ",",
                   " ", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "id", "]"}], "//", 
                   "boldBlue"}], ",", " ", 
                  RowBox[{
                  "\"\< may be incorrect for compartment \>\"", "//", 
                   "boldBlack"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "compartment", "]"}], "//", 
                   "boldBlue"}], ",", " ", "\[IndentingNewLine]", 
                  RowBox[{
                  "\"\< which has spatialDimensions = \>\"", "//", 
                   "boldBlack"}], ",", " ", 
                  RowBox[{"dim", "//", "boldBlue"}]}], " ", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"units", "=", 
           RowBox[{"ToExpression", "[", "units", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getSpecies: units (2) :(\>\"", ",", " ", "id", ",", 
              "\"\<),\>\"", ",", " ", "units", ",", " ", "\"\<:\>\"", ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"derivedUnits", " ", "=", " ", 
           RowBox[{"units", "//.", "$SBML$UnitRules"}]}], " ", ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getSpecies: derivedUnits(1) :(\>\"", ",", " ", "id", ",", 
              "\"\<),\>\"", ",", " ", "derivedUnits", ",", " ", "\"\<:\>\"", 
              ",", 
              RowBox[{
               RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", 
          RowBox[{"derivedUnits", " ", "=", " ", 
           RowBox[{"fixCubicMetres", "[", "derivedUnits", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"compartmentDerivedUnits", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ToExpression", "[", "compartment", "]"}], "/.", 
              "$SBML$UnitAssociations"}], ")"}], "//.", "$SBML$UnitRules"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getSpecies: derivedSubstanceUnits: (species=\>\"", ",", 
               "id", ",", "\"\<),\>\"", ",", "derivedSubstanceUnits", ",", 
               " ", "\"\<:\>\"", ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getSpecies: derivedUnits (2) : (species=\>\"", ",", "id", 
               ",", "\"\<),\>\"", ",", "derivedUnits", ",", " ", "\"\<:\>\"", 
               ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getSpecies: compartment: (species=\>\"", ",", "id", ",", 
               "\"\<),\>\"", ",", "compartment", ",", " ", "\"\<:\>\"", ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getSpecies: compartment volume: (species=\>\"", ",", "id", 
               ",", "\"\<),\>\"", ",", 
               RowBox[{
                RowBox[{"ToExpression", "[", "compartment", "]"}], "/.", 
                "SBMLReplacementRules"}], ",", " ", "\"\<:\>\"", ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<getSpecies: compartment derived units: (species=\>\"", ",",
                "id", ",", "\"\<),\>\"", ",", "compartmentDerivedUnits", ",", 
               " ", "\"\<:\>\"", ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";"}]}],
            " ", "\[IndentingNewLine]", "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"substanceConversion", "=", 
           RowBox[{"derivedSubstanceUnits", "/", "derivedUnits"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<ID: getSpecies: \
{id,name,compartment,type,ic,substanceUnits,spatialSizeUnits,units}\>\"", ",",
             " ", 
            RowBox[{"{", 
             RowBox[{
             "id", ",", "name", ",", "compartment", ",", "type", ",", "ic", 
              ",", "substanceUnits", ",", "spatialSizeUnits", ",", "units"}], 
             "}"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"definef", "[", 
           RowBox[{"SBMLIC", ",", " ", "id", ",", " ", "ic"}], " ", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"$SBML$UnitAssociations", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"$SBML$UnitAssociations", ",", " ", 
             RowBox[{
              RowBox[{"ToExpression", "[", "id", "]"}], "\[Rule]", " ", 
              "derivedUnits"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrintPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getSpecies: $SBML$UnitAssociations:\>\"", ",", 
            "$SBML$UnitAssociations"}], "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"speciesBaseUnits", " ", "=", " ", 
           RowBox[{
            RowBox[{"ToExpression", "[", 
             RowBox[{"unitsContextify", "[", "\"\<substance\>\"", "]"}], 
             "]"}], "//.", "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"speciesBaseUnits", " ", "=", 
              RowBox[{"speciesBaseUnits", "/", "vol"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"conversionFactor", "=", 
           RowBox[{"fixCubicMetres", "[", 
            RowBox[{"derivedUnits", "/", "speciesBaseUnits"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"$SBML$Normalize", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"normalizedInitialAmount", " ", "=", " ", 
              RowBox[{
               RowBox[{"ToExpression", "[", "ic", "]"}], "*", 
               RowBox[{"derivedUnits", "/", "speciesBaseUnits"}]}]}], ";", 
             " ", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}]}], ",",
                "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"normalizedInitialAmount", " ", "=", 
                 RowBox[{"normalizedInitialAmount", "/", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"SBMLIC", "[", "compartment", "]"}], "]"}]}]}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"normalizedInitialAmount", " ", "=", " ", 
              RowBox[{
              "fixCubicMetres", "[", "normalizedInitialAmount", "]"}]}], ";", 
             " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"dbg", ",", " ", 
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<getSpecies: id=\>\"", ",", "id", ",", 
                 "\"\< normalizedInitialAmount=\>\"", ",", 
                 "normalizedInitialAmount", ",", " ", 
                 "\"\< speciesBaseUnits: \>\"", ",", "speciesBaseUnits", ",", 
                 " ", "\"\<:\>\"", ",", 
                 RowBox[{
                  RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}]}], " ",
               "]"}], ";", " ", "\[IndentingNewLine]", " ", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"NumberQ", "[", "normalizedInitialAmount", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ic", " ", "=", " ", 
                 RowBox[{"stringer", "[", "normalizedInitialAmount", "]"}]}], 
                ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{
                  "\"\<Warning: getSpecies:\>\"", "//", "boldOrange"}], ",", 
                  " ", 
                  RowBox[{
                  "\"\<Unable to numerically normalize initial conditions for \
species \>\"", "//", "boldBlack"}], ",", " ", 
                  RowBox[{"id", "//", "boldRed"}], ",", 
                  RowBox[{"\"\< to \>\"", "//", "boldBlack"}], ",", " ", 
                  RowBox[{"speciesBaseUnits", "//", "boldRed"}], ",", " ", 
                  RowBox[{
                  "\"\< derived initial amount = \>\"", "//", "boldBlack"}], 
                  ",", " ", 
                  RowBox[{"normalizedInitialAmount", "//", "boldRed"}]}], 
                 "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], " ", 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"normalizedInitialAmount", "=", "ic"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<compartment:\>\"", ",", "compartment", ",", 
               "\"\< sub:\>\"", ",", 
               RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}], ",", 
               "\"\< cf:\>\"", ",", " ", "conversionFactor", ",", " ", 
               "\"\<:\>\"", ",", 
               RowBox[{
                RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], "]"}], ";"}]}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"idoft", "=", 
           RowBox[{
            RowBox[{"functionate", "[", "id", "]"}], "//", "ToExpression"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"comp", " ", "=", " ", 
           RowBox[{"ToExpression", "[", "compartment", "]"}]}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"tfvalue", "[", "hasOnlySubstanceUnits", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newrule", "=", 
              RowBox[{"Rule", "[", 
               RowBox[{"idoft", ",", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"idoft", "*", "conversionFactor"}], ")"}], "/", 
                  RowBox[{"SBMLCompartmentSize", "[", "comp", "]"}]}], 
                 ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SBMLSpeciesToUnitsOfTheSpecies", "[", "idoft", "]"}], 
              "=", 
              RowBox[{
               RowBox[{"SBMLCompartmentSize", "[", "comp", "]"}], "/", 
               "conversionFactor"}]}], ";"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newrule", "=", 
              RowBox[{"Rule", "[", 
               RowBox[{"idoft", ",", " ", 
                RowBox[{"(", 
                 RowBox[{"idoft", "*", "conversionFactor", "*", 
                  RowBox[{
                   RowBox[{"SBMLIC\[UnderBracket]SI", "[", "comp", "]"}], "/", 
                   RowBox[{"SBMLCompartmentSize", "[", "comp", "]"}]}]}], 
                 ")"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SBMLSpeciesToUnitsOfTheSpecies", "[", "idoft", "]"}], 
              "=", 
              RowBox[{"1", "/", "conversionFactor"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"SBMLSpeciesSIConcentration", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"SBMLSpeciesSIConcentration", ",", "newrule"}], "]"}]}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"boundaryCondition", "=", 
           RowBox[{
            RowBox[{"\"\<boundaryCondition\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{
             "\"\<boundaryCondition\>\"", "\[Rule]", " ", "\"\<false\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"boundaryCondition", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToUpperCase", "[", "boundaryCondition", "]"}], "==", 
             "\"\<TRUE\>\""}], ")"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SBMLBoundaryConditionQ", "[", "id", "]"}], "=", 
           "boundaryCondition"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"constant", "=", 
           RowBox[{
            RowBox[{"\"\<constant\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<constant\>\"", "\[Rule]", " ", "\"\<false\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"constant", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToUpperCase", "[", "constant", "]"}], "==", 
             "\"\<TRUE\>\""}], ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SBMLConstantQ", "[", "id", "]"}], "=", "constant"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"constant", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"defineParameter", "[", "id", "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"addReplacementRule", "[", "id", "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"save", " ", "for", " ", 
               RowBox[{"later", ":", " ", 
                RowBox[{
                "want", " ", "to", " ", "add", " ", "them", " ", "back", " ", 
                 "in", " ", "as", " ", "Species", " ", "for", " ", 
                 "SBMLNDSolve", " ", "compatibility"}]}]}], " ", "*)"}], " ", 
             "\[IndentingNewLine]", 
             RowBox[{"$SBML$ConstantSpecies", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$ConstantSpecies", ",", "id"}], "]"}]}], ";"}]}],
            " ", "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"charge", "=", 
           RowBox[{
            RowBox[{"\"\<charge\>\"", "/.", "sp"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<charge\>\"", "\[Rule]", " ", "\"\<\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"charge", "\[NotEqual]", " ", "\"\<\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"printWarning", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"IntegerQ", "[", 
                 RowBox[{"ToExpression", "[", "charge", "]"}], "]"}]}], ",", 
               " ", 
               RowBox[{
               "\"\<Species \\\"\>\"", "<>", "id", "<>", 
                "\"\<\\\" charge=\\\"\>\"", "<>", "charge", "<>", 
                "\"\<\\\" is not an integer.\>\""}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isConcentration", ",", "\[IndentingNewLine]", 
            RowBox[{"$SBML$SpeciesThatAreConcentrations", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"$SBML$SpeciesThatAreConcentrations", ",", "id"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"$SBML$SpeciesThatAreAmounts", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"$SBML$SpeciesThatAreAmounts", ",", "id"}], "]"}]}]}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"cpu", "=", 
           RowBox[{
            RowBox[{"TimeUsed", "[", "]"}], "-", "t0"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"dbg", ",", " ", 
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<getSpecies: \>\"", ",", "id", ",", "\"\< cpu:\>\"", ",", 
              "cpu"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"saveVerboseData", ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"units", " ", "=", " ", 
              RowBox[{
               RowBox[{"units", "//", "InputForm"}], "//", "ToString"}]}], 
             ";", "\[IndentingNewLine]", " ", 
             RowBox[{"derivedUnits", "=", 
              RowBox[{
               RowBox[{"derivedUnits", "//", "InputForm"}], "//", 
               "ToString"}]}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"derivedUnits", "==", "\"\<1\>\""}], ",", " ", 
               RowBox[{"derivedUnits", "=", "\"\<dimensionless\>\""}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"(", "$SBML$verboseContext", ")"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"id", " ", "=", " ", 
                 RowBox[{"decontextify", "[", "id", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"name", " ", "=", " ", 
                 RowBox[{"decontextify", "[", "name", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"speciesType", "=", 
                 RowBox[{"decontextify", "[", "speciesType", "]"}]}], ";", 
                " ", "\[IndentingNewLine]", 
                RowBox[{"compartment", " ", "=", " ", 
                 RowBox[{"decontextify", "[", "compartment", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"units", " ", "=", " ", 
                 RowBox[{"unitsDecontextify", "[", "units", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"derivedUnits", "=", 
                 RowBox[{"unitsDecontextify", "[", "derivedUnits", "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"speciesBaseUnits", "=", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "MathSBML`Private`unitsDecontextify", "[", 
                    "speciesBaseUnits", "]"}], "//", "InputForm"}], "//", 
                  "ToString"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"returnValue", "=", 
              RowBox[{"{", 
               RowBox[{"id", ",", "name"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], 
                ">", "2.1"}], ",", " ", 
               RowBox[{"returnValue", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"returnValue", ",", "speciesType"}], "]"}]}]}], 
              "]"}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"returnValue", "=", 
              RowBox[{"Join", "[", 
               RowBox[{"returnValue", ",", 
                RowBox[{"{", 
                 RowBox[{
                 "compartment", ",", "\[IndentingNewLine]", "type", ",", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                   "isConcentration", ",", "  ", "initialConcentration", ",", 
                    " ", "initialAmount"}], "]"}], ",", "\[IndentingNewLine]",
                   "units", ",", "derivedUnits", ",", " ", 
                  "boundaryCondition", ",", "constant", ",", "charge", ",", 
                  " ", "normalizedInitialAmount", ",", " ", 
                  "speciesBaseUnits"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", "returnValue", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getSpecies:: SBMLVariables(2)\>\"", ",", 
            "SBMLVariables"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "if", " ", "verbose", " ", "data", " ", "is", " ", "not", " ", 
             "being", " ", "saved"}], ",", " ", 
            RowBox[{"no", " ", "need", " ", "to", " ", "return", " ", 
             RowBox[{"anything", "!!"}]}]}], " ", "*)"}], " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", " ", 
        StyleBox["getSpecies",
         FontColor->RGBColor[0, 0, 1]]}], "*)"}], " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "begin", " ", "main", " ", "source", " ", "code", " ", "for", " ", 
        StyleBox["getLevel2species",
         FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
      RowBox[{"n", "=", "0"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfSpecies\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2species:: s(1)\>\"", ",", "s"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"s", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<species\>\"", ",", "___"}], "]"}], ",", "3"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2species:: s(2)\>\"", ",", "s"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addSpecies", "/@", "s"}]}], " ", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"s", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"getSpecies", ",", "s"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2species:: s(3)\>\"", ",", "s"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"SBMLBoundaryConditions", "=", 
       RowBox[{"Pick", "[", 
        RowBox[{"$SBML$Species$IDs", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SBMLBoundaryConditionQ", "[", 
            RowBox[{"ToString", "[", "#", "]"}], "]"}], "&"}], "/@", 
          "$SBML$Species$IDs"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"headers", "=", 
          RowBox[{"{", " ", 
           RowBox[{"\"\<ID\>\"", ",", " ", "\"\<Name\>\""}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
            "2.1"}], ",", " ", 
           RowBox[{
            RowBox[{"headers", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"headers", ",", "\"\<SpeciesType\>\""}], "]"}]}], 
            ";"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"headers", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"headers", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Compartment\>\"", ",", " ", "\[IndentingNewLine]", 
              "\"\<initialType\>\"", ",", " ", "\"\<Value\>\"", ",", " ", 
              "\"\<Units of the Species\>\"", ",", " ", 
              "\"\<Derived Units of the Species\>\"", ",", " ", "\"\<B.C\>\"",
               ",", " ", "\"\<Constant\>\"", ",", " ", "\"\<Charge\>\""}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"$SBML$verboseNormalizedValues", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"headers", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"headers", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Normalized Initial Value\>\"", ",", " ", 
                 "\"\<Normalized Units\>\""}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"verboseSave", "[", 
             RowBox[{"\"\<Species\>\"", ",", "headers", ",", "s"}], "]"}], 
            ";"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"s", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Drop", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"-", "2"}]}], "]"}], "&"}], "/@", "s"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"verboseSave", "[", 
             RowBox[{"\"\<Species\>\"", ",", "headers", ",", "s"}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3902149307115726`*^9, 3.3902149514540043`*^9}, {
   3.39021523871437*^9, 3.3902152429328947`*^9}, {3.3902152734747887`*^9, 
   3.390215319551187*^9}, {3.390215985266271*^9, 3.3902159859074793`*^9}, {
   3.39028942544696*^9, 3.39028945540206*^9}, {3.390289850963686*^9, 
   3.3902898525236197`*^9}, {3.396994936241703*^9, 3.3969949389674*^9}, 
   3.396995198182646*^9, {3.3969952996956787`*^9, 3.396995304565815*^9}, {
   3.397155910832164*^9, 3.397155918267189*^9}, {3.397155960619205*^9, 
   3.397155961568368*^9}, {3.397155993836452*^9, 3.3971559979770737`*^9}, {
   3.3971560479836903`*^9, 3.3971560505664387`*^9}, {3.397156148875545*^9, 
   3.397156186119734*^9}, {3.3971562880275507`*^9, 3.397156292548667*^9}, {
   3.39715632761022*^9, 3.3971564203202*^9}, {3.397156472855538*^9, 
   3.3971564766660213`*^9}, {3.3971571363396587`*^9, 3.397157182780571*^9}, {
   3.397157217106402*^9, 3.3971572205673227`*^9}, {3.3971573034668207`*^9, 
   3.397157346021042*^9}, {3.3971573791962137`*^9, 3.397157385678852*^9}, {
   3.397157417766691*^9, 3.397157526863121*^9}, {3.39715758517374*^9, 
   3.397157641690022*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2parameters", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2parameters", "[", "opt___", "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dbg", "=", "False"}], ",", "p", ",", 
       StyleBox["getParameter",
        FontColor->RGBColor[0, 0, 1]], ",", "n", ",", " ", "lv"}], "}"}], ",",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lv", "=", 
       RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["getParameter",
         FontColor->RGBColor[0, 0, 1]], "[", "optList_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "name", ",", " ", "id", ",", " ", "value", ",", "units", ",", " ", 
           "derivedUnits", ",", " ", "metaid", ",", "sbo", ",", "info", ",", 
           " ", "constant"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"n", "++"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"$SBML$NGlobalParameters", "++"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"id", ",", "name"}], "}"}], " ", "=", " ", 
           RowBox[{"getIDandName", "[", 
            RowBox[{"optList", ",", " ", 
             RowBox[{"\"\<parameter\>\"", "<>", 
              RowBox[{"ToString", "[", "n", "]"}]}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"checkForSymbolCollision", "[", 
           RowBox[{"id", ",", "\"\<parameter\>\""}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"addID", "[", 
             RowBox[{"id", ",", " ", "\"\<parameter\>\""}], "]"}], ";"}], " ",
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"defineParameter", "[", "id", "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"metaid", "=", 
           RowBox[{"stringer", "[", 
            RowBox[{
             RowBox[{"\"\<metaid\>\"", "/.", "optList"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sbo", "=", 
           RowBox[{"stringer", "[", 
            RowBox[{
             RowBox[{"\"\<sboTerm\>\"", "/.", "optList"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"value", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\"\<value\>\"", "/.", "optList"}], "/.", 
             RowBox[{"{", 
              RowBox[{
              "\"\<value\>\"", "\[Rule]", " ", "$SBML$IndeterminateValue"}], 
              "}"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"value", " ", "=", " ", 
           RowBox[{"value", "//", "fromEForm"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"value", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"StringQ", "[", "value", "]"}], ",", " ", "value", ",", 
             RowBox[{"ToString", "[", 
              RowBox[{"InputForm", "[", "value", "]"}], "]"}]}], "]"}]}], ";",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"definef", "[", 
           RowBox[{"SBMLIC", ",", "id", ",", " ", "value"}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"addReplacementRule", "[", "id", "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"units", " ", "=", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\"\<units\>\"", "/.", "optList"}], "/.", 
             RowBox[{"{", 
              RowBox[{
              "\"\<units\>\"", "\[Rule]", " ", "$SBML$IndeterminateValue"}], 
              "}"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"units", " ", "=", " ", 
           RowBox[{"unitsContextify", "[", "units", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"$SBML$UnitAssociations", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"$SBML$UnitAssociations", ",", " ", 
             RowBox[{
              RowBox[{"ToExpression", "[", "id", "]"}], "\[Rule]", " ", 
              RowBox[{"ToExpression", "[", "units", "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"units", "\[NotEqual]", " ", "$SBML$IndeterminateValue"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"$SBML$warnings", " ", "\[And]", " ", 
                RowBox[{"!", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"$SBML$UnitsDefined", ",", " ", "units"}], 
                  "]"}]}]}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                  RowBox[{"\"\<Unknown units = \>\"", "//", "boldBlack"}], 
                  ",", " ", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "units", "]"}], "//", 
                   "boldBlue"}], ",", " ", 
                  RowBox[{
                  "\"\< specified for global parameter \>\"", "//", 
                   "boldBlack"}], ",", " ", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "id", "]"}], "//", 
                   "boldBlue"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"derivedUnits", "=", 
           RowBox[{
            RowBox[{"ToExpression", "[", "units", "]"}], "//.", 
            "$SBML$UnitRules"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"derivedUnits", "=", 
           RowBox[{"ToString", "[", 
            RowBox[{"InputForm", "[", "derivedUnits", "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"constant", "=", 
           RowBox[{
            RowBox[{"\"\<constant\>\"", "/.", "optList"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<constant\>\"", "\[Rule]", " ", "\"\<true\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"constant", "=", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToUpperCase", "[", "constant", "]"}], "==", 
             "\"\<TRUE\>\""}], ")"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SBMLConstantQ", "[", "id", "]"}], "=", "constant"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          StyleBox[
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"corrected", " ", "7"}], "-", "28", "-", "03"}], ":", 
              " ", 
              RowBox[{
              "to", " ", "reverse", " ", "order", " ", "of", " ", "following",
                " ", "two", " ", "ifs"}]}], ",", " ", 
             RowBox[{
              RowBox[{"otherwise", " ", "non"}], "-", 
              RowBox[{"constant", " ", "parameters", " ", "are", " ", 
               RowBox[{"decontextified", "!!"}]}]}]}], " ", "*)"}],
           FontWeight->"Plain"], " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", "constant"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"defineVariable", "[", "id", "]"}], ";", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"removeReplacementRule", "[", "id", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"constant", ",", "\[IndentingNewLine]", 
            RowBox[{"SBMLGlobalParameters", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"SBMLGlobalParameters", ",", "id"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"SBMLGlobalParameters", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"SBMLGlobalParameters", ",", 
               RowBox[{"functionate", "[", "id", "]"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "$SBML$verboseContext"}], ",", " ", 
               RowBox[{
                RowBox[{"id", " ", "=", " ", 
                 RowBox[{"decontextify", "[", "id", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"units", "=", 
                 RowBox[{"unitsDecontextify", "[", "units", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"derivedUnits", "=", 
                 RowBox[{"unitsDecontextify", "[", "derivedUnits", "]"}]}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"lv", ">", "2.15"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"info", "=", 
             RowBox[{"{", 
              RowBox[{
              "id", ",", "metaid", ",", "  ", "sbo", ",", " ", "name", ",", 
               " ", "value", ",", "units", ",", " ", "derivedUnits", ",", " ",
                "constant"}], "}"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"info", "=", 
             RowBox[{"{", 
              RowBox[{
              "id", ",", "metaid", ",", "  ", "name", ",", " ", "value", ",", 
               "units", ",", " ", "derivedUnits", ",", " ", "constant"}], 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "info", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", " ", 
        StyleBox["getParameter",
         FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], "\[IndentingNewLine]", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"$SBML$NGlobalParameters", "=", "0"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"n", "=", "0"}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfParameters\>\"", ",", "___"}], "]"}], ",", "3"}],
         "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"p", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<parameter\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2parameters\>\"", ",", 
        "\"\<adding Parameters\>\""}], "]"}], ";", " ", "\[IndentingNewLine]",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", 
        RowBox[{"addParameter", "/@", "p"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"extractXMLOptions", ",", "p"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2parameters:: p(1)\>\"", ",", " ", "p"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"getParameter", ",", "p"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2parameters:: p(2)\>\"", ",", " ", "p"}], 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"lv", ">", "2.15"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"verboseSave", "[", 
             RowBox[{
             "\"\<Global Parameters\>\"", ",", " ", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", 
                "\"\<SBOTerm\>\"", ",", "  ", "\"\<Name\>\"", ",", " ", 
                "\"\<Value\>\"", ",", " ", "\"\<Units\>\"", ",", " ", 
                "\"\<Derived Units\>\"", ",", " ", "\"\<Constant\>\""}], 
               "}"}], ",", " ", "p"}], "]"}], ";"}], " ", ",", 
           RowBox[{
            RowBox[{"verboseSave", "[", 
             RowBox[{
             "\"\<Global Parameters\>\"", ",", " ", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", " ", 
                "\"\<Name\>\"", ",", " ", "\"\<Value\>\"", ",", " ", 
                "\"\<Units\>\"", ",", " ", "\"\<Derived Units\>\"", ",", " ", 
                "\"\<Constant\>\""}], "}"}], ",", " ", "p"}], "]"}], ";"}]}], 
          " ", "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.3969822641115828`*^9, 3.396982264555716*^9}, {
  3.396982361775323*^9, 3.396982402096542*^9}, {3.3969824394373703`*^9, 
  3.3969824402618732`*^9}, {3.3969848182746487`*^9, 3.396984818750942*^9}, {
  3.3969848755333033`*^9, 3.396984876208551*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2InitialAssignments", "Subsection"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getLevel2InitialAssignments", "[", 
    RowBox[{"opt___", "?", "OptionQ"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "info", ",", "getAnInitialAssignment"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"getAnInitialAssignment", "[", "r_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "math", ",", " ", "sbo", ",", " ", "meta", ",", " ", "msg", ",", 
           " ", "symbol"}], "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"addInitialAssignment", "[", "r", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"sbo", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<SBOTerm\>\"", ",", "r"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"meta", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<metaid\>\"", ",", "r"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"symbol", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<symbol\>\"", ",", "r"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"subXML", "=", 
           RowBox[{"extractXMLSubElements", "[", "r", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"Cases", "[", 
            RowBox[{"subXML", ",", " ", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<math\>\"", ",", "___"}], "]"}], ",", "1"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"First", "[", "math", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"contextifyFormula", "[", "math", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"math", " ", "=", " ", 
           RowBox[{"StringReplace", "[", 
            RowBox[{"math", ",", " ", 
             RowBox[{"\"\<[t]\>\"", "\[Rule]", " ", "\"\<[0]\>\""}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"math", "=", 
             RowBox[{"XMLOut", "[", "math", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"math", "=", 
             RowBox[{"MathMLToInfix", "[", "math", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"math", " ", "=", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"InputForm", "[", "math", "]"}], "]"}]}], ";"}], " ", 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ToExpression", "[", "symbol", "]"}], ",", " ", "meta", 
             ",", " ", "sbo", ",", " ", 
             RowBox[{"ToExpression", "[", "math", "]"}]}], "}"}], "]"}], 
          ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"**", "**", " ", "end"}], " ", "getAnInitialAssignment"}], 
       " ", "*****)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$InitialAssignments", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfInitialAssignments\>\"", ",", "___"}], "]"}], 
         ",", "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], "<", 
         "2.15"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], ">", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
              RowBox[{
              "\"\< listOfInitialAssignments \>\"", "//", "boldBlue"}], ",", 
              " ", 
              RowBox[{
              "\"\<is not supported in SBML Level \>\"", "//", "boldBlack"}], 
              ",", " ", 
              RowBox[{"$SBML$Level$Version", "//", "boldBlack"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"c", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<initialAssignment\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"info", "=", 
       RowBox[{"getAnInitialAssignment", "/@", "c"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$InitialAssignments", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"contextify", "[", 
             RowBox[{"functionate", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "&"}], ",", " ", 
         "info"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"verboseSave", "[", 
       RowBox[{"\"\<Initial Assignments\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Symbol\>\"", ",", "\"\<Metaid\>\"", ",", "\"\<SBOTerm\>\"", 
          ",", "\"\<Formula\>\""}], "}"}], ",", " ", "info"}], "]"}], ";"}]}],
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["contextifyFormula, checkMathMLElements", "Subsection"],

Cell["\<\
modified 6.14.06 v 2.5.17 to repair e-notation in <cn elements>
revised 7.20.06 v.2.5.24 to remove checkMathMLElements to separate function\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"checkMathMLElements", "[", 
    RowBox[{"XMLElement", "[", 
     RowBox[{"\"\<math\>\"", ",", 
      RowBox[{"{", "opt___", "}"}], ",", "formula_"}], "]"}], "]"}], ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dbg", "=", "False"}], ",", "f", ",", 
       StyleBox["myXML",
        FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<ci\>\"", ",", 
         RowBox[{"{", "z___", "}"}], ",", 
         RowBox[{"{", "id_", "}"}]}], "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", "v", ",", " ", "vid"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"id", "\[Equal]", "\"\<t\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"v", " ", "=", " ", "\"\<Global`t\>\""}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"vid", " ", "=", " ", 
              RowBox[{"makeIntoValidSId", "[", 
               RowBox[{"id", ",", "\"\<`\>\""}], "]"}]}], ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"don", "'"}], "t", " ", "change", " ", "context", " ",
                 "delimiter"}], ",", " ", 
               RowBox[{"added", " ", 
                RowBox[{
                 RowBox[{"7", "/", "29"}], "/", "03"}]}]}], " ", "*)"}], " ", 
             "\[IndentingNewLine]", 
             RowBox[{"v", "=", 
              RowBox[{"contextify", "[", "vid", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"SBMLVariables", ",", "v"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"v", "=", 
                  RowBox[{"functionate", "[", "v", "]"}]}], ";"}], " ", 
                "*)"}], 
               RowBox[{"(*", " ", 
                RowBox[{
                "rev", " ", "2.6", ".2", " ", "for", " ", "version", " ", "6",
                  " ", "compatibility"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "this", " ", "should", " ", "work", " ", "except", " ", 
                 "that", " ", "there", " ", "is", " ", "an", " ", "ERROR", 
                 " ", "in", " ", "Mathematica", " ", "version", " ", "6.0"}], 
                " ", "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"v", "=", 
                  RowBox[{"XMLElement", "[", 
                   RowBox[{"\"\<apply\>\"", ",", 
                    RowBox[{"{", "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<ci\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<type\>\"", "\[Rule]", " ", "\"\<function\>\""}], 
                    "}"}], ",", 
                    RowBox[{"{", " ", 
                    RowBox[{"stringer", "[", "v", "]"}], "}"}]}], "]"}], ",", 
                    " ", 
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<ci\>\"", ",", 
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", "\"\<t\>\"", "}"}]}], "]"}]}], "}"}]}], 
                   "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"v", "=", 
                 RowBox[{
                  RowBox[{"stringer", "[", "v", "]"}], "<>", 
                  "\"\<$of$t$\>\""}]}], ";"}]}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<ci\>\"", ",", 
             RowBox[{"{", "z", "}"}], ",", 
             RowBox[{"{", "v", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "r", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"xmlns_", ",", " ", "\"\<ci\>\""}], "}"}], ",", 
         RowBox[{"{", "z___", "}"}], ",", 
         RowBox[{"{", "id_", "}"}]}], "]"}], ":=", " ", 
       RowBox[{"myXML", "[", 
        RowBox[{"\"\<ci\>\"", ",", 
         RowBox[{"{", "z", "}"}], ",", 
         RowBox[{"{", "id", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "\"\<cn\>\"", " ", "stuff", " ", "added", " ", "2.5", ".17", " ", 
        RowBox[{
         RowBox[{"6", "/", "16"}], "/", "06"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x_", "?", "mantissaFormQ"}], "}"}]}], "]"}], ":=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}], 
         ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"numstring_", "?", "eFormQ"}], "}"}]}], "]"}], ":=", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", "man", ",", "exp", ",", "instead"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"man", ",", "exp"}], "}"}], "=", 
           RowBox[{"eForm2MantissaExponent", "[", "numstring", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<e-notation\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"man", ",", 
               RowBox[{"XMLElement", "[", 
                RowBox[{"\"\<sep\>\"", ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "]"}], ",", "exp"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
            RowBox[{
            "\"\< exponential notation is not permitted in \>\"", "//", 
             "boldBlack"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "numstring", "}"}]}], "]"}], "//", "XMLOut"}], "//",
              "boldBlue"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\< Attempting recovery as \>\"", "//", "boldBlack"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\\nNote:  This is not standard SBML. \>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"fixXMLeNotation", "[", "instead", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "because", " ", "of", " ", "bug", " ", "in", " ", "Mathematica", 
            " ", "conversion", " ", "of", " ", "eformat"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"numstring_", "?", "FortranEFormQ"}], "}"}]}], "]"}], ":=", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", "man", ",", "exp", ",", "instead"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"man", ",", "exp"}], "}"}], "=", 
           RowBox[{"eForm2MantissaExponent", "[", "numstring", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<e-notation\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"man", ",", 
               RowBox[{"XMLElement", "[", 
                RowBox[{"\"\<sep\>\"", ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "]"}], ",", "exp"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
            RowBox[{
            "\"\< FORTRAN-style exponential notation is not permitted in \
\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "numstring", "}"}]}], "]"}], "//", "XMLOut"}], "//",
              "boldBlue"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\< Attempting recovery as \>\"", "//", "boldBlack"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\\nNote:  This is not standard SBML. \>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"fixXMLeNotation", "[", "instead", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "because", " ", "of", " ", "bug", " ", "in", " ", "Mathematica", 
            " ", "conversion", " ", "of", " ", "eformat"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}], 
         ",", 
         RowBox[{"{", "x_", "}"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"instead", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringQ", "[", "x", "]"}], ",", 
            RowBox[{"z", "=", "x"}], ",", 
            RowBox[{"z", "=", 
             RowBox[{"ToString", "[", "x", "]"}]}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"z", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "@@", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Characters", "[", "z", "]"}], ",", "DigitQ"}], 
                 "]"}], ",", "\"\<0\>\""}], "]"}]}], "//", "ToExpression"}], "//",
             "ToString"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}],
              ",", 
             RowBox[{"{", "z", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
            RowBox[{
            "\"\< invalid floating point number in \>\"", "//", "boldBlack"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"XMLOut", "[", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "//", "boldBlue"}], 
            ",", 
            RowBox[{
            "\"\<\\nThe value has been replaced with \>\"", "//", 
             "boldBlack"}], ",", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            RowBox[{"\"\< in the model. \>\"", "//", "boldBlack"}], ",", 
            RowBox[{
            "\"\<Note that this interpretation may not conform to the intent \
of the original model and could produce unexpected results.\>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"x_", "?", "IntegerFormQ"}], "}"}]}], "]"}], ":=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], "}"}], 
         ",", 
         RowBox[{"{", "x", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"numstring_", "?", "mantissaFormQ"}], "}"}]}], "]"}], ":=", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "instead", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<real\>\""}], "}"}],
              ",", 
             RowBox[{"{", "numstring", "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
            RowBox[{
            "\"\< real numbers are not permitted in \>\"", "//", 
             "boldBlack"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "numstring", "}"}]}], "]"}], "//", "XMLOut"}], "//",
              "boldBlue"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\< Attempting recovery as \>\"", "//", "boldBlack"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
            "\"\<Note that this interpretation may not conform to the intent \
of the original model and could produce unexpected results.\>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"numstring_", "?", "eFormQ"}], "}"}]}], "]"}], ":=", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", "man", ",", "exp", ",", "instead"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"man", ",", "exp"}], "}"}], "=", 
           RowBox[{"eForm2MantissaExponent", "[", "numstring", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<e-notation\>\""}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"man", ",", 
               RowBox[{"XMLElement", "[", 
                RowBox[{"\"\<sep\>\"", ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "]"}], ",", "exp"}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
            RowBox[{
            "\"\< exponential notation is not permitted in \>\"", "//", 
             "boldBlack"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "numstring", "}"}]}], "]"}], "//", "XMLOut"}], "//",
              "boldBlue"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\< Attempting recovery as \>\"", "//", "boldBlack"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
            "\"\<\\nNote:  This is not standard SBML. \>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"fixXMLeNotation", "[", "instead", "]"}]}], ";", " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "because", " ", "of", " ", "bug", " ", "in", " ", "Mathematica", 
            " ", "conversion", " ", "of", " ", "eformat"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"\"\<cn\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], "}"}], 
         ",", 
         RowBox[{"{", "x_", "}"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"instead", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"StringQ", "[", "x", "]"}], ",", 
            RowBox[{"z", "=", "x"}], ",", 
            RowBox[{"z", "=", 
             RowBox[{"ToString", "[", "x", "]"}]}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"z", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"StringJoin", "@@", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Characters", "[", "z", "]"}], ",", "DigitQ"}], 
                 "]"}], ",", "\"\<0\>\""}], "]"}]}], "//", "ToExpression"}], "//",
             "ToString"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"instead", "=", 
           RowBox[{"XMLElement", "[", 
            RowBox[{"\"\<cn\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], 
              "}"}], ",", 
             RowBox[{"{", "z", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
            RowBox[{"\"\< invalid integer in \>\"", "//", "boldBlack"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"XMLOut", "[", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<cn\>\"", ",", 
                RowBox[{"{", 
                 RowBox[{"\"\<type\>\"", "\[Rule]", " ", "\"\<integer\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", "x", "}"}]}], "]"}], "]"}], "//", "boldBlue"}], 
            ",", 
            RowBox[{
            "\"\<\\nThe value has been replaced with \>\"", "//", 
             "boldBlack"}], ",", 
            RowBox[{
             RowBox[{"instead", "//", "XMLOut"}], "//", "boldBlue"}], ",", 
            RowBox[{"\"\< in the model. \>\"", "//", "boldBlack"}], ",", 
            RowBox[{
            "\"\<Note that this interpretation may not conform to the intent \
of the original model and could produce unexpected results.\>\"", "//", 
             "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "instead", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["myXML",
         FontColor->RGBColor[0, 0, 1]], "[", "z___", "]"}], ":=", " ", 
       RowBox[{"XMLElement", "[", "z", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"f", "=", 
       RowBox[{"XMLElement", "[", 
        RowBox[{"\"\<math\>\"", ",", 
         RowBox[{"{", "opt", "}"}], ",", " ", "formula"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"f", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{"f", "/.", 
         RowBox[{"{", 
          RowBox[{"XMLElement", "\[Rule]", " ", "myXML"}], "}"}]}], ")"}]}], 
      ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"checkMathMLElements", "[", "x___", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dbg", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"\"\<Warning:\>\"", "//", "boldRed"}], ",", 
         RowBox[{
         "\"\<checkMathMLElements: Invalid formula (not an \
XMLElement[math...]) = \\n\>\"", "//", "boldBlack"}], ",", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"InputForm", "[", "f", "]"}], "]"}], "//", "boldBlue"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"contextifyFormula", "[", 
    RowBox[{"{", "f_", "}"}], "]"}], ":=", " ", 
   RowBox[{"contextifyFormula", "[", "f", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"contextifyFormula", "[", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<math\>\"", ",", 
       RowBox[{"{", "opt___", "}"}], ",", "formula_"}], "]"}], "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dbg", "=", "False"}], ",", "f"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", "\"\<contextifyFormula: f(0)\>\"", ",", "formula"}], 
        "]"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"f", "=", " ", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"\"\<math\>\"", ",", 
          RowBox[{"{", "opt", "}"}], ",", "formula"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<contextifyFormula: f(1)\>\"", ",", "f"}], 
        "]"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"checkMathMLElements", "[", "f", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<contextifyFormula: f(2)\>\"", ",", "f"}], 
        "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"dbg", ",", " ", 
         RowBox[{
         "Print", "[", 
          "\"\<contextifyFormula: Calling SymbolicSBMLMathMLToExpression\>\"",
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"SymbolicSBMLMathMLToExpression", "[", "f", "]"}]}], ";", " ",
        "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<contextifyFormula: f(3)\>\"", ",", "f"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "the", " ", "following", " ", "inserted", " ", "version", " ", "2.3", 
         ".19"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{"f", "/.", 
         RowBox[{"{", 
          RowBox[{"XML`MathML`Symbols`Piecewise", "\[Rule]", "piecewise"}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<contextifyFormula: f(4)\>\"", ",", "f"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"f", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "//", "InputForm"}], ")"}], "//", "ToString"}]}], ";", 
       " ", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<contextifyFormula: f(5)\>\"", ",", "f"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"contextifyFormula", "[", 
     RowBox[{"XMLElement", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xmlns_", ",", " ", "\"\<math\>\""}], "}"}], ",", 
       RowBox[{"{", "opt___", "}"}], ",", "formula_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"contextifyFormula", "[", 
     RowBox[{"XMLElement", "[", 
      RowBox[{"\"\<math\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<http://www.w3.org/2000/xmlns/\>\"", ",", "\"\<xmlns\>\""}], 
          "}"}], "\[Rule]", " ", "xmlns"}], "}"}], ",", "formula"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"contextifyFormula", "[", "f_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dbg", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
       RowBox[{"\"\<Warning:\>\"", "//", "boldRed"}], ",", 
       RowBox[{
       "\"\<contextifyFormula: Invalid formula (not an XMLElement[math...]) = \
\\n\>\"", "//", "boldBlack"}], ",", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"InputForm", "[", "f", "]"}], "]"}], "//", "boldBlue"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.38876254844285*^9, 3.388762550006591*^9}, {
   3.388763009732135*^9, 3.3887631235462923`*^9}, {3.388763181273551*^9, 
   3.3887631886933613`*^9}, {3.38876325585192*^9, 3.388763258878255*^9}, {
   3.388763361167308*^9, 3.388763364712963*^9}, {3.388776739194038*^9, 
   3.388776744363896*^9}, {3.38877682339401*^9, 3.388776887074441*^9}, {
   3.388776930465478*^9, 3.388776936452271*^9}, 3.388777327730124*^9, {
   3.3887774678361397`*^9, 3.388777471462656*^9}, {3.388777604923568*^9, 
   3.388777626425087*^9}, 3.3887776936049423`*^9, {3.388778046832835*^9, 
   3.3887780752975473`*^9}, {3.388778180853055*^9, 3.388778221217195*^9}, {
   3.3887783926076107`*^9, 3.388778393635035*^9}, {3.3969881353295403`*^9, 
   3.396988148039008*^9}, {3.396988207236421*^9, 3.396988213233886*^9}, {
   3.396988264053471*^9, 3.396988278840609*^9}, {3.396988317128573*^9, 
   3.396988353289918*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2rules", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2rules", "[", "opt___", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lv", ",", "\[IndentingNewLine]", 
       RowBox[{"dbg", "=", "False"}], ",", 
       StyleBox["getRule",
        FontColor->RGBColor[0, 0, 1]], ",", 
       StyleBox["addODE",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["r",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"$SBML$Algebraic$Rules", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$Assignment$Rules", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$SBML$Constraint$Rules", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"$SBML$NRules", "=", "0"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lv", "=", 
       RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["addODE",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"ODE_", "?", "StringQ"}], "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"$SBML$ODES", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"$SBML$ODES", ",", 
             RowBox[{"ToExpression", "[", "ODE", "]"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["addODE",
         FontColor->RGBColor[0, 0, 1]], "[", "x___", "]"}], ":=", " ", 
       RowBox[{"printWarning", "[", 
        RowBox[{
        "\"\<addODE: program Error: argument must be a string: \\\"\>\"", "<>", 
         RowBox[{"ToString", "[", "x", "]"}], "<>", "\"\<\\\"\>\""}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        StyleBox["getRule",
         FontColor->RGBColor[0, 0, 1]], "[", 
        RowBox[{"XMLElement", "[", 
         RowBox[{"type_", ",", "opts_", ",", "formula_"}], "]"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "r", ",", "form", ",", "f", ",", "fnew", ",", "v", ",", "g", ",", 
           "metaid", ",", " ", "isASpecies", ",", " ", "comp", ",", 
           "hasOnlySubstanceUnits", ",", "c", ",", "fOFv", ",", "irule", ",", 
           "hf", ",", " ", "sbo"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"$SBML$NRules", "++"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getRule: formula\>\"", ",", " ", "formula"}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{
            RowBox[{"\"\<variable\>\"", "/.", "opts"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<variable\>\"", "\[Rule]", " ", "\"\<\>\""}], 
             "}"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: v\>\"", ",", " ", "v"}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"sbo", "=", 
           RowBox[{
            RowBox[{"\"\<sboTerm\>\"", "/.", "opts"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], 
             "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"form", " ", "=", " ", 
           RowBox[{"Cases", "[", 
            RowBox[{"formula", ",", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<math\>\"", ",", "__"}], "]"}], ",", "Infinity"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"$SBML$warnings", " ", "\[And]", " ", 
             RowBox[{
              RowBox[{"Length", "[", "form", "]"}], "<", "1"}]}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"irule", "=", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"type", ",", "opts", ",", 
                RowBox[{"{", 
                 RowBox[{"XMLElement", "[", 
                  RowBox[{"\"\<math\>\"", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<xmlns\>\"", "\[Rule]", 
                    "\"\<http://www.w3.org/1998/Math/MathML\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<cn\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<type\>\"", "\[Rule]", "\"\<integer\>\""}], 
                    "}"}], ",", 
                    RowBox[{"{", "\"\<1\>\"", "}"}]}], "]"}], "}"}]}], "]"}], 
                 "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
               RowBox[{
               "\"\<getRule: No <math...> found in the following \
rule:\\n\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
               RowBox[{"XMLPrintForm", "[", 
                RowBox[{
                 RowBox[{"XMLElement", "[", 
                  RowBox[{"type", ",", "opts", ",", "formula"}], "]"}], ",", 
                 "Purple"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
               "\"\<\\nAttempting to recover from the error as\\n\>\"", "//", 
                "boldBlack"}], ",", "\[IndentingNewLine]", 
               RowBox[{"XMLPrintForm", "[", 
                RowBox[{"irule", ",", "Purple"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
               "\"\<\\nNote: this recovery is not standard SBML and may not \
be correct.\>\"", "//", "boldRed"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"getRule", "[", "irule", "]"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"$SBML$warnings", " ", "\[And]", "  ", 
             RowBox[{
              RowBox[{"Length", "[", "form", "]"}], ">", "1"}]}], ",", " ", 
            RowBox[{
             RowBox[{"form", "=", 
              RowBox[{"First", "[", "form", "]"}]}], ";", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Warning:\>\"", "//", "boldRed"}], ",", 
               RowBox[{
               "\"\<Multiple <math ...> blocks in same rule (type=\>\"", "//",
                 "boldBlack"}], ",", 
               RowBox[{"type", "//", "boldBlue"}], ",", 
               RowBox[{"\"\<, variable=\>\"", "//", "boldBlack"}], ",", 
               RowBox[{"v", "//", "boldBlue"}], ",", 
               RowBox[{"\"\<): \\n\>\"", "//", "boldBlack"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"XMLHighlightForm", "[", 
                 RowBox[{
                  RowBox[{"XMLElement", "[", 
                   RowBox[{"type", ",", "opts", ",", "formula"}], "]"}], ",", 
                  "Purple", ",", "\"\<<math\>\""}], "]"}]}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"metaid", " ", "=", 
           RowBox[{"stringer", "[", " ", 
            RowBox[{
             RowBox[{"\"\<metaid\>\"", "/.", "opts"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], "}"}]}],
             "]"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"metaid", "==", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"metaid", "=", 
              RowBox[{"\"\<rule\>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"MB$rulecounter", "++"}], "]"}]}]}], ";"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"MB$rulecounter", "++"}]}], " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", "\"\<getRule: metaid\>\"", ",", " ", "metaid"}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: form\>\"", ",", " ", "form"}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{"contextifyFormula", "[", "form", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: f\>\"", ",", " ", "f"}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"$SBML$evaluateParameters", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"f", "=", 
              RowBox[{"ToExpression", "[", "f", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"f", " ", "=", " ", 
              RowBox[{"f", "//.", "SBMLReplacementRules"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"f", "=", 
              RowBox[{"ToString", "[", 
               RowBox[{"InputForm", "[", "f", "]"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: f\>\"", ",", " ", "f"}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", "v", "]"}], ">", "0"}], ",", " ", 
            RowBox[{"v", "=", 
             RowBox[{"contextify", "[", "v", "]"}]}]}], "]"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: v\>\"", ",", " ", "v"}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getRule: type\>\"", ",", " ", "type"}], 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "type", ",", "\[IndentingNewLine]", "\"\<algebraicRule\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"g", "=", 
              RowBox[{"\"\<0==\>\"", "<>", "f"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"$SBML$Algebraic$Rules", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$Algebraic$Rules", ",", 
                RowBox[{"ToExpression", "[", "g", "]"}]}], "]"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\"\<constraintRule\>\"", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"g", "=", "f"}], ";", "\[IndentingNewLine]", 
             RowBox[{"$SBML$Constraint$Rules", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$Constraint$Rules", ",", " ", 
                RowBox[{"ToExpression", "[", "g", "]"}]}], "]"}]}], ";"}], 
            " ", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\"\<assignmentRule\>\"", ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            StyleBox[
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"mod", " ", "2.3", ".20"}], " ", "-", " ", 
               RowBox[{
               "add", " ", "add", " ", "rule", " ", "structure", " ", "and", 
                " ", "treat", " ", "as", " ", "DAE"}]}], " ", "*)"}],
             FontWeight->"Plain"], 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Plain"], 
            StyleBox["\[IndentingNewLine]",
             FontWeight->"Plain"], 
            RowBox[{
             RowBox[{"g", "=", 
              RowBox[{
               RowBox[{"functionate", "[", "v", "]"}], "<>", "\"\<==\>\"", "<>",
                "f"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"$SBML$Assignment$Rules", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"$SBML$Assignment$Rules", ",", 
                RowBox[{"ToExpression", "[", "g", "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"TrueQ", "[", 
                RowBox[{"$VersionNumber", "\[GreaterEqual]", " ", "5.0"}], 
                "]"}], ",", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               StyleBox[
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{
                  "Treat", " ", "as", " ", "part", " ", "of", " ", "DAE", " ",
                    "system", " ", "in", " ", "Version"}], " ", 
                  "\[GreaterEqual]", " ", "5.0"}], " ", "*)"}],
                FontWeight->"Plain"], 
               StyleBox["\[IndentingNewLine]",
                FontWeight->"Plain"], 
               StyleBox["\[IndentingNewLine]",
                FontWeight->"Plain"], 
               RowBox[{
                RowBox[{"removeReplacementRule", "[", "v", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"defineVariable", "[", "v", "]"}], ";"}], 
               "\[IndentingNewLine]", 
               StyleBox["\[IndentingNewLine]", "MR"], 
               StyleBox[",", "MR"], 
               StyleBox["\[IndentingNewLine]", "MR"], 
               StyleBox[
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Treat", " ", "as", " ", "a", " ", "replacement", " ", 
                   "rule", " ", "in", " ", "Version"}], " ", "<", " ", "5"}], 
                 "*)"}], "MR"], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"removeVariable", "[", "v", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"g", "=", 
                 RowBox[{"v", "<>", "\"\<->\>\"", "<>", "f"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"defineParameter", "[", "v", "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"SBMLIC", "[", "v", "]"}], "=", "f"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"addReplacementRule", "[", "v", "]"}], ";"}]}], " ", 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "\"\<rateRule\>\"", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"SBMLConstantQ", "[", "v", "]"}], ",", " ", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                  RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                  RowBox[{
                  "\"\<getRule: can not define a rate rule for \>\"", "//", 
                   "boldBlack"}], ",", 
                  RowBox[{
                   RowBox[{"decontextify", "[", "v", "]"}], "//", 
                   "boldBlue"}], ",", 
                  RowBox[{
                  "\"\< because it is 'constant'\>\"", "//", "boldBlack"}], 
                  ",", "\"\<\\n\>\"", ",", "\[IndentingNewLine]", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"type", ",", "opts", ",", "formula"}], "]"}], ",",
                     "Purple", ",", 
                    RowBox[{"type", "<>", "\"\< variable=\\\"\>\"", "<>", 
                    RowBox[{"stringer", "[", 
                    RowBox[{"decontextify", "[", "v", "]"}], "]"}], "<>", 
                    "\"\<\\\"\>\""}]}], "]"}]}]}], "\[IndentingNewLine]", 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"g", "=", 
                 RowBox[{
                  RowBox[{"functionate", "[", 
                   RowBox[{"v", "<>", "\"\<'\>\""}], "]"}], "<>", 
                  "\"\<==\>\"", "<>", "f", "<>", 
                  "\"\< (This rule ignored because '\>\"", "<>", "v", "<>", 
                  "\"\<' is a Constant - This is an error in the \
model.)\>\""}]}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                StyleBox[
                 RowBox[{
                  RowBox[{
                  "add", " ", "in", " ", "correction", " ", "for", " ", 
                   "concentration", " ", 
                   RowBox[{"units", ":", " ", 
                    RowBox[{
                    "when", " ", "computing", " ", "the", " ", "ODE", " ", 
                    "from", " ", "reactions"}]}]}], ",", " ", 
                  RowBox[{
                  "the", " ", "entire", " ", "right", " ", "hand", " ", 
                   "side", " ", "of", " ", "the", " ", "equation", " ", 
                   "will", " ", "be", " ", "divided", " ", "by", " ", "the", 
                   " ", "compartment", " ", "volume", " ", "if", " ", "this", 
                   " ", "is", " ", "a", " ", "species", " ", "with", " ", 
                   "units", " ", "of", " ", "the", " ", "species", " ", 
                   RowBox[{"concentration", ".", " ", "We"}], " ", 
                   RowBox[{"don", "'"}], "t", " ", "want", " ", "to", " ", 
                   "do", " ", "this", " ", "for", " ", "the", " ", "rate", 
                   " ", "rule", " ", "so", " ", "we", " ", "need", " ", "to", 
                   " ", "multiply", " ", "by", " ", "the", " ", "compartment",
                    " ", "size", " ", "in", " ", "advance", " ", "to", " ", 
                   "cancel", " ", "out", " ", "this", " ", "correction", " ", 
                   "on", " ", "this", " ", "term", " ", "of", " ", "the", " ",
                    "ODE", " ", 
                   RowBox[{"only", ".", " ", "v"}], " ", "2.5", ".9", " ", 
                   "16", "Mar06"}]}],
                 Background->GrayLevel[0.900008]], 
                StyleBox[" ",
                 Background->GrayLevel[0.900008]], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"isASpecies", "=", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"$SBML$Species$IDs", ",", 
                   RowBox[{"ToExpression", "[", "v", "]"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"debugPrint", "[", 
                 RowBox[{
                 "dbg", ",", "\"\<getRule: rateRule: {v,isASpecies} \>\"", 
                  ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"v", ",", "isASpecies"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"isASpecies", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"fOFv", "=", 
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"functionate", "[", "v", "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"hasOnlySubstanceUnits", "=", 
                    RowBox[{
                    "hasOnlySubstanceUnitsIndicator", "[", "fOFv", "]"}]}], 
                   ";", "\[IndentingNewLine]", 
                   RowBox[{"debugPrint", "[", 
                    RowBox[{
                    "dbg", ",", 
                    "\"\<getRule: rateRule: hasOnlySubstanceUnits \>\"", ",", 
                    " ", "hasOnlySubstanceUnits"}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Not", "[", "hasOnlySubstanceUnits", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"SBMLSpeciesCompartment", "[", "fOFv", "]"}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"fnew", "=", 
                    RowBox[{
                    RowBox[{"ToString", "[", "c", "]"}], "<>", "\"\<*(\>\"", "<>",
                     "f", "<>", "\"\<)\>\""}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"debugPrint", "[", 
                    RowBox[{
                    "dbg", ",", "\"\<getRule: rateRule: {c,f, fnew} \>\"", 
                    ",", 
                    RowBox[{"{", " ", 
                    RowBox[{"c", ",", " ", "f", ",", "fnew"}], "}"}]}], "]"}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"f", "=", "fnew"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"g", "=", 
                 RowBox[{
                  RowBox[{"functionate", "[", 
                   RowBox[{"v", "<>", "\"\<'\>\""}], "]"}], "<>", 
                  "\"\<==\>\"", "<>", "f"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"defineVariable", "[", "v", "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"addODE", "[", "g", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",",
             "\[IndentingNewLine]", "_", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
               RowBox[{
               "\"\<getRule: Unrecognized rule type: \>\"", "//", 
                "boldBlack"}], ",", 
               RowBox[{"type", "//", "boldBlue"}], ",", 
               RowBox[{
               "\"\< in the following rule:\\n\>\"", "//", "boldBlack"}], ",",
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"XMLHighlightForm", "[", 
                 RowBox[{
                  RowBox[{"XMLElement", "[", 
                   RowBox[{"type", ",", "opts", ",", "formula"}], "]"}], ",", 
                  "Purple", ",", "type"}], "]"}]}]}], "\[IndentingNewLine]", 
              "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", " ", "\"\<getRule: saveVerboseData:\>\"", ",", " ", 
            "saveVerboseData"}], "]"}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"{", "}"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "$SBML$verboseContext"}], ",", 
               RowBox[{
                RowBox[{"g", "=", 
                 RowBox[{"decontextify", "[", 
                  RowBox[{"g", ",", "$SBML$Context"}], "]"}]}], ";"}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"lv", " ", ">", " ", "2.15"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"r", "=", 
                RowBox[{"{", 
                 RowBox[{"metaid", ",", "sbo", ",", " ", "type", ",", "g"}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"r", "=", 
                RowBox[{"{", 
                 RowBox[{"metaid", ",", " ", "type", ",", " ", "g"}], 
                 "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", " ", ",", " ", "\"\<getRule: r\>\"", ",", " ", "r"}], "]"}],
           ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "r", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], " ", ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"end", " ", "of", "  ", 
        StyleBox["getRule",
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getRule", "[", "x___", "]"}], ":=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Unexpected format for rule: \>\"", ",", " ", "x"}], 
          "]"}], ";", " ", "Abort"}], ")"}]}], ";", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfRules\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2rules: r(1)\>\"", ",", "r"}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "r", "]"}], ">", "1"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"\"\<Error:\>\"", "//", "boldRed"}], ",", 
          RowBox[{
          "\"\<getRules: Multiple 'listOfRules' found. Only the first will be \
used.\>\"", "//", "boldBlack"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "r", "]"}], "<", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"verboseSave", "[", 
          RowBox[{"\"\<Rules\>\"", ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<MetaID\>\"", ",", " ", "\"\<Type\>\"", ",", 
             "\"\<Formula\>\""}], "}"}], ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{"First", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "=", 
       RowBox[{"extractXMLSubElements", "[", "r", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2rules: r(2)\>\"", ",", "r"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2rules: MB$Parameters(2)\>\"", ",", 
        "MB$Parameters"}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"\"\<getLevel2rules: MB$Load: \>\"", "//", "boldRed"}], ",",
           " ", 
          RowBox[{"MB$Load", "//", "boldBlue"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"MB$Load", ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"dbg", ",", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<getLevel2rules: Calling addRule/@r\>\"", "//", "boldRed"}], 
            "]"}]}], "]"}], ";", "  ", "\[IndentingNewLine]", 
         RowBox[{"addRule", "/@", "r"}]}]}], "\[IndentingNewLine]", "]"}], 
      ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"dbg", " ", ",", " ", 
        RowBox[{
        "Print", "[", "\"\<getLevel2rules: Model Builder loaded.\>\"", 
         "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"r", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{"getRule", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{"dbg", ",", "\"\<getLevel2rules: r(3)\>\"", ",", "r"}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"debugPrint", "[", 
       RowBox[{
       "dbg", ",", "\"\<getLevel2rules: MB$Parameters(3)\>\"", ",", 
        "MB$Parameters"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"lv", ">", "2.15"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"verboseSave", "[", 
         RowBox[{"\"\<Rules\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Metaid\>\"", ",", "\"\<SBOTerm\>\"", ",", " ", "\"\<Type\>\"",
             ",", "\"\<Formula\>\""}], "}"}], ",", " ", "r"}], "]"}], ",", 
        RowBox[{"verboseSave", "[", 
         RowBox[{"\"\<Rules\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Metaid\>\"", ",", " ", "\"\<Type\>\"", ",", 
            "\"\<Formula\>\""}], "}"}], ",", " ", "r"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.388851866048777*^9, 3.388851866469163*^9}, {
   3.3888519794617043`*^9, 3.3888519799527197`*^9}, {3.388852326018179*^9, 
   3.388852341376618*^9}, {3.388852380836466*^9, 3.388852423690873*^9}, {
   3.388853756682616*^9, 3.388853761188149*^9}, {3.396096166410058*^9, 
   3.3960961673286467`*^9}, {3.3961011968660803`*^9, 3.396101201325716*^9}, {
   3.396984886134244*^9, 3.396984886888864*^9}, {3.396984936770396*^9, 
   3.3969849588042793`*^9}, {3.396985046340335*^9, 3.396985046545027*^9}, {
   3.396987977754011*^9, 3.3969879785422897`*^9}, {3.396989404208902*^9, 
   3.3969894102844257`*^9}, {3.396989498390069*^9, 3.396989510209976*^9}, {
   3.39699304104854*^9, 3.396993048311489*^9}, {3.396993124272626*^9, 
   3.396993124379665*^9}, {3.396993248415457*^9, 3.396993271486183*^9}, {
   3.396993307954896*^9, 3.396993326928985*^9}, {3.396993421264366*^9, 
   3.39699342454499*^9}, {3.3969935400144587`*^9, 3.396993553724491*^9}, {
   3.39699556426915*^9, 3.396995569512472*^9}, {3.396995646901079*^9, 
   3.396995660542801*^9}, {3.397048897654546*^9, 3.397048901435597*^9}, {
   3.397049393360702*^9, 3.397049399066471*^9}, {3.397049430204257*^9, 
   3.3970494433683767`*^9}, {3.506192521199068*^9, 3.5061925217450686`*^9}, {
   3.5061926631905174`*^9, 3.506192663658518*^9}, {3.5061930807408504`*^9, 
   3.5061930828936543`*^9}, {3.506193163358596*^9, 3.5061932032322655`*^9}, {
   3.5061932763651943`*^9, 3.506193305490445*^9}, {3.506193391368596*^9, 
   3.506193452801504*^9}, {3.506213076946924*^9, 3.5062130781325264`*^9}, 
   3.5062131122809863`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["makeTF", "Subsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"makeTF", "[", 
    RowBox[{"str_", "?", "StringQ"}], "]"}], ":=", " ", 
   RowBox[{"Switch", "[", 
    RowBox[{
     RowBox[{"ToUpperCase", "[", "str", "]"}], ",", "\[IndentingNewLine]", 
     "\"\<TRUE\>\"", ",", "True", ",", "\"\<FALSE\>\"", ",", "False", ",", 
     "_", ",", " ", "False"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeTF", "[", "x___", "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Error: makeTF[\>\"", ",", "x", ",", 
       "\"\<] unrecognized argument must be a string \\\"true\\\" or \
\\\"false\\\"\>\""}], "]"}], ";", " ", 
     RowBox[{"Abort", "[", "]"}]}], ")"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5062145209322605`*^9, 3.506214568871145*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2constraints", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getLevel2constraints", "[", 
    RowBox[{"opt___", "?", "OptionQ"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "info", ",", "getConstraintInfo"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"getConstraintInfo", "[", "r_", "]"}], ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "math", ",", " ", "sbo", ",", " ", "meta", ",", " ", "msg"}], "}"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"addConstraint", "[", "r", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"sbo", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<SBOTerm\>\"", ",", "r"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"meta", "=", 
           RowBox[{"getSBMLfield", "[", 
            RowBox[{"\"\<metaid\>\"", ",", "r"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"subXML", "=", 
           RowBox[{"extractXMLSubElements", "[", "r", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"Cases", "[", 
            RowBox[{"subXML", ",", " ", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<math\>\"", ",", "___"}], "]"}], ",", "1"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"First", "[", "math", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"math", "=", 
           RowBox[{"contextifyFormula", "[", "math", "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"math", "=", 
             RowBox[{"XMLOut", "[", "math", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"math", "=", 
             RowBox[{"MathMLToInfix", "[", "math", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"math", " ", "=", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"InputForm", "[", "math", "]"}], "]"}]}], ";"}], "  ", 
           "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"msg", " ", "=", " ", 
           RowBox[{"Cases", "[", 
            RowBox[{"subXML", ",", " ", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"\"\<message\>\"", ",", "___"}], "]"}], ",", "1"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "msg", "]"}], ">", "0"}], ",", " ", 
            RowBox[{"msg", "=", 
             RowBox[{"msg", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
            "meta", ",", " ", "sbo", ",", " ", "math", ",", " ", "msg"}], 
            "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"**", "**", " ", "end"}], " ", "getConstraintInfo"}], " ", 
       "*****)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"$SBML$Constraints", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"$SBML$Model", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<listOfConstraints\>\"", ",", "___"}], "]"}], ",", 
         "3"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], "<", 
         "2.15"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "c", "]"}], ">", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
              RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", 
              RowBox[{"\"\< listOfConstraints \>\"", "//", "boldBlue"}], ",", 
              " ", 
              RowBox[{
              "\"\<is not supported in SBML Level \>\"", "//", "boldBlack"}], 
              ",", " ", 
              RowBox[{"$SBML$Level$Version", "//", "boldBlack"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"c", " ", "=", " ", 
       RowBox[{"Cases", "[", 
        RowBox[{"c", ",", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<constraint\>\"", ",", "___"}], "]"}], ",", "3"}], 
        "]"}]}], ";", " ", "\[IndentingNewLine]", 
      RowBox[{"info", "=", 
       RowBox[{"getConstraintInfo", "/@", "c"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"$SBML$Constraints", " ", "=", " ", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rule", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "&"}], ",", " ", 
         "info"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"info", " ", "=", " ", 
       RowBox[{"Most", "/@", "info"}]}], ";", " ", 
      RowBox[{"(*", " ", 
       RowBox[{"get", " ", "rid", " ", "of", " ", "message"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"verboseSave", "[", 
       RowBox[{"\"\<Constraints\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Metaid\>\"", ",", "\"\<SBOTerm\>\"", ",", "\"\<Formula\>\""}], 
         "}"}], ",", " ", "info"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["odeFor - PUT ODEFOR code here", "Subsection",
 CellChangeTimes->{{3.5049754819908357`*^9, 3.5049755006199007`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ODEfor", "[", 
    RowBox[{"var_", ",", 
     RowBox[{"odes_:", "$SBML$ODES"}], ",", " ", 
     RowBox[{"timevar_:", "Global`t"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "ode", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ode", "=", 
       RowBox[{"Cases", "[", 
        RowBox[{"odes", ",", 
         RowBox[{"Equal", "[", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"var", "[", "timevar", "]"}], ",", "timevar"}], "]"}], 
           ",", "_"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ode", "]"}], "\[Equal]", "0"}], ",", " ", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ode", "]"}], ">", "1"}], ",", " ", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Warning: ODEfor: multiple differential equations found for \
\>\"", ",", " ", "var"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"ListQ", "[", "ode", "]"}], ",", " ", 
        RowBox[{"ode", "=", 
         RowBox[{"First", "[", "ode", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ode", " ", "=", " ", 
       RowBox[{"Last", "[", 
        RowBox[{"ode", "/.", 
         RowBox[{"{", 
          RowBox[{"Equal", "\[Rule]", " ", "List"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "ode", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5049755357909126`*^9, 3.50497556074834*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2reactions ", "Subsection",
 CellChangeTimes->{{3.5049755242452526`*^9, 3.5049755334467783`*^9}, 
   3.506213226956788*^9}],

Cell["\<\
rev 2.7.2a 11 Feb 08 - include parenthesis around stoichiometries (fixes \
erroneous stoichiometry math expression)
rev 2.10.0 24 Jan 2011 - had to clear formatting to prevent crash on load\
\>", "Text",
 CellChangeTimes->{{3.411746747909433*^9, 3.4117467779354067`*^9}, {
  3.504976599024726*^9, 3.5049766198319163`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getLevel2reactions", "[", "opt___", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"r", ",", " ", 
        RowBox[{"dbg", "=", "False"}], ",", " ", 
        RowBox[{"trace", "=", "False"}], ",", " ", 
        RowBox[{"i", "=", "0"}], ",", " ", "reaction", ",", "lhs", ",", " ", 
        "rhs", ",", " ", "vars", ",", "varpositions", ",", "DEQs", ",", 
        RowBox[{"header", "=", 
         RowBox[{"{", 
          RowBox[{
          "\"\<ID\>\"", ",", "\"\<Name\>\"", ",", "\"\<Reaction\>\"", ",", 
           "\"\<Parameters\>\"", ",", "\"\<Kinetic Law\>\""}], "}"}]}], ",", 
        "\[IndentingNewLine]", "ids", ",", " ", "names", ",", " ", "fasts", 
        ",", " ", "reactions", ",", " ", "lps", ",", " ", "fs", ",", "des", 
        ",", " ", "mods", ",", " ", "conversionFactors", ",", " ", "cfvars", 
        ",", "v", ",", "s", ",", "vsm", ",", "spid", ",", " ", 
        "reactionContexts", ",", "myequal", ",", "reactionmetaids", ",", " ", 
        "reactantspecies", ",", " ", "productspecies", ",", " ", "parametas", 
        ",", "parasbo", ",", "klawsbo", ",", "\[IndentingNewLine]", 
        "selectODEs4Variables", ",", " ", "getReaction", ",", "label", ",", 
        " ", "stoichiometryMatrix", ",", " ", "unitsOfTheSpeciesCorrection"}],
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"getReaction", "[", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<reaction\>\"", ",", "opts_", ",", "r_"}], "]"}], "]"}],
         ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "id", ",", "name", ",", "reversible", ",", " ", "fast", ",", 
            "defaultID", ",", "\[IndentingNewLine]", "reactants", ",", 
            "products", ",", 
            RowBox[{"rspecies", "=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"pspecies", "=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"rstoic", "=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"pstoic", "=", 
             RowBox[{"{", "}"}]}], ",", "kineticLaw", ",", "modifiers", ",", 
            RowBox[{"dbg", "=", "False"}], ",", "formula", ",", " ", 
            "localParameters", ",", "nparameters", ",", "ids", ",", "names", 
            ",", " ", "values", ",", 
            RowBox[{"productDEQs", "=", 
             RowBox[{"{", "}"}]}], ",", " ", 
            RowBox[{"reactantDEQs", "=", 
             RowBox[{"{", "}"}]}], ",", " ", "DEQs", ",", "rdenoms", ",", 
            "pdenoms", ",", "productStoicRules", ",", " ", 
            "reactantStoicRules", ",", " ", "stoichiometryMatrixColumn", ",", 
            "netStoichiometry", ",", "mbe", ",", "marate", ",", "productRHS", 
            ",", "reactantRHS", ",", "thereaction", ",", "reactionmetaid", 
            ",", " ", "reactantmetaids", ",", " ", "productmetaids", ",", " ",
             "modifiermetaids", ",", " ", "\[IndentingNewLine]", 
            "reactantsboterms", ",", " ", "productsboterms", ",", " ", 
            "modifiersboterms", ",", "reactionsboterm", ",", " ", 
            "parametermetaids", ",", "parametersboterms", ",", 
            "kineticlawsboterm", ",", "sboterms", ",", "cysmbols", ",", " ", 
            "\[IndentingNewLine]", "getStoichiometries", ",", " ", 
            "getLocalParameters", ",", " ", "sumStoichiometryRules"}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"thereaction", "=", 
            RowBox[{"XMLElement", "[", 
             RowBox[{"\"\<reaction\>\"", ",", "opts", ",", "r"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"getStoichiometries", "[", 
             RowBox[{"XMLElement", "[", 
              RowBox[{"listName_", ",", "options_", ",", "stuff_"}], "]"}], 
             "]"}], ":=", " ", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"species", ",", "vspecies", ",", "number", ",", 
                RowBox[{"dbg", "=", "False"}], ",", " ", "smath"}], "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"debugPrint", "[", 
                RowBox[{
                "dbg", ",", "\"\<getStoichiometries: input\>\"", ",", " ", 
                 RowBox[{"XMLElement", "[", 
                  RowBox[{
                  "listName", ",", " ", "options", ",", " ", "stuff"}], 
                  "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"species", " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"\"\<species\>\"", "/.", "options"}], ")"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<species\>\"", "\[Rule]", " ", 
                   "\"\<Indeterminate\>\""}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"printWarning", "[", 
                RowBox[{
                 RowBox[{"species", "==", "\"\<Indeterminate\>\""}], ",", " ",
                  "\[IndentingNewLine]", 
                 RowBox[{
                 "\"\<No 'species' name specified for reaction '\>\"", "<>", 
                  "id", "<>", "\"\<' '\>\"", "<>", "listName", "<>", 
                  "\"\<'\>\""}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"smath", " ", "=", " ", 
                RowBox[{"Cases", "[", 
                 RowBox[{"stuff", ",", " ", 
                  RowBox[{"XMLElement", "[", 
                   RowBox[{"\"\<stoichiometryMath\>\"", ",", "___"}], "]"}]}],
                  "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"debugPrint", "[", 
                RowBox[{
                "dbg", ",", "\"\<getStoichiometries: smath(1)\>\"", ",", " ", 
                 "smath"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"number", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "smath", "]"}], ">", "0"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"smath", "=", 
                   RowBox[{"First", "[", "smath", "]"}]}], ";", " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: smath(2)\>\"", ",", 
                    " ", "smath"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"smath", "=", 
                   RowBox[{"extractXMLSubElements", "[", "smath", "]"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: smath(3)\>\"", ",", 
                    " ", "smath"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"number", " ", "=", " ", 
                   RowBox[{"Cases", "[", 
                    RowBox[{"smath", ",", 
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<math\>\"", ",", "___"}], "]"}]}], "]"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: number(1)\>\"", ",", 
                    " ", "number"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "number", "]"}], ">", "0"}], ",", 
                    " ", 
                    RowBox[{"number", "=", 
                    RowBox[{"contextifyFormula", "[", 
                    RowBox[{"number", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
                    RowBox[{"number", "=", "\"\<1\>\""}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: number(1.0)\>\"", ",",
                     " ", "number"}], "]"}], ";"}], "\[IndentingNewLine]", 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: options\>\"", ",", 
                    " ", "options"}], "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"number", " ", "=", " ", 
                   RowBox[{
                    RowBox[{"\"\<stoichiometry\>\"", "/.", "options"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<stoichiometry\>\"", "\[Rule]", " ", "\"\<1\>\""}], 
                    "}"}]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: number(1.A)\>\"", ",",
                     " ", "number"}], "]"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"number", " ", "=", " ", 
                   RowBox[{"ToExpression", "[", 
                    RowBox[{"fromEForm", "[", "number", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getStoichiometries: number(2): \>\"", ",",
                     " ", "number"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"vspecies", " ", "=", " ", 
                RowBox[{"contextify", "[", 
                 RowBox[{"species", "//", "makeIntoValidSId"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"debugPrint", "[", 
                RowBox[{
                "dbg", ",", "\"\<getStoichiometries: vspecies:\>\"", ",", " ",
                  "vspecies"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"species", " ", "=", " ", "vspecies"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"species", " ", "=", " ", 
                RowBox[{"ToExpression", "[", "species", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"debugPrint", "[", 
                RowBox[{
                "dbg", ",", "\"\<getStoichiometries: species: \>\"", ",", " ",
                  "species"}], "]"}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "moved", " ", "into", " ", "earlier", " ", "if", " ", 
                 "statement", " ", "2.5", ".3"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"(*", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"number", " ", "=", " ", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"fromEForm", "[", "number", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", "\"\<getStoichiometries: number(2): \>\"", ",", 
                   " ", "number"}], "]"}], ";"}], "\[IndentingNewLine]", 
                "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"debugPrint", "[", 
                RowBox[{
                "dbg", ",", 
                 "\"\<getStoichiometries: {species, number} [return \
value]\>\"", ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"species", ",", "number"}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"{", 
                 RowBox[{"species", ",", "number"}], "}"}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", 
           RowBox[{"(*", " ", 
            RowBox[{"end", " ", "of", " ", "getStoichiometries"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"getStoichiometries", "[", "x_", "]"}], ":=", " ", 
            RowBox[{"printWarning", "[", 
             RowBox[{"\"\<Invalid argument to getStoichiometry: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"InputForm", "[", "x", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"getLocalParameters", "[", "x_", "]"}], ":=", " ", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "pid", ",", " ", "pname", ",", " ", "value", ",", "cid", ",", 
                " ", "units"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"pid", " ", "=", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\"\<id\>\"", "/.", "x"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<id\>\"", "\[Rule]", " ", "$SBML$IndeterminateValue"}],
                    "}"}]}], ")"}]}], ";", " ", "\[IndentingNewLine]", 
               RowBox[{"pname", " ", "=", " ", 
                RowBox[{
                 RowBox[{"\"\<name\>\"", "/.", "x"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"\"\<name\>\"", "\[Rule]", " ", "\"\<\>\""}], 
                  "}"}]}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"value", "=", 
                RowBox[{
                 RowBox[{"\"\<value\>\"", "/.", "x"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<value\>\"", "\[Rule]", " ", 
                   "$SBML$IndeterminateValue"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"value", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{"value", "//", "fromEForm"}], "//", "InputForm"}], "//",
                  "ToString"}]}], ";", 
               RowBox[{"(*", " ", 
                RowBox[{"remove", " ", "embedded", " ", "quotes"}], "*)"}], 
               " ", "\[IndentingNewLine]", 
               RowBox[{"value", " ", "=", " ", 
                RowBox[{"StringReplace", "[", 
                 RowBox[{"value", ",", 
                  RowBox[{"\"\<\\\"\>\"", "\[Rule]", " ", "\"\<\>\""}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"$SBML$LocalReactionParameterTable", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{
                 "$SBML$LocalReactionParameterTable", ",", " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"pid", ",", " ", 
                    RowBox[{"decontextify", "[", "id", "]"}]}], "}"}]}], 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"fully", " ", "contextified", " ", "parameter"}], " ",
                 "*)"}], " ", "\[IndentingNewLine]", 
               RowBox[{"cid", " ", "=", " ", 
                RowBox[{"contextify", "[", 
                 RowBox[{
                  RowBox[{"pid", "//", "makeIntoValidSId"}], ",", "id"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"defineParameter", "[", "cid", "]"}], ";", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"definef", "[", 
                RowBox[{"SBMLIC", ",", "cid", ",", " ", "value"}], "]"}], ";",
                " ", "\[IndentingNewLine]", 
               RowBox[{"addReplacementRule", "[", "cid", "]"}], ";", " ", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"units", " ", "=", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\"\<units\>\"", "/.", "x"}], "/.", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<units\>\"", "\[Rule]", " ", 
                    "$SBML$IndeterminateValue"}], "}"}]}], ")"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"units", " ", "=", " ", 
                RowBox[{"unitsContextify", "[", "units", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"$SBML$UnitAssociations", " ", "=", " ", 
                RowBox[{"Append", "[", 
                 RowBox[{"$SBML$UnitAssociations", ",", " ", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", "cid", "]"}], "\[Rule]", " ", 
                   RowBox[{"ToExpression", "[", "units", "]"}]}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{"locally", " ", "contextify", " ", "parameter"}], " ",
                 "*)"}], " ", "\[IndentingNewLine]", 
               RowBox[{"cid", " ", "=", " ", 
                RowBox[{"contextify", "[", 
                 RowBox[{
                  RowBox[{"pid", "//", "makeIntoValidSId"}], ",", 
                  RowBox[{"decontextify", "[", "id", "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"(", 
                 RowBox[{"pid", "\[Rule]", " ", "cid"}], ")"}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}],
            ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"end", " ", "of", " ", "getLocalParameters"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"$SBML$NReactions", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", 
             "\"\<getReaction ===================== reaction #\>\"", ",", 
             "$SBML$NReactions"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", " ", "\"\<getReaction: all species=\>\"", ",", 
             "$SBML$Species$IDs"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"defaultID", "=", 
            RowBox[{"\"\<reaction_\>\"", "<>", 
             RowBox[{"ToString", "[", "$SBML$NReactions", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"id", ",", "name"}], "}"}], "=", 
            RowBox[{"getIDandName", "[", 
             RowBox[{"opts", ",", "defaultID"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"addID", "[", 
              RowBox[{"id", ",", " ", "\"\<reaction\>\""}], "]"}], ";"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"removeVariable", "[", "id", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"reactionmetaid", "=", 
            RowBox[{
             RowBox[{"\"\<metaid\>\"", "/.", "opts"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"reversible", "=", 
            RowBox[{
             RowBox[{"\"\<reversible\>\"", "/.", "opts"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<reversible\>\"", "\[Rule]", " ", "\"\<true\>\""}], 
              "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"reversible", " ", "=", " ", 
            RowBox[{"makeTF", "[", "reversible", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"fast", " ", "=", " ", 
            RowBox[{
             RowBox[{"\"\<fast\>\"", "/.", "opts"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<fast\>\"", "\[Rule]", " ", "\"\<false\>\""}], 
              "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"fast", " ", "=", " ", 
            RowBox[{"makeTF", "[", "fast", "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"reactants", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"r", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<listOfReactants\>\"", ",", "___"}], "]"}]}], 
             "]"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"products", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"r", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<listOfProducts\>\"", ",", "___"}], "]"}]}], 
             "]"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"kineticLaw", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"r", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<kineticLaw\>\"", ",", "___"}], "]"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"modifiers", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"r", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<listOfModifiers\>\"", ",", "___"}], "]"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"reactants", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"reactants", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<speciesReference\>\"", ",", "___"}], "]"}], ",", 
              "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"products", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"products", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<speciesReference\>\"", ",", "___"}], "]"}], ",", 
              "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"modifiers", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"modifiers", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<modifierSpeciesReference\>\"", ",", "___"}], 
               "]"}], ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"reactantmetaids", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<metaid\>\"", ",", " ", "#"}], "]"}], "&"}], "/@", 
             "reactants"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"productmetaids", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<metaid\>\"", ",", " ", "#"}], "]"}], "&"}], "/@", 
             "products"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"modifiermetaids", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<metaid\>\"", ",", " ", "#"}], "]"}], "&"}], "/@", 
             "modifiers"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"reactantsboterms", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<sboTerm\>\"", ",", " ", "#"}], "]"}], "&"}], "/@",
              "reactants"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"productsboterms", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<sboTerm\>\"", ",", " ", "#"}], "]"}], "&"}], "/@",
              "products"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"modifiersboterms", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"getSBMLfield", "[", 
               RowBox[{"\"\<sboTerm\>\"", ",", " ", "#"}], "]"}], "&"}], "/@",
              "modifiers"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"reactants", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"getStoichiometries", ",", "reactants"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"products", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"getStoichiometries", ",", "products"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"modifiers", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"getStoichiometries", ",", "modifiers"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "reactants", "]"}], ">", "0"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"rspecies", ",", "rstoic"}], "}"}], "=", 
               RowBox[{"Transpose", "[", "reactants", "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "products", "]"}], ">", "0"}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pspecies", ",", "pstoic"}], "}"}], "=", 
               RowBox[{"Transpose", "[", "products", "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "modifiers", "]"}], ">", "0"}], ",", " ", 
             RowBox[{"modifiers", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"First", ",", "modifiers"}], "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"reaction", " ", "=", " ", 
            RowBox[{"reactionForm", "[", 
             RowBox[{
             "rspecies", ",", " ", "rstoic", ",", "pspecies", ",", "pstoic", 
              ",", " ", "reversible"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", " ", "\"\<getReaction: reaction(reactionForm):\>\"", 
             ",", " ", "reaction"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{"dbg", ",", "\"\<getReaction: {id,name}\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"id", ",", "name"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: reactants\>\"", ",", "reactants"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: products\>\"", ",", "products"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: modifiers\>\"", ",", "modifiers"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: kineticLaw\>\"", ",", 
             "kineticLaw"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
              "sumStoichiometryRules", " ", "added", " ", "2.5", ".7", " ", 
               "2"}], "-", "2", "-", 
              RowBox[{
              "05", " ", "to", " ", "handle", " ", "files", " ", "that", " ", 
               "have", " ", "the", " ", "same", " ", "reactant", " ", "or", 
               " ", "product", " ", "listed", " ", "more", " ", "than", " ", 
               "once", " ", "in", " ", "the", " ", "same", " ", 
               "reaction"}]}], ",", " ", 
             RowBox[{"i", ".", "e", "."}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
               "the", " ", "SBML", " ", "files", " ", "has", " ", "A"}], "+", 
               "A"}], "\[Rule]", " ", 
              RowBox[{
               RowBox[{"B", " ", "instead", " ", "of", " ", "2", "A"}], 
               "\[Rule]", " ", "B"}]}], ",", " ", 
             RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sumStoichiometryRules", "[", 
             RowBox[{"rules___", "?", "OptionQ"}], "]"}], ":=", " ", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "lhs", ",", "rnew", ",", " ", "sums", ",", " ", "vars", ",", 
                "valuesof"}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"rnew", "=", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "rules", "}"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"lhs", "=", 
                RowBox[{"First", "/@", "rnew"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"vars", "=", 
                RowBox[{"Union", "[", "lhs", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"rnew", "=", 
                RowBox[{"rnew", "/.", 
                 RowBox[{"{", 
                  RowBox[{"Rule", "\[Rule]", " ", "List"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"valuesof", "[", "var_", "]"}], ":=", 
                RowBox[{"Plus", "@@", 
                 RowBox[{"(", " ", 
                  RowBox[{"Last", "/@", 
                   RowBox[{"(", 
                    RowBox[{"Cases", "[", 
                    RowBox[{"rnew", ",", 
                    RowBox[{"{", 
                    RowBox[{"var", ",", "_"}], "}"}]}], "]"}], ")"}]}], 
                  ")"}]}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"sums", "=", 
                RowBox[{"valuesof", "/@", "vars"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"rnew", "=", 
                RowBox[{"MapThread", "[", 
                 RowBox[{"Rule", ",", 
                  RowBox[{"{", 
                   RowBox[{"vars", ",", "sums"}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Return", "[", "rnew", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"productStoicRules", "=", 
            RowBox[{"sumStoichiometryRules", "[", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Apply", "[", 
                 RowBox[{"Rule", ",", "#"}], "]"}], "&"}], ",", "products"}], 
              "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"reactantStoicRules", " ", "=", 
            RowBox[{"sumStoichiometryRules", "[", " ", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Apply", "[", 
                 RowBox[{"Rule", ",", "#"}], "]"}], "&"}], ",", "reactants"}],
               "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: productStoichRules\>\"", ",", 
             "productStoicRules"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: reactantStoicRules\>\"", ",", 
             "reactantStoicRules"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"netStoichiometry", "[", "x_", "]"}], ":=", " ", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"st", ",", "ls", ",", "rs"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ls", " ", "=", " ", 
                RowBox[{
                 RowBox[{"x", "/.", "productStoicRules"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", " ", "0"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"rs", " ", "=", " ", 
                RowBox[{
                 RowBox[{"x", "/.", "reactantStoicRules"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", " ", "0"}], "}"}]}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"st", " ", "=", " ", 
                RowBox[{"ls", "-", "rs"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", "st", "]"}], ";"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"stoichiometryMatrixColumn", " ", "=", " ", 
            RowBox[{"netStoichiometry", "/@", "$SBML$Species$IDs"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: net stoichiometry: \>\"", ",", 
             "stoichiometryMatrixColumn"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"stoichiometryMatrix", "=", 
            RowBox[{"Append", "[", 
             RowBox[{
             "stoichiometryMatrix", ",", "stoichiometryMatrixColumn"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"localParameters", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"kineticLaw", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<listOfParameters\>\"", ",", "___"}], "]"}], ",", 
              "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"localParameters", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"localParameters", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<parameter\>\"", ",", "___"}], "]"}], ",", "3"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"localParameters", "=", 
            RowBox[{"Map", "[", 
             RowBox[{"extractXMLOptions", ",", "localParameters"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"parametermetaids", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\"\<metaid\>\"", "/.", "#"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], 
                 "}"}]}], ")"}], "&"}], "/@", "localParameters"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"parametersboterms", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\"\<sboTerm\>\"", "/.", "#"}], "/.", 
                RowBox[{"{", 
                 RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], 
                 "}"}]}], ")"}], "&"}], "/@", "localParameters"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"nparameters", "=", 
            RowBox[{"Length", "[", "localParameters", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"$SBML$NLocalParameters", " ", "+=", " ", "nparameters"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"localParameters", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{"getLocalParameters", ",", "localParameters"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: localParameters\>\"", ",", 
             "localParameters"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"formula", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"kineticLaw", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<math\>\"", ",", "___"}], "]"}], ",", "3"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: formula(1)\>\"", ",", "formula"}], 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"XML", "[", 
                RowBox[{"\"\<csymbol\>\"", ",", "_", ",", " ", "x_"}], "]"}], 
               ":=", "x"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"XML", "[", "___", "]"}], ":=", " ", 
               RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"csymbols", " ", "=", " ", 
               RowBox[{"Cases", "[", 
                RowBox[{"formula", ",", " ", 
                 RowBox[{"XMLElement", "[", 
                  RowBox[{"\"\<csymbol\>\"", ",", "___"}], "]"}], ",", " ", 
                 "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"csymbols", " ", "=", " ", 
               RowBox[{"csymbols", "/.", 
                RowBox[{"{", 
                 RowBox[{"XMLElement", "\[Rule]", " ", "XML"}], "}"}]}]}], 
              ";", " ", "\[IndentingNewLine]", 
              RowBox[{"csymbols", "=", 
               RowBox[{"Flatten", "[", "csymbols", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", " ", "\"\<getReaction: csymbols: \>\"", ",", " ", 
                "csymbols"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "formula", "]"}], ">", "0"}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"formula", " ", "=", " ", 
               RowBox[{"First", "[", "formula", "]"}]}], ";", 
              "\[IndentingNewLine]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"nparameters", ">", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{
                  "localParameters", " ", "has", " ", "form", " ", "k"}], 
                  "\[Rule]", "reaction`form"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"formula", " ", "=", " ", 
                  RowBox[{"formula", "/.", "localParameters"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", "\"\<getReaction: formula(1a)\>\"", ",", 
                   "formula"}], "]"}], ";", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{"localParameters", " ", "=", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{"Last", ",", "localParameters"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"localParameters", " ", "=", " ", 
                  RowBox[{"contextify", "[", "localParameters", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"localParameters", " ", "=", " ", 
                  RowBox[{"parameterate", "[", "localParameters", "]"}]}], 
                 ";", " ", "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", "\"\<getReaction: localParameters\>\"", ",", 
                   "localParameters"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "local", " ", "parameters", " ", "has", " ", "form", " ", 
                 "\"\<model`reaction`k\[Rule]value\>\""}], " ", "*)"}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: formula(1.9)\>\"", ",", 
                "formula"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"formula", " ", "=", " ", 
               RowBox[{"contextifyFormula", "[", "formula", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: formula(2)\>\"", ",", 
                "formula"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"nparameters", ">", "0"}], ")"}], " ", "\[And]", 
                 " ", "$SBML$evaluateParameters"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"lps", " ", "=", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{"ToExpression", ",", "localParameters"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"lps", " ", "=", " ", 
                  RowBox[{"Select", "[", 
                   RowBox[{"lps", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", " ", 
                    RowBox[{"Last", "[", "#", "]"}], "]"}], "\[NotEqual]", 
                    "\"\<Indeterminate\>\""}], "&"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"formula", " ", "=", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", "formula", "]"}], "/.", 
                    "lps"}], ")"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", "\"\<getReaction: formula(2a)\>\"", ",", 
                   "formula"}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"formula", "=", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"InputForm", "[", "formula", "]"}], "]"}]}], ";", 
                 " ", "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", "\"\<getReaction: formula(2b)\>\"", ",", 
                   "formula"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
              ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"formula", "=", "\"\<Indeterminate\>\""}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: formula(3)\>\"", ",", "formula"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"$SBML$UseUnits", ",", " ", 
             RowBox[{
              RowBox[{"formula", " ", "=", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"InputForm", "[", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ToExpression", "[", "formula", "]"}], "/.", 
                   "SBMLSpeciesSIConcentration"}], ")"}], "]"}], "]"}]}], 
              ";"}]}], " ", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: formula(4)\>\"", ",", "formula"}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"ListQ", "[", "kineticLaw", "]"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "kineticLaw", "]"}], ">", "1"}], ",", 
                " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                   RowBox[{"\"\<Error: \>\"", "//", "boldRed"}], ",", " ", 
                   RowBox[{
                   "\"\<getLevel2Reaction: multiple kineticLaws in \
reaction:\\n\>\"", "//", "boldBlack"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"XMLHighlightForm", "[", 
                    RowBox[{
                    "thereaction", ",", "Purple", ",", "\"\<kineticLaw\>\""}],
                     "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"kineticLaw", "=", 
               RowBox[{"First", "[", "kineticLaw", "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"kineticlawsboterm", "=", 
            RowBox[{"getSBMLfield", "[", 
             RowBox[{"\"\<sboTerm\>\"", ",", " ", "kineticLaw"}], "]"}]}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"selectODEs4Variables", "[", "q_", "]"}], ":=", " ", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"odes", ",", " ", "varname", ",", "isvariable"}], 
               "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"varname", "[", "ode_", "]"}], ":=", " ", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "DE", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"DE", " ", "=", " ", 
                    RowBox[{"ToExpression", "[", "ode", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"DE", " ", "=", " ", 
                    RowBox[{"First", "[", "DE", "]"}]}], ";", " ", 
                   "\[IndentingNewLine]", 
                   RowBox[{"DE", " ", "=", " ", 
                    RowBox[{"ToString", "[", "DE", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"DE", " ", "=", " ", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"DE", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<'[t]\>\"", "\[Rule]", " ", "\"\<\>\""}], 
                    "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                   RowBox[{"Return", "[", "DE", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"isvariable", "[", "ode_", "]"}], ":=", 
                RowBox[{"Module", "[", 
                 RowBox[{
                  RowBox[{"{", "v", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"v", " ", "=", " ", 
                    RowBox[{"varname", "[", "ode", "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Return", "[", " ", 
                    RowBox[{"\[Not]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "MathSBML`Private`SBMLBoundaryConditionQ", "[", "v", 
                    "]"}], " ", "\[Or]", " ", 
                    RowBox[{
                    "MathSBML`Private`SBMLConstantQ", "[", "v", "]"}]}], 
                    ")"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Return", "[", 
                RowBox[{"Select", "[", 
                 RowBox[{"q", ",", " ", "isvariable"}], "]"}], "]"}], ";"}]}],
              "\[IndentingNewLine]", "]"}]}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"end", " ", "of", " ", "selectODEs4Variables"}], " ", 
            "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"calculate", " ", "marate", " ", "even", " ", 
             RowBox[{"(", "especially", ")"}], " ", "if", " ", "there", " ", 
             "is", " ", "no", " ", "kinetic", " ", "law"}], " ", "*)"}], 
           "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: pstoic\>\"", ",", "pstoic"}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: rstoic\>\"", ",", "rstoic"}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"marate", " ", "=", " ", 
            RowBox[{"Times", "@@", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"functionate", "[", "#1", "]"}], "^", "#2"}], "&"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{"rspecies", ",", "rstoic"}], "}"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getReaction: marate\>\"", ",", "marate"}], "]"}],
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"$SBML$MassActionReactionRates", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"$SBML$MassActionReactionRates", ",", "marate"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"formula", "==", " ", "\"\<Indeterminate\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"DEQs", "=", 
              RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"$SBML$evaluateParameters", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"formula", " ", "=", 
                  RowBox[{"(", " ", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", "formula", "]"}], "//.", 
                    "SBMLReplacementRules"}], ")"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"formula", "=", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"InputForm", "[", "formula", "]"}], "]"}]}], 
                 ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: pspecies\>\"", ",", "pspecies"}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: rspecies\>\"", ",", "rspecies"}],
                "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", 
                "\"\<getReaction: $SBML$SpeciesThatAreConcentrations\>\"", 
                ",", "$SBML$SpeciesThatAreConcentrations"}], "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"pdenoms", " ", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"$SBML$SpeciesThatAreConcentrations", ",", 
                    RowBox[{"#", "//", "stringer"}]}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "//", "stringer"}], ")"}], "/.", 
                    "$SBML$SpeciesCompartmentAssociations"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"stringer", "[", "#", "]"}], "\[Rule]", " ", 
                    "\"\<Indeterminate\>\""}], "}"}]}], ",", "\"\<1\>\""}], 
                   "]"}], "&"}], ",", "pspecies"}], " ", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rdenoms", " ", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"$SBML$SpeciesThatAreConcentrations", ",", 
                    RowBox[{"#", "//", "stringer"}]}], "]"}], ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "//", "stringer"}], ")"}], "/.", 
                    "$SBML$SpeciesCompartmentAssociations"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"stringer", "[", "#", "]"}], "\[Rule]", " ", 
                    "\"\<Indeterminate\>\""}], "}"}]}], ",", "\"\<1\>\""}], 
                   "]"}], "&"}], ",", "rspecies"}], " ", "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: pdenoms\>\"", ",", "pdenoms"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: rdenoms\>\"", ",", "rdenoms"}], 
               "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"productDEQs", "=", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"functionate", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<'\>\""}],
                     "]"}], "<>", "\"\<== (\>\"", "<>", 
                   RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<)*(\>\"", 
                   "<>", "formula", "<>", "\"\<)/(\>\"", "<>", "#3", "<>", 
                   "\"\<)\>\""}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"pspecies", ",", "pstoic", ",", "pdenoms"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"reactantDEQs", "=", 
               RowBox[{"MapThread", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"functionate", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "#1", "]"}], "<>", "\"\<'\>\""}],
                     "]"}], "<>", "\"\<==-(\>\"", "<>", 
                   RowBox[{"ToString", "[", "#2", "]"}], "<>", "\"\<)*(\>\"", 
                   "<>", "formula", "<>", "\"\<)/(\>\"", "<>", "#3", "<>", 
                   "\"\<)\>\""}], "&"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"rspecies", ",", "rstoic", ",", "rdenoms"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: productDEQs\>\"", ",", 
                "productDEQs"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: reactantDEQs\>\"", ",", 
                "reactantDEQs"}], "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "select", " ", "only", " ", "those", " ", "odes", " ", "that", 
                " ", "are", " ", "not", " ", "for", " ", "constants", " ", 
                "or", " ", "boundary", " ", "conditions"}], " ", "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"DEQs", "=", " ", 
               RowBox[{"Join", "[", 
                RowBox[{"productDEQs", ",", " ", "reactantDEQs"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"DEQs", " ", "=", 
               RowBox[{"selectODEs4Variables", "[", "DEQs", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"DEQs", "=", 
               RowBox[{"Map", "[", 
                RowBox[{"ToExpression", ",", "DEQs"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"$SBML$evaluateParameters", ",", "\[IndentingNewLine]", 
                RowBox[{"DEQs", " ", "=", " ", 
                 RowBox[{"DEQs", "//.", "SBMLReplacementRules"}]}]}], "]"}], 
              ";"}]}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "This", " ", "is", " ", "not", " ", "done", " ", "by", " ", 
              "default", " ", "because", " ", "it", " ", "can", " ", 
              "sometimes", " ", "take", " ", "a", " ", "LOT", " ", "of", " ", 
              "CPU"}], " ", "-", " ", 
             RowBox[{
             "but", " ", "you", " ", "can", " ", "end", " ", "up", " ", 
              "with", " ", "things", " ", "in", " ", "both", " ", "the", " ", 
              "numerator", " ", "and", " ", "denominator", " ", "that", " ", 
              "SHOULD", " ", "be", " ", "cancelled", " ", "if", " ", "you", 
              " ", 
              RowBox[{"don", "'"}], "t", " ", "do", " ", "it"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"$SBMLSimplifyRateLaws", ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"debugPrint", "[", 
               RowBox[{"dbg", ",", "\"\<getReaction: Cancelling ... \>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"myequal", "[", 
                RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", " ", 
               RowBox[{"Equal", "[", 
                RowBox[{"a", ",", 
                 RowBox[{"Cancel", "[", "b", "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"DEQs", "=", 
               RowBox[{"DEQs", "/.", 
                RowBox[{"{", 
                 RowBox[{"Equal", "\[Rule]", " ", "myequal"}], "}"}]}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", " ", "\"\<getReaction: DEQS (1) :\>\"", ",", " ", 
             "DEQs"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{"dbg", ",", "\"\<getReaction: Joining ... \>\""}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"$SBML$ODES", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"$SBML$ODES", ",", " ", "DEQs"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "convert", " ", "local", " ", "DEQs", " ", "to", " ", "a", " ", 
             "convenient", " ", "form", " ", "for", " ", "printing"}], "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{"dbg", ",", "\"\<getReaction: Converting ... \>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"DEQs", " ", "=", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"ToString", "[", 
                 RowBox[{"First", "[", "#", "]"}], "]"}], "<>", "\"\<==\>\"", 
                "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"InputForm", "[", 
                  RowBox[{"Last", "[", "#", "]"}], "]"}], "]"}]}], "&"}], ",",
               " ", "DEQs"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"$SBML$Reactions", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"$SBML$Reactions", ",", " ", "reaction"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", " ", "\"\<getReaction: DEQS (2) :\>\"", ",", " ", 
             "DEQs"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", 
             "\"\<getReaction: Preparing to call checkKineticLaw.\>\""}], 
            "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "re", ",", "p", ",", "f", ",", " ", "locals", ",", "myrule", 
               ",", "ok"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"myrule", "[", 
                RowBox[{"x_", ",", "y_"}], "]"}], ":=", "x"}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"re", "=", 
               RowBox[{"stringer", "/@", 
                RowBox[{"decontextify", "/@", 
                 RowBox[{"First", "/@", "reactants"}]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", " ", "\"\<getReaction: re:\>\"", ",", " ", "re"}], 
               "]"}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"p", "=", 
               RowBox[{"stringer", "/@", 
                RowBox[{"decontextify", "/@", 
                 RowBox[{"First", "/@", "products"}]}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", " ", "\"\<getReaction: p: \>\"", ",", " ", "p"}], 
               "]"}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"f", "=", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"formula", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\"\<[t]\>\"", "\[Rule]", " ", "\"\<\>\""}], ",", 
                   RowBox[{
                    RowBox[{"id", "<>", "\"\<`\>\""}], "\[Rule]", " ", 
                    "\"\<\>\""}], ",", 
                   RowBox[{"$SBML$Context", "\[Rule]", " ", "\"\<\>\""}]}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction:  f: \>\"", ",", " ", "f"}], 
               "]"}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"locals", "=", 
               RowBox[{"decontextify", "/@", 
                RowBox[{"ToString", "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ToExpression", "/@", "localParameters"}], ")"}], 
                   "/.", 
                   RowBox[{"{", 
                    RowBox[{"Rule", "\[Rule]", "myrule"}], "}"}]}], 
                  ")"}]}]}]}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", " ", "\"\<getReaction: locals: \>\"", ",", " ", 
                "locals"}], "]"}], ";", " ", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: calling checkKineticLaw.\>\""}], 
               "]"}], ";", " ", 
              RowBox[{"ok", "=", 
               RowBox[{"checkKineticLaw", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"invokedBy", "\[Rule]", " ", "\"\<getReaction\>\""}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Global`id", "\[Rule]", " ", 
                  RowBox[{"decontextify", "[", "id", "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Global`reactants", "\[Rule]", " ", "re"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Global`products", "\[Rule]", " ", "p"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Global`modifiers", "\[Rule]", 
                  RowBox[{"decontextify", "/@", " ", "modifiers"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Global`parameters", "\[Rule]", " ", "locals"}], ",",
                  "\[IndentingNewLine]", 
                 RowBox[{"Global`kineticLaw", "\[Rule]", 
                  RowBox[{"ToExpression", "[", "f", "]"}]}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"csymbolsused", "\[Rule]", " ", "csymbols"}]}], 
                "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", "\"\<getReaction: reaction is ok:\>\"", ",", 
                "ok"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"trace", ",", " ", 
             RowBox[{"Print", "[", 
              RowBox[{"\"\<getReaction: \>\"", ",", 
               RowBox[{"++", "i"}], ",", "\"\<:\>\"", ",", "id", ",", 
               "\"\<:\>\"", ",", "reaction", ",", "\"\<:\>\"", ",", 
               "formula"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"reacts", ",", " ", "prods"}], "}"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"reactant", ",", " ", "modifier", ",", " ", 
               RowBox[{
               "and", " ", "product", " ", "information", " ", "is", " ", 
                "returned", " ", "as", " ", "a", " ", "triple", " ", 
                RowBox[{"{", 
                 RowBox[{"id", ",", " ", "metaid", ",", " ", "sboterm"}], 
                 "}"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"reacts", "=", 
               RowBox[{"decontextify", "/@", 
                RowBox[{"First", "/@", "reactants"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"prods", "=", 
               RowBox[{"decontextify", "/@", 
                RowBox[{"First", "/@", "products"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], 
                 ">", "2.15"}], ",", " ", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"reacts", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "reacts", ",", " ", "reactantmetaids", ",", " ", 
                    "reactantsboterms"}], "}"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"prods", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "prods", ",", " ", "productmetaids", ",", " ", 
                    "productsboterms"}], "}"}], "]"}]}], ";", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"modifiers", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "modifiers", ",", " ", "modifiermetaids", ",", " ", 
                    "modifiersboterms"}], "}"}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"reacts", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"reacts", ",", " ", "reactantmetaids"}], "}"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"prods", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"prods", ",", " ", "productmetaids"}], "}"}], 
                   "]"}]}], ";", " ", "\[IndentingNewLine]", 
                 RowBox[{"modifiers", " ", "=", " ", 
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{"modifiers", ",", " ", "modifiermetaids"}], "}"}],
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "]"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"end", " ", "if"}], " ", "*)"}], "\[IndentingNewLine]",
               "\[IndentingNewLine]", " ", 
              RowBox[{"If", "[", 
               RowBox[{"dbg", ",", " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<return value from getReaction:\>\"", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<id=\>\"", ",", "id", ",", " ", "\"\<\\nmetaid=\>\"", 
                    ",", "reactionmetaid", ",", " ", "\"\<\\nname=\>\"", ",", 
                    " ", "name", ",", "\"\<\\nfast=\>\"", ",", " ", "fast", 
                    ",", "\"\<\\nreaction=\>\"", ",", "reaction", ",", 
                    "\"\<\\nreacts=\>\"", ",", "reacts", ",", " ", 
                    "\"\<\\nprods=\>\"", ",", "prods", ",", 
                    "\"\<\\nmodifiers=\>\"", ",", " ", "modifiers", ",", 
                    "\"\<\\nlocalParameters=\>\"", ",", " ", 
                    "localParameters", ",", "\[IndentingNewLine]", 
                    "\"\<\\npar meta ids=\>\"", ",", "parametermetaids", ",", 
                    "\"\<\\npar sbo=\>\"", ",", "parametersboterms", ",", 
                    "\[IndentingNewLine]", "\"\<\\nformula=\>\"", ",", 
                    "formula", ",", "\"\<\\nkinetic law sbo=\>\"", ",", 
                    "kineticlawsboterm", ",", "\[IndentingNewLine]", 
                    "\"\<\\nDEQs=\>\"", ",", "DEQs"}], "}"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                "id", ",", " ", "reactionmetaid", ",", "  ", "name", ",", " ",
                  "fast", ",", "reaction", ",", "reacts", ",", " ", "prods", 
                 ",", " ", "modifiers", ",", " ", "localParameters", ",", 
                 "\[IndentingNewLine]", "parametermetaids", ",", 
                 "parametersboterms", ",", "\[IndentingNewLine]", "formula", 
                 ",", "kineticlawsboterm", ",", "\[IndentingNewLine]", 
                 "DEQs"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"end", " ", "Block"}], " ", ".."}], "reacts"}], ",", " ",
            "prods"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "end", " ", "of", " ", "getReaction", " ", "normal", " ", "form"}], 
        "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"getReaction", "[", "r__", "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{
           "printWarning", "[", "\"\<Invalid reaction format.\>\"", "]"}], 
           ";", " ", 
           RowBox[{"Return", "[", "r", "]"}]}]}], "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{
        "end", " ", "of", " ", "getReaction", " ", "error", " ", "form"}], 
        " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"$SBML$NReactions", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"$SBML$NLocalParameters", "=", "0"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"$SBML$Reactions", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"stoichiometryMatrix", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"$SBML$MassActionReactionRates", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"$SBML$Model", ",", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<listOfReactions\>\"", ",", "___"}], "]"}], ",", "3"}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"printWarning", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "r", "]"}], ">", "1"}], ",", " ", 
         "\[IndentingNewLine]", 
         "\"\<Multiple 'listOfReactions' found. Only the first will be \
used.\>\""}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "r", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"verboseSave", "[", 
           RowBox[{"\"\<Reactions\>\"", ",", "header", ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ";", " ", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"r", ",", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<reaction\>\"", ",", "___"}], "]"}], ",", "3"}], 
         "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<getLevel2reactions: r\>\"", ",", "r"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"MB$Load", ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB$reactioncounter", " ", "=", " ", 
           RowBox[{
            RowBox[{"Length", "[", "r", "]"}], "+", "1"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"addReaction", "/@", "r"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "r", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"verboseSave", "[", 
           RowBox[{"\"\<Reactions\>\"", ",", "header", ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"sboterms", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"getSBMLfield", "[", 
           RowBox[{"\"\<sboTerm\>\"", ",", "#"}], "]"}], "&"}], "/@", "r"}]}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"getReaction", ",", "r"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<getLevel2reactions: r(2)\>\"", ",", "r"}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"ids", ",", " ", "formulas"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ids", " ", "=", " ", 
           RowBox[{"First", "/@", "r"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"defineVariable", "/@", "ids"}], ";", "\[IndentingNewLine]", 
          RowBox[{"formulas", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "[", 
               RowBox[{"[", "12", "]"}], "]"}], ")"}], "&"}], "/@", "r"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"$SBML$KineticLaws", "=", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Equal", "[", 
                RowBox[{
                 RowBox[{"functionate", "[", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", " ", 
                 RowBox[{"ToExpression", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "12", "]"}], "]"}], "]"}]}], "]"}], "&"}], 
              ",", " ", "r"}], "]"}], "//", "Flatten"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"$SBML$StoichiometryMatrix", "=", 
        RowBox[{"Transpose", "[", "stoichiometryMatrix", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
        "SBMLRead$returnMassBalanceEquations", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"v", "=", "SBML$RateVectorID"}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", " ", 
           RowBox[{"Array", "[", 
            RowBox[{"v", ",", 
             RowBox[{"Length", "[", "r", "]"}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", " ", 
           RowBox[{"stringer", "/@", "v"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", " ", "=", " ", 
           RowBox[{"contextify", "/@", "v"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"v", "=", 
           RowBox[{"expressionate", "/@", "v"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{"dbg", ",", "\"\<getLevel2reactions: v\>\"", ",", "v"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2reactions: $SBML$StoichiometryMatrix\>\"", ",", 
            "$SBML$StoichiometryMatrix"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2reactions: $SBML$MassActionReactionRates\>\"", ",", 
            "$SBML$MassActionReactionRates"}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"SBML$MassBalanceEquations", "=", 
           RowBox[{"$SBML$StoichiometryMatrix", ".", "v"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"debugPrint", "[", 
           RowBox[{
           "dbg", ",", 
            "\"\<getLevel2reactions: SBML$MassBalanceEquations\>\"", ",", 
            "SBML$MassBalanceEquations"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"SBML$MassAction$Equations", "=", 
           RowBox[{"$SBML$StoichiometryMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"v", "*", "$SBML$MassActionReactionRates"}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"$SBML$MassActionVariables", "=", 
           RowBox[{"functionate", "/@", "$SBML$Species$IDs"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"s", "=", 
           RowBox[{"stringer", "/@", "$SBML$Species$IDs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"s", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "<>", "\"\<'\>\""}], "&"}], ",", "s"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"s", "=", 
           RowBox[{"expressionate", "/@", " ", 
            RowBox[{"functionate", "/@", "s"}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"SBML$MassBalanceEquations", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "s", ",", "\[IndentingNewLine]", "SBML$MassBalanceEquations"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"SBML$MassAction$Equations", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"s", ",", " ", "SBML$MassAction$Equations"}], "}"}]}], 
            "]"}]}], ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"$SBML$MassActionVariables", "=", 
        RowBox[{"functionate", "/@", "$SBML$Species$IDs"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Combine", " ", "ODES", " ", "together"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", 
         "\"\<getLevel2reactions: $SBML$ODES: precombined:\\n\>\"", ",", " ", 
         RowBox[{"$SBML$ODES", "//", "Sort"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "vars", " ", "gives", " ", "the", " ", "unique", " ", "variables"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"lhs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"First", ",", " ", "$SBML$ODES"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rhs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"Last", ",", "$SBML$ODES"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"vars", " ", "=", " ", 
        RowBox[{"lhs", "//", "Union"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "find", " ", "positions", " ", "of", " ", "unique", " ", "variables", 
         " ", "in", " ", "entire", " ", "list"}], "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"varpositions", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"lhs", ",", "#"}], "]"}], "&"}], ",", " ", "vars"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"varpositions", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Flatten", ",", "varpositions"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: lhs:\>\"", ",", " ", 
         "lhs"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: vars:\>\"", ",", " ", 
         "vars"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: varpositions:\>\"", ",", 
         " ", "varpositions"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: rhs:\>\"", ",", " ", 
         "rhs"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "collect", " ", "the", " ", "rhs", " ", "for", " ", "each", " ", 
         "unique", " ", "variable", " ", "and", " ", "add", " ", "them", " ", 
         "up"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"rhs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"rhs", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", " ", "varpositions"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: rhs:\>\"", ",", " ", 
         "rhs"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"rhs", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Apply", "[", 
            RowBox[{"Plus", ",", "#"}], "]"}], "&"}], ",", " ", "rhs"}], 
         "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", "\"\<getLevel2reactions: rhs:\>\"", ",", " ", 
         "rhs"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"check", " ", "for", " ", "0"}], "-", 
          RowBox[{"length", " ", "list"}]}], ",", " ", 
         RowBox[{
         "can", " ", "happen", " ", "if", " ", "no", " ", "kinetic", " ", 
          "laws", " ", "anywhere"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "vars", "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"cfvars", " ", "=", " ", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"StringReplace", "[", 
            RowBox[{
             RowBox[{"ToString", "/@", "vars"}], ",", " ", 
             RowBox[{"\"\<'\>\"", "\[Rule]", " ", "\"\<\>\""}]}], "]"}], 
           "]"}]}], ",", " ", 
         RowBox[{"cfvars", "=", 
          RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"conversionFactors", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"SBMLSpeciesToUnitsOfTheSpecies", "/@", "cfvars"}], ")"}], "/.",
          "SBMLReplacementRules"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"dbg", ",", " ", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<getLevel2reactions: conversionFactors:\>\"", ",", " ", 
           "conversionFactors", ",", "\"\< vars:\>\"", ",", "vars"}], "]"}]}],
         "]"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"$SBML$UseUnits", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"$SBML$ODES", "=", 
           RowBox[{"MapThread", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "\[Equal]", 
               RowBox[{
                RowBox[{"(", "#2", ")"}], 
                RowBox[{"(", "#3", ")"}]}]}], "&"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"vars", ",", "rhs", ",", " ", "conversionFactors"}], 
              "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"$SBML$ODES", "=", 
           RowBox[{"MapThread", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#1", "\[Equal]", "#2"}], "&"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"vars", ",", "rhs"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", 
         "\"\<getLevel2reactions: $SBML$ODES: combined\\n\>\"", ",", " ", 
         RowBox[{"$SBML$ODES", "//", "Sort"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "correct", " ", "for", " ", "compartment", " ", "volumes", " ", "if", 
         " ", "necessary"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unitsOfTheSpeciesCorrection", "[", "ode_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "v", ",", "vdot", ",", " ", "newODE", ",", "variableName", ",", 
            "hasOnlySubstanceUnits", ",", "comp", ",", " ", "isASpecies", ",",
             "Cdot", ",", 
            RowBox[{"ubug", "=", "False"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"debugPrint", "[", 
            RowBox[{"dbg", ",", " ", 
             RowBox[{"\"\<unitsOfTheSpeciesCorrection: \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"++", "i"}], "]"}], "<>", "\"\<:\>\"", "<>", 
              RowBox[{"stringer", "[", 
               RowBox[{"First", "[", "ode", "]"}], "]"}]}]}], "]"}], ";", 
           "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{"First", "[", 
             RowBox[{"ode", "/.", 
              RowBox[{"{", 
               RowBox[{"Equal", "\[Rule]", " ", "List"}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"vdot", "=", "v"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"variableName", "[", 
             RowBox[{
              RowBox[{"x_", "'"}], "[", "y_", "]"}], "]"}], ":=", 
            RowBox[{"x", "[", "y", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"variableName", "[", "x__", "]"}], ":=", 
            "Indeterminate"}], ";", "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{"variableName", "[", "v", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"isASpecies", "=", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"$SBML$Species$IDs", ",", " ", 
              RowBox[{"defunctionate", "[", "v", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "ubug", ",", " ", 
             "\"\<getLevel2reactions: unitsOfTheSpeciesCorrection: \
{v,isASpecies}\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"v", ",", "isASpecies"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "isASpecies"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"debugPrint", "[", 
               RowBox[{"dbg", ",", "\"\<not a species: \>\"", ",", "v"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Return", "[", "ode", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"hasOnlySubstanceUnits", "=", 
            RowBox[{"hasOnlySubstanceUnitsIndicator", "[", "v", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "ubug", ",", " ", 
             "\"\<getLevel2reactions: unitsOfTheSpeciesCorrection: \
hasOnlySubstanceUnits\>\"", ",", "hasOnlySubstanceUnits"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"hasOnlySubstanceUnits", ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"debugPrint", "[", 
               RowBox[{
                RowBox[{"db", "g"}], ",", " ", 
                "\"\<hasOnlySubstanceUnits:\>\"", ",", "v"}], "]"}], ";", " ",
               "\[IndentingNewLine]", 
              RowBox[{"Return", "[", "ode", "]"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"comp", "=", 
            RowBox[{"SBMLSpeciesCompartment", "[", "v", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"cdot", "=", 
            RowBox[{"ODEfor", "[", 
             RowBox[{"defunctionate", "[", "comp", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "ubug", ",", " ", 
             "\"\<getLevel2reactions: unitsOfTheSpeciesCorrection: \
{comp,cdot}\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"comp", ",", "cdot"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"newODE", "=", 
              RowBox[{"Equal", "[", 
               RowBox[{"vdot", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"(", 
                    RowBox[{"ode", "/.", 
                    RowBox[{"{", 
                    RowBox[{"Equal", "\[Rule]", " ", "List"}], "}"}]}], ")"}],
                    "]"}], "/", "comp"}], " ", "-", " ", 
                 RowBox[{"cdot", "/", "comp"}]}]}], "]"}]}], ";"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"r", "evised", " ", "2.6", ".0", ".14", " ", 
             RowBox[{
              RowBox[{"1", "/", "30"}], "/", "07"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"newODE", "=", 
            RowBox[{"Equal", "[", 
             RowBox[{"vdot", ",", 
              RowBox[{
               RowBox[{"Last", "[", 
                RowBox[{"(", 
                 RowBox[{"ode", "/.", 
                  RowBox[{"{", 
                   RowBox[{"Equal", "\[Rule]", " ", "List"}], "}"}]}], ")"}], 
                "]"}], " ", "-", " ", 
               RowBox[{"cdot", "/", "comp"}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2reactions: newODE calculated for \>\"", 
             ",", "v"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "ubug", ",", " ", 
             "\"\<getLevel2reactions: unitsOfTheSpeciesCorrection:ode, newODE\
\>\"", ",", " ", 
             RowBox[{"{", 
              RowBox[{"ode", ",", "newODE"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Simplify", "/@", 
               RowBox[{"(", 
                RowBox[{"A", "==", "B"}], ")"}]}], " ", "is", " ", "the", " ",
               "same", " ", "as", " ", 
              RowBox[{"Simplify", "[", "a", "]"}]}], "==", 
             RowBox[{"Simplify", "[", "B", "]"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "commented", " ", "out", " ", "2.5", ".18", " ", "because", " ", 
             "of", " ", "CPU", " ", "usage", " ", "for", " ", "very", " ", 
             "complicated", " ", "odes"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newODE", "=", 
              RowBox[{"Simplify", "/@", "newODE"}]}], ";"}], 
            "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", 
             "\"\<getLevel2reactions: simplified newODE calculated for \>\"", 
             ",", "v"}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Return", "[", "newODE", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"end", " ", "of", " ", "unitsOfTheSpeciesCorrection"}], " ", 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"apply", " ", "the", " ", "correction"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{"$SBML$ODES", "=", 
        RowBox[{"unitsOfTheSpeciesCorrection", "/@", "$SBML$ODES"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{
        "dbg", ",", " ", 
         "\"\<getLevel2reactions: $SBML$ODES: corrected\\n\>\"", ",", " ", 
         RowBox[{
          RowBox[{"$SBML$ODES", "//", "Sort"}], "//", "TableForm"}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "process", " ", "verbose", " ", "reaction", " ", "information"}], " ",
         "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"label", "=", "\"\<Reactions\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "ids", ",", " ", "reactionmetaids", ",", " ", "names", ",", " ", 
             "fasts", ",", " ", "reactions", ",", " ", "reactantspecies", ",",
              " ", "productspecies", ",", " ", "mods", ",", "lps", ",", 
             "parametas", ",", "parasbo", ",", " ", "fs", ",", "klawsbo", ",",
              "des"}], "}"}], "=", 
           RowBox[{"Transpose", "[", "r", "]"}]}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", "$SBML$verboseContext"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ids", " ", "=", " ", 
              RowBox[{"decontextify", "[", "ids", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"lps", " ", "=", " ", 
              RowBox[{"decontextify", "[", 
               RowBox[{"lps", ",", "$SBML$Context"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"reactions", " ", "=", " ", 
              RowBox[{"decontextify", "[", 
               RowBox[{"reactions", ",", " ", "$SBML$Context"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"mods", " ", "=", " ", 
              RowBox[{"decontextify", "[", 
               RowBox[{"mods", ",", " ", "$SBML$Context"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"mods", " ", "=", " ", 
                RowBox[{"list2CommaSeparatedString", "[", "mods", "]"}]}], 
               ";"}], " ", "*)"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"lps", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"decontextify", "[", 
                  RowBox[{"#2", ",", 
                   RowBox[{"#1", "<>", "\"\<`\>\""}]}], "]"}], "&"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"ids", ",", "lps"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"fs", "=", " ", 
              RowBox[{"decontextify", "[", 
               RowBox[{"fs", ",", " ", "$SBML$Context"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"fs", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"decontextify", "[", 
                  RowBox[{"#2", ",", 
                   RowBox[{"#1", "<>", "\"\<`\>\""}]}], "]"}], "&"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"ids", ",", "fs"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"des", " ", "=", " ", 
              RowBox[{"decontextify", "[", 
               RowBox[{"des", ",", " ", "$SBML$Context"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"des", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"decontextify", "[", 
                  RowBox[{"#2", ",", 
                   RowBox[{"#1", "<>", "\"\<`\>\""}]}], "]"}], "&"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"ids", ",", "des"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"label", " ", "=", " ", 
              RowBox[{"label", "<>", "\"\<, contexts suppressed\>\""}]}], 
             ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
             "2.15"}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{"{", 
               RowBox[{
               "ids", ",", " ", "reactionmetaids", ",", "sboterms", ",", " ", 
                "names", ",", "fasts", ",", "reactions", ",", 
                "reactantspecies", ",", " ", "productspecies", ",", "  ", 
                "mods"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"header", "=", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ID\>\"", ",", "\"\<MetaID\>\"", ",", "\"\<SBOTerm\>\"", 
                ",", " ", "\"\<Name\>\"", ",", " ", "\"\<Fast\>\"", ",", 
                "\"\<Reaction\>\"", ",", 
                "\"\<Reactants\\nID MetaID SBOTerm\>\"", ",", " ", 
                "\"\<Products\\nID MetaID SBOTerm\>\"", ",", " ", 
                "\"\<Modifiers\\nID MetaID SBOTerm\>\""}], "}"}]}], ";"}], 
            "\[IndentingNewLine]", ",", "  ", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{"{", 
               RowBox[{
               "ids", ",", " ", "reactionmetaids", ",", " ", "names", ",", 
                "fasts", ",", "reactions", ",", "reactantspecies", ",", " ", 
                "productspecies", ",", "  ", "mods"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"header", "=", 
              RowBox[{"{", 
               RowBox[{
               "\"\<ID\>\"", ",", "\"\<MetaID\>\"", ",", " ", "\"\<Name\>\"", 
                ",", " ", "\"\<Fast\>\"", ",", "\"\<Reaction\>\"", ",", 
                "\"\<Reactants\\nID MetaID\>\"", ",", " ", 
                "\"\<Products\\nID MetaID\>\"", ",", " ", 
                "\"\<Modifiers\\nID MetaID\>\""}], "}"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"$SBML$ShowReactionParameters", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "following", " ", "line", " ", "added", " ", "2.3", ".19", " ", 
              "to", " ", "get", " ", "reaction", " ", "parameters", " ", "to",
               " ", "print", " ", "as", " ", "equals", " ", "and", " ", "not",
               " ", "arrows"}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"lps", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringReplace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<\[Rule]\>\"", "\[Rule]", " ", "\"\<=\>\""}], 
                    " ", "}"}]}], "]"}], "&"}], "/@", "#"}], "&"}], ")"}], "/@",
                "lps"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], 
                ">", "2.15"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lps", " ", "=", 
                 RowBox[{"Transpose", "/@", 
                  RowBox[{"Transpose", "[", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    "lps", ",", " ", "parametas", ",", " ", "parasbo"}], 
                    "}"}], "]"}]}]}], ";", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"include", " ", "also", " ", "sbo"}], " ", "&"}], 
                  " ", "metaids", " ", "2.5", ".27"}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"header", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                  "header", ",", 
                   "\"\<Parameters\\nID=val MetaID SBOTerm\>\""}], "]"}]}], 
                ";"}], "\[IndentingNewLine]", ",", "  ", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"lps", " ", "=", 
                 RowBox[{"Transpose", "/@", 
                  RowBox[{"Transpose", "[", " ", 
                   RowBox[{"{", 
                    RowBox[{"lps", ",", " ", "parametas"}], "}"}], "]"}]}]}], 
                ";", " ", 
                RowBox[{"(*", " ", 
                 RowBox[{
                 "include", " ", "also", " ", "metaids", " ", "2.5", ".27"}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"header", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                  "header", ",", "\"\<Parameters\\nID=val MetaID\>\""}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"r", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"r", ",", "lps"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"$SBML$shortenODES", " ", ",", " ", 
            RowBox[{"label", "=", 
             RowBox[{"label", "<>", "\"\<, shortened.\>\""}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
           "$SBML$KineticLaw", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"$SBML$shortenODES", " ", ",", "\[IndentingNewLine]", 
               RowBox[{"fs", "=", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Short", "[", 
                    RowBox[{"ToExpression", "[", "#", "]"}], "]"}], "&"}], 
                  ",", " ", "fs"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
             ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], 
                ">", "2.15"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"header", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"header", ",", "\"\<Formula\\nSBOTerm\>\""}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"r", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"fs", ",", " ", "klawsbo"}], "}"}], "]"}]}], 
                  "]"}]}], ";"}], "\[IndentingNewLine]", ",", "  ", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"header", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{
                  "header", ",", "\"\<Formula\\n(Substance/Volume)\>\""}], 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"r", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"r", ",", "fs"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"r", ",", "des"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"header", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"header", ",", "\"\<Contribution to ODEs\>\""}], 
              "]"}]}], ";"}], " ", "\[IndentingNewLine]", "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"verboseSave", "[", 
           RowBox[{"label", ",", "header", ",", " ", 
            RowBox[{"Transpose", "[", "r", "]"}]}], "]"}], ";"}]}], " ", 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"label", " ", "=", " ", "\"\<Differential Equations\>\""}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"DEQs", "=", "$SBML$ODES"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"$SBML$shortenODES", " ", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DEQs", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"First", "[", "#", "]"}], "]"}], "<>", 
                  "\"\<==\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"Short", "[", 
                    RowBox[{"InputForm", "[", 
                    RowBox[{"Last", "[", "#", "]"}], "]"}], "]"}], "]"}]}], 
                 "&"}], ",", "DEQs"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"label", " ", "=", " ", 
              RowBox[{"label", "<>", "\"\<, short form\>\""}]}], ";"}], 
            "\[IndentingNewLine]", " ", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DEQs", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ToString", "[", 
                   RowBox[{"First", "[", "#", "]"}], "]"}], "<>", 
                  "\"\<==\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"InputForm", "[", 
                    RowBox[{"Last", "[", "#", "]"}], "]"}], "]"}]}], "&"}], 
                ",", "DEQs"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", "$SBML$verboseContext"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"remove", " ", "global", " ", "context"}], " ", "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DEQs", "=", 
              RowBox[{"decontextify", "[", 
               RowBox[{"DEQs", ",", " ", "$SBML$Context"}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"remove", " ", "local", " ", "contexts"}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"reactionContexts", "=", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "<>", "\"\<`\>\""}], "&"}], "/@", "ids"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "reactionContexts", "]"}], ">", "0"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DEQs", "=", 
                 RowBox[{"decontextify", "[", 
                  RowBox[{"DEQs", ",", " ", 
                   RowBox[{"First", "[", "reactionContexts", "]"}]}], "]"}]}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"reactionContexts", "=", 
                 RowBox[{"Rest", "[", "reactionContexts", "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", " ", 
             "\[IndentingNewLine]", 
             RowBox[{"label", "=", 
              RowBox[{"label", "<>", "\"\<, contexts suppressed\>\""}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"vars", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"ToString", ",", "vars"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"vars", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"decontextify", ",", "vars"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"vars", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"\"\<'[t]\>\"", "\[Rule]", " ", "\"\<\>\""}]}], "]"}],
               "&"}], ",", " ", "vars"}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"verboseSave", "[", 
           RowBox[{"label", ",", " ", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<Variable\>\"", ",", " ", "\"\<ODEs\>\""}], "}"}], 
            ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"vars", ",", "DEQs"}], "}"}], "//", "Transpose"}]}], 
           "]"}], ";"}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"$SBML$VerboseStoichiometry", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "$SBML$verboseContext"}], ",", 
               RowBox[{"$SBML$Species$IDs", "=", 
                RowBox[{"decontextify", "[", 
                 RowBox[{"$SBML$Species$IDs", ",", "$SBML$Context"}], 
                 "]"}]}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
             RowBox[{"vsm", "=", 
              RowBox[{"Transpose", "[", "$SBML$StoichiometryMatrix", "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"vsm", "=", 
              RowBox[{
               RowBox[{"Prepend", "[", 
                RowBox[{"vsm", ",", "$SBML$Species$IDs"}], "]"}], "//", 
               "Transpose"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"verboseSave", "[", 
              RowBox[{
              "\"\<Stoichiometry Matrix based on Reaction \
Stoichiometries\>\"", ",", 
               RowBox[{"Prepend", "[", 
                RowBox[{"ids", ",", "\"\<Species\>\""}], "]"}], ",", "vsm"}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
           "$SBML$Verbose$MassBalanceEquations", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"mbe", " ", "=", " ", "SBML$MassBalanceEquations"}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "$SBML$verboseContext"}], ",", 
               RowBox[{"mbe", "=", 
                RowBox[{"decontextify", "[", 
                 RowBox[{"mbe", ",", "$SBML$Context"}], "]"}]}]}], "]"}], ";",
              " ", "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", " ", 
              RowBox[{"ToString", "/@", "mbe"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"$SBML$Species$IDs", ",", "mbe"}], "}"}], "//", 
               "Transpose"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"verboseSave", "[", 
              RowBox[{
              "\"\<Mass Balance Equations based on Stoichiometry Matrix\>\"", 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Species\>\"", ",", 
                 "\"\<[Species'[t]]=[Stoichometries][rates]\>\""}], "}"}], 
               ",", "mbe"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
           "$SBML$Verbose$MassActionEquations", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"spid", " ", "=", " ", 
              RowBox[{"ToString", "/@", 
               RowBox[{"(", 
                RowBox[{"First", "/@", "SBML$MassAction$Equations"}], 
                ")"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", 
              RowBox[{"Last", "/@", " ", "SBML$MassAction$Equations"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", "$SBML$verboseContext"}], ",", 
               RowBox[{"mbe", "=", 
                RowBox[{"decontextify", "[", 
                 RowBox[{"mbe", ",", "$SBML$Context"}], "]"}]}]}], "]"}], ";",
              " ", "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", " ", 
              RowBox[{"ToString", "/@", 
               RowBox[{"InputForm", "/@", "mbe"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", " ", 
              RowBox[{"MapThread", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "<>", "\"\<==\>\"", "<>", "#2"}], "&"}], ",", 
                RowBox[{"{", 
                 RowBox[{"spid", ",", "mbe"}], "}"}]}], "]"}]}], ";", " ", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"mbe", " ", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"$SBML$Species$IDs", ",", "mbe"}], "}"}], "//", 
               "Transpose"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"verboseSave", "[", 
              RowBox[{
              "\"\<Mass Action Equations based on Stoichiometry Matrix\>\"", 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Species\>\"", ",", 
                 "\"\<[Species'[t]]=[Stoichometries][mass-action-rates]\>\""}]\
, "}"}], ",", "mbe"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.388761500763907*^9, 3.388761502293902*^9}, {
   3.388761630857272*^9, 3.3887616351504307`*^9}, {3.388761716256328*^9, 
   3.388761719928833*^9}, {3.38877843449441*^9, 3.388778435624497*^9}, {
   3.411743861765431*^9, 3.4117438626171827`*^9}, {3.411743989090809*^9, 
   3.4117439895872707`*^9}, {3.4117440268205347`*^9, 3.411744035888123*^9}, {
   3.4117441498623953`*^9, 3.411744150639833*^9}, {3.411744213762229*^9, 
   3.411744215845613*^9}, {3.411744332426201*^9, 3.41174437905271*^9}, {
   3.411744524873268*^9, 3.411744618641369*^9}, {3.4117447834225283`*^9, 
   3.411745020453761*^9}, {3.411745203850047*^9, 3.411745205336583*^9}, {
   3.411745238731647*^9, 3.411745273841009*^9}, 3.411745314869141*^9, {
   3.411745474261047*^9, 3.4117454875411997`*^9}, {3.411745656385522*^9, 
   3.411745676816874*^9}, {3.411745726469054*^9, 3.4117457281225433`*^9}, {
   3.41174640920151*^9, 3.411746413503056*^9}, {3.411746470983302*^9, 
   3.411746475994254*^9}, {3.5062133317733717`*^9, 3.506213336905781*^9}, {
   3.5062156300820255`*^9, 3.506215631125085*^9}, {3.5062156687962394`*^9, 
   3.506215670219321*^9}, {3.540492372515401*^9, 3.540492373242484*^9}, {
   3.540492430900406*^9, 3.5404924326620893`*^9}, {3.540492647574785*^9, 
   3.540492658722286*^9}, {3.540492779047142*^9, 3.540492779476935*^9}, {
   3.54049302519803*^9, 3.540493061286968*^9}, {3.54049309652533*^9, 
   3.5404931410265017`*^9}, {3.540493176407349*^9, 3.540493216634119*^9}, {
   3.540494542092304*^9, 3.540494547821636*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["checkParameterShadowing", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkParameterShadowing", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gpar", ",", "collisions"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gpar", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"$SBML$IDTable", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Last", "[", "#", "]"}], "==", "\"\<parameter\>\""}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gpar", " ", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "gpar", "]"}], ",", " ", 
        RowBox[{"{", "\"\<parameter\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"collisions", " ", "=", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"$SBML$LocalReactionParameterTable", ",", " ", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"gpar", ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"\"\<Warning:\>\"", "//", "boldRed"}], ",", " ", 
         RowBox[{"\"\< local parameter \>\"", "//", "boldBlack"}], ",", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
         RowBox[{"\"\< in reaction \>\"", "//", "boldBlack"}], ",", " ", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "//", "boldBlue"}], ",", " ", 
         RowBox[{
         "\"\< shadows a global parameter with the same id.\>\"", "//", 
          "boldBlack"}]}], "]"}], "&"}], "/@", "collisions"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4040527366478*^9, 3.404052750180707*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["check4MissingODES - not currently used by SBMLRead", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"check4MissingODES", "[", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "v", ",", "o", ",", "varsWithoutODEs", ",", " ", "ODEsWithoutVars"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"o", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "MathSBML`Private`$SBML$ODES"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"v", "=", "MathSBML`Private`SBMLVariables"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<'\>\"", "<>", 
            "\"\<[t]\>\""}], "]"}], "&"}], ",", "v"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"varsWithoutODEs", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"v", ",", " ", "o"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ODEsWithoutVars", " ", "=", " ", 
       RowBox[{"Complement", "[", 
        RowBox[{"o", ",", "v"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "varsWithoutODEs", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"printWarning", "[", 
          RowBox[{
          "\"\<The following variables are specified in the model but do not \
have differential equations specified: \>\"", "<>", 
           RowBox[{
           "list2CommaSeparatedString", "[", "varsWithoutODEs", "]"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ODEsWithoutVars", "]"}], ">", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"printWarning", "[", 
          RowBox[{
          "\"\<The following variables have differential equations but are \
not specified as species or parameters in the model: \>\"", "<>", 
           RowBox[{
           "list2CommaSeparatedString", "[", "ODEsWithoutVars", "]"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["addDummyODE", "Subsection"],

Cell["\<\
adds an ODE of the form id'[t]==0 to the system in $SBML$ODES\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"addDummyODE", "[", 
   RowBox[{"id_", "?", "StringQ"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "dummyODE", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dummyODE", "=", 
      RowBox[{
       RowBox[{"StringReplace", "[", 
        RowBox[{
         RowBox[{"functionate", "[", "id", "]"}], ",", 
         RowBox[{"\"\<[\>\"", "\[Rule]", " ", "\"\<'[\>\""}]}], "]"}], "<>", 
       "\"\<==0\>\""}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"$SBML$ODES", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"$SBML$ODES", ",", " ", 
        RowBox[{"ToExpression", "[", "dummyODE", "]"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getLevel2events", "Subsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getLevel2events", "[", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e", ",", 
        RowBox[{"title", "=", "\"\<Events\>\""}], ",", "header", ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"dbg", "=", "False"}], ",", " ", 
        StyleBox["getEvent",
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
          "2.15"}], ",", "\[IndentingNewLine]", 
         RowBox[{"header", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", "\"\<SBOTerm\>\"", 
            ",", "\"\<Name\>\"", ",", " ", "\"\<Trigger\>\"", ",", 
            "\"\<Delay\>\"", ",", "\"\<TimeUnits\>\"", ",", 
            "\"\<Event\\nAssignment\>\"", ",", " ", 
            "\"\<Assignment\\nMetaID\>\"", ",", " ", 
            "\"\<Assignment\\nSBOTerm\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"header", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ID\>\"", ",", " ", "\"\<MetaID\>\"", ",", "\"\<Name\>\"", ",",
             " ", "\"\<Trigger\>\"", ",", "\"\<Delay\>\"", ",", 
            "\"\<TimeUnits\>\"", ",", "\"\<Event\\nAssignment\>\"", ",", " ", 
            "\"\<Assignment\\nMetaID\>\""}], "}"}]}]}], "\[IndentingNewLine]",
         "]"}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         StyleBox["getEvent",
          FontColor->RGBColor[0, 0, 1]], "[", 
         RowBox[{"XMLElement", "[", 
          RowBox[{"\"\<event\>\"", ",", "opt_", ",", "ev_"}], "]"}], "]"}], ":=",
         " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "id", ",", " ", "metaid", ",", "sboterm", ",", "name", ",", 
            "defaultID", ",", "trigger", ",", " ", "delay", ",", " ", 
            "timeUnits", ",", " ", "eventAssignment", ",", 
            "eventAssignmentMetaids", ",", " ", "eventAssignmentSBOTerms", 
            ",", " ", 
            RowBox[{"dbg", " ", "=", " ", "False"}], ",", "  ", 
            StyleBox["getEventAssignment",
             FontColor->RGBColor[0, 0, 1]]}], " ", "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"$SBML$NEvents", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", 
             "\"\<getLevel2events: getEvent: ---------------------------event \
number: \>\"", ",", " ", "$SBML$NEvents"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"defaultID", "=", 
            RowBox[{"\"\<event_\>\"", "<>", 
             RowBox[{"ToString", "[", "$SBML$NEvents", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"id", ",", "name"}], "}"}], "=", 
            RowBox[{"getIDandName", "[", 
             RowBox[{"opt", ",", "defaultID"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"checkForSymbolCollision", "[", 
            RowBox[{
             RowBox[{"contextify", "[", "id", "]"}], ",", "\"\<event\>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"addID", "[", 
              RowBox[{"id", ",", " ", "\"\<event\>\""}], "]"}], ";"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"removeVariable", "[", "id", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2events: getEvent: {id,name}\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"id", ",", "name"}], "}"}]}], "]"}], ";", " ", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"metaid", "=", 
            RowBox[{
             RowBox[{"\"\<metaid\>\"", "/.", "opt"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<metaid\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"sboterm", "=", 
            RowBox[{
             RowBox[{"\"\<sboTerm\>\"", "/.", "opt"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<sboTerm\>\"", "\[Rule]", " ", "\"\<\>\""}], 
              "}"}]}]}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"trigger", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"ev", ",", " ", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<trigger\>\"", ",", "___"}], "]"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"delay", " ", "=", " ", 
            RowBox[{"Cases", "[", 
             RowBox[{"ev", ",", " ", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<delay\>\"", ",", "___"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"timeUnits", "=", 
            RowBox[{
             RowBox[{"\"\<timeUnits\>\"", "/.", "opt"}], "/.", 
             RowBox[{"{", 
              RowBox[{"\"\<timeUnits\>\"", "\[Rule]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"unitsContextify", "[", "\"\<time\>\"", "]"}], "//.",
                  "$SBML$UnitRules"}], ")"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"eventAssignment", "=", 
            RowBox[{"Cases", "[", 
             RowBox[{"ev", ",", 
              RowBox[{"XMLElement", "[", 
               RowBox[{"\"\<listOfEventAssignments\>\"", ",", "___"}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"**", "**", "**", "**", "**"}], "*", " ", "Process", " ", 
             RowBox[{"Trigger", " ", "**", "**", "**", "**", "**"}]}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2events: getEvent:trigger\>\"", ",", 
             "trigger"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "trigger", "]"}], ">", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"printWarning", "[", 
               RowBox[{
               "\"\<Multple triggers specified for event '\>\"", "<>", "id", 
                "<>", "\"\<'; all triggers except for the first one were \
ignored.\>\""}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "trigger", "]"}], "<", "1"}], ",", 
                " ", 
                RowBox[{
                "\"\<No trigger found for event '\>\"", "<>", "id", "<>", 
                 "\"\<'\>\""}]}], "]"}], ";"}]}], " ", "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "trigger", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"trigger", " ", "=", " ", 
               RowBox[{"First", "[", "trigger", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"trigger", " ", "=", " ", 
               RowBox[{"extractXMLSubElements", "[", "trigger", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "trigger", "]"}], ">", "0"}], ",", 
                " ", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"trigger", "=", 
                  RowBox[{"First", "[", "trigger", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"debugPrint", "[", 
                  RowBox[{
                  "dbg", ",", 
                   "\"\<getLevel2events: getEvent:trigger formula\>\"", ",", 
                   "trigger"}], "]"}], ";", " ", "\[IndentingNewLine]", " ", 
                 RowBox[{"trigger", " ", "=", " ", 
                  RowBox[{"contextifyFormula", "[", "trigger", "]"}]}], ";"}],
                 "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"trigger", " ", "=", " ", "\"\<False\>\""}], ";"}]}],
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"trigger", "=", "\"\<False\>\""}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2events: getEvent:trigger formula\>\"", 
             ",", "trigger"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"**", "**", "**", "**"}], "*", " ", "Process", " ", 
             RowBox[{"Delay", " ", "**", "**", "**", "**"}], "*"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2events: getEvent:delay\>\"", ",", 
             "delay"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "delay", "]"}], ">", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"printWarning", "[", 
               RowBox[{
               "\"\<Multple delay fields specified for event '\>\"", "<>", 
                "id", "<>", 
                "\"\<'; all delay fields except for the first one were \
ignored.\>\""}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "delay", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delay", " ", "=", " ", 
               RowBox[{"First", "[", "delay", "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"delay", " ", "=", " ", 
               RowBox[{"extractXMLSubElements", "[", "delay", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "delay", "]"}], ">", "0"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"delay", " ", "=", " ", 
                  RowBox[{"contextifyFormula", "[", "delay", "]"}]}], ";"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"delay", " ", "=", " ", "\"\<0\>\""}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], " ", 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"delay", " ", "=", " ", "\"\<0\>\""}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", " ", 
             "\"\<getLevel2events: getEvent: delay formula\>\"", ",", " ", 
             "delay"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"**", "**", "**", "**", " ", "process"}], " ", 
             RowBox[{"timeUnits", " ", "**", "**"}]}], "*****)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", "\"\<getLevel2events: getEvent:timeUnits\>\"", ",", 
             "timeUnits"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"**", "**", "**", "**", "**", " ", "process"}], " ", 
             "event", " ", 
             RowBox[{"assignments", " ", "**", "**"}]}], "******)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"debugPrint", "[", 
            RowBox[{
            "dbg", ",", 
             "\"\<getLevel2events: getEvent:listOfEventAssignments\>\"", ",", 
             "eventAssignment"}], "]"}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "eventAssignment", "]"}], ">", "1"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"printWarning", "[", 
               RowBox[{
               "\"\<Multple listOfEventAssignments specified for event '\>\"",
                 "<>", "id", "<>", 
                "\"\<'; all listOfEventAssignments except for the first one \
were ignored.\>\""}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "listOfEventAssignments", "]"}], "<", 
                 "1"}], ",", " ", 
                RowBox[{
                "\"\<No listOfEventAssignments found for event '\>\"", "<>", 
                 "id", "<>", "\"\<'\>\""}]}], "]"}], ";"}]}], " ", 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "eventAssignment", "]"}], ">", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"eventAssignment", " ", "=", " ", 
               RowBox[{"First", "[", "eventAssignment", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"eventAssignment", " ", "=", " ", 
               RowBox[{
               "extractXMLSubElements", "[", "eventAssignment", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"eventAssignment", " ", "=", " ", 
               RowBox[{"Cases", "[", 
                RowBox[{"eventAssignment", ",", " ", 
                 RowBox[{"XMLElement", "[", 
                  RowBox[{"\"\<eventAssignment\>\"", ",", "___"}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                StyleBox["getEventAssignment",
                 FontColor->RGBColor[0, 0, 1]], 
                StyleBox["[",
                 FontColor->GrayLevel[0]], 
                StyleBox[
                 RowBox[{"XMLElement", "[", 
                  RowBox[{
                  "\"\<eventAssignment\>\"", ",", "evopt_", ",", " ", 
                   "formula_"}], "]"}],
                 FontColor->GrayLevel[0]], 
                StyleBox["]",
                 FontColor->GrayLevel[0]]}], ":=", " ", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "v", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"f", "=", "formula"}], ";", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", " ", 
                   RowBox[{"Cases", "[", 
                    RowBox[{"f", ",", " ", 
                    RowBox[{"XMLElement", "[", 
                    RowBox[{"\"\<math\>\"", ",", "___"}], "]"}]}], "]"}]}], 
                  ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getEventAssignment:evopt\>\"", ",", 
                    "evopt"}], "]"}], ";", " ", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getEventAssignment:f\>\"", ",", "f"}], 
                   "]"}], ";", " ", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"v", " ", "=", " ", 
                   RowBox[{"contextify", "[", 
                    RowBox[{"\"\<variable\>\"", "/.", "evopt"}], "]"}]}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getEventAssignment:v\>\"", ",", "v"}], 
                   "]"}], ";", " ", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "f", "]"}], ">", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"f", "=", " ", 
                    RowBox[{"First", "[", "f", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"debugPrint", "[", 
                    RowBox[{
                    "dbg", ",", "\"\<getEventAssignment:f\>\"", ",", "f"}], 
                    "]"}], ";", " ", "\[IndentingNewLine]", 
                    RowBox[{"f", "=", " ", 
                    RowBox[{"contextifyFormula", "[", "f", "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"debugPrint", "[", 
                    RowBox[{
                    "dbg", ",", "\"\<getEventAssignment:f\>\"", ",", "f"}], 
                    "]"}], ";"}], " ", "\[IndentingNewLine]", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"printWarning", "[", 
                    RowBox[{
                    RowBox[{
                    "\"\<No formula specified for event assignment,even id=\>\
\"", "<>", "id", "<>", "\"\< variable=\>\""}], ",", "v"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"f", "=", "\"\<Indeterminate\>\""}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"debugPrint", "[", 
                   RowBox[{
                   "dbg", ",", "\"\<getEventAssignment:f\>\"", ",", "f"}], 
                   "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", 
                  RowBox[{"f", " ", "=", " ", 
                   RowBox[{
                    RowBox[{"functionate", "[", "v", "]"}], "<>", 
                    "\"\<->\>\"", "<>", "f"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"Return", "[", "f", "]"}], ";"}]}], " ", 
                "\[IndentingNewLine]", "]"}]}], ";", " ", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                StyleBox["getEventAssignment",
                 FontColor->RGBColor[0, 0, 1]], "[", "x___", "]"}], ":=", " ", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"printWarning", "[", 
                   RowBox[{"\"\<Incorrectly formatted eventAssignment=\>\"", "<>", 
                    RowBox[{"ToString", "[", "x", "]"}]}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{"end", " ", "of", " ", 
                StyleBox["getEventAssignment",
                 FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"eventAssignmentMetaids", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"getSBMLfield", "[", 
                   RowBox[{"\"\<metaid\>\"", ",", "#"}], "]"}], "&"}], ",", 
                 " ", "eventAssignment"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"eventAssignmentSBOTerms", "=", 
               RowBox[{"Map", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"getSBMLfield", "[", 
                   RowBox[{"\"\<sboTerm\>\"", ",", "#"}], "]"}], "&"}], ",", 
                 " ", "eventAssignment"}], "]"}]}], ";", " ", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"eventAssignment", " ", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"getEventAssignment", ",", " ", "eventAssignment"}], 
                "]"}]}], ";", " ", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"debugPrint", "[", 
               RowBox[{
               "dbg", ",", 
                "\"\<getLevel2events: getEvent:eventAssignments\>\"", ",", 
                "eventAssignment"}], "]"}], ";"}]}], " ", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"$SBML$Events", " ", "=", " ", 
            RowBox[{"Append", "[", 
             RowBox[{"$SBML$Events", ",", "\[IndentingNewLine]", 
              RowBox[{"id", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<trigger\>\"", "\[Rule]", " ", "trigger"}], ",", 
                 RowBox[{"\"\<delay\>\"", "\[Rule]", " ", "delay"}], ",", 
                 RowBox[{
                 "\"\<events\>\"", "\[Rule]", " ", "eventAssignment"}]}], 
                "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"saveVerboseData", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"!", "$SBML$verboseContext"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"id", " ", "=", " ", 
                  RowBox[{"decontextify", "[", "id", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"trigger", " ", "=", " ", 
                  RowBox[{"decontextify", "[", 
                   RowBox[{"trigger", ",", " ", "$SBML$Context"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"timeUnits", " ", "=", " ", 
                  RowBox[{"decontextify", "[", "timeUnits", "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"eventAssignment", "=", 
                  RowBox[{"decontextify", "[", 
                   RowBox[{"eventAssignment", ",", " ", "$SBML$Context"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"delay", " ", "=", " ", 
                  RowBox[{"decontextify", "[", 
                   RowBox[{"delay", ",", " ", "$SBML$Context"}], "]"}]}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"$SBML$OutputFormatIsHTML", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"trigger", "=", 
                  RowBox[{"StringReplace", "[", 
                   RowBox[{"trigger", ",", 
                    RowBox[{"\"\<,\>\"", "\[Rule]", " ", "\"\<@COMMA\>\""}]}],
                    "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"eventAssignment", "=", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"\"\<,\>\"", "\[Rule]", " ", "\"\<@COMMA\>\""}]}],
                     "]"}], "&"}], "/@", "eventAssignment"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToExpression", "[", "$SBML$Level$Version", "]"}], ">", 
              "2.15"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "id", ",", "metaid", ",", "sboterm", ",", " ", "name", ",", 
                " ", "trigger", ",", " ", "delay", ",", "timeUnits", ",", " ",
                 "eventAssignment", ",", " ", "eventAssignmentMetaids", ",", 
                " ", "eventAssignmentSBOTerms"}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{
               "id", ",", "metaid", ",", " ", "name", ",", " ", "trigger", 
                ",", " ", "delay", ",", "timeUnits", ",", " ", 
                "eventAssignment", ",", " ", "eventAssignmentMetaids"}], 
               "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"end", " ", "of", " ", 
         StyleBox["getEvent",
          FontColor->RGBColor[0, 0, 1]]}], " ", "*)"}], "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"$SBML$Events", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"$SBML$NEvents", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"e", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"$SBML$Model", ",", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<listOfEvents\>\"", ",", "___"}], "]"}], ",", "3"}], 
         "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"printWarning", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "e", "]"}], ">", "1"}], ",", " ", 
         "\[IndentingNewLine]", 
         "\"\<Multiple 'listOfEvents' found. Only the first will be \
used.\>\""}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "e", "]"}], "<", "1"}], ",", 
         RowBox[{
          RowBox[{"verboseSave", "[", 
           RowBox[{"title", ",", "header", ",", " ", 
            RowBox[{"{", "}"}]}], "]"}], ";", " ", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"e", "=", " ", 
        RowBox[{"Cases", "[", 
         RowBox[{"e", ",", 
          RowBox[{"XMLElement", "[", 
           RowBox[{"\"\<event\>\"", ",", "___"}], "]"}], ",", "3"}], "]"}]}], 
       ";", " ", "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<getLevel2events: e\>\"", ",", "e"}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"MB$Load", ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB$Events", "++"}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"addEvent", "/@", "e"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"e", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"getEvent", ",", " ", "e"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"debugPrint", "[", 
        RowBox[{"dbg", ",", "\"\<getLevel2events: e\>\"", ",", "e"}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveVerboseData", ",", 
         RowBox[{
          RowBox[{"verboseSave", "[", 
           RowBox[{"title", ",", "header", ",", " ", "e"}], "]"}], ";"}]}], 
        " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["getBiomodel", "Subsection",
 CellChangeTimes->{{3.404054648066324*^9, 3.404054649731113*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "Biomodels$Database$URL", "=", 
    "\"\<http://www.ebi.ac.uk/compneur-srv/biomodels/models-main/publ/\>\""}],
    ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBiomodel", "[", 
    RowBox[{
     RowBox[{"n_", "?", "IntegerQ"}], ",", " ", 
     RowBox[{"opt___", "?", "OptionQ"}]}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"model", ",", " ", "name"}], "}"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"name", " ", "=", " ", 
       RowBox[{"ToString", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringLength", "[", "name", "]"}], "<", "10"}], ",", " ", 
        RowBox[{"name", " ", "=", " ", 
         RowBox[{"\"\<0\>\"", "<>", "name"}]}]}], "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"name", " ", "=", " ", 
       RowBox[{
       "Biomodels$Database$URL", "<>", "\"\<BIOMD\>\"", "<>", "name", "<>", 
        "\"\<.xml\>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Reading \>\"", ",", " ", "name"}], "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"model", " ", "=", " ", 
       RowBox[{"Import", "[", 
        RowBox[{"name", ",", " ", "\"\<XML\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"model", "=", 
       RowBox[{"SBMLRead", "[", 
        RowBox[{"model", ",", " ", "opt"}], "]"}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "model", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBiomodel", "[", "x___", "]"}], ":=", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
     "Print", "[", "\"\<Expecting getBiomodel[integer model number]\>\"", 
      "]"}], ";", " ", 
     RowBox[{"Return", "[", "$Failed", "]"}]}], ")"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.404054642324551*^9, 3.404054811098477*^9}, {
   3.404054852308609*^9, 3.404054879226919*^9}, {3.4040549534807177`*^9, 
   3.404054957195182*^9}, {3.404054994725814*^9, 3.404055007680891*^9}, {
   3.404055039045662*^9, 3.4040550436110764`*^9}, {3.404055093797254*^9, 
   3.404055094450438*^9}, 3.404055167658122*^9, {3.404055209467334*^9, 
   3.404055231182706*^9}}]
}, Closed]],

Cell["Exit", "Section",
 CellChangeTimes->{{3.504977733825633*^9, 3.50497773429666*^9}}],

Cell[BoxData[
 RowBox[{"LTPrint", "[", "\"\<Level 2 support loaded.\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5049777489915004`*^9, 3.504977759184084*^9}, {
  3.506452306888521*^9, 3.506452308598563*^9}}]
},
AutoGeneratedPackage->Automatic,
CellGrouping->Manual,
WindowSize->{701, 858},
WindowMargins->{{Automatic, 112}, {-5, Automatic}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (February 23, 2011)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 109, 4, 121, "Title"],
Cell[669, 26, 745, 14, 215, "Text"],
Cell[CellGroupData[{
Cell[1439, 44, 154, 2, 78, "Section"],
Cell[1596, 48, 2130, 39, 391, "Text"]
}, Closed]],
Cell[3741, 90, 45, 0, 48, "Section"],
Cell[CellGroupData[{
Cell[3811, 94, 35, 0, 31, "Subsection"],
Cell[3849, 96, 39375, 839, 7242, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[43261, 940, 37, 0, 31, "Subsection"],
Cell[43301, 942, 36, 0, 70, "Text"],
Cell[43340, 944, 9868, 219, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[53245, 1168, 93, 2, 31, "Subsection"],
Cell[53341, 1172, 222, 7, 70, "Input",
 InitializationCell->True],
Cell[53566, 1181, 19280, 458, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[72883, 1644, 40, 0, 31, "Subsection"],
Cell[72926, 1646, 7870, 182, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[80833, 1833, 43, 0, 31, "Subsection"],
Cell[80879, 1835, 1084, 28, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[82000, 1868, 40, 0, 31, "Subsection"],
Cell[82043, 1870, 22679, 498, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[104759, 2373, 36, 0, 31, "Subsection"],
Cell[104798, 2375, 51879, 1071, 7042, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[156714, 3451, 47, 0, 31, "Subsection"],
Cell[156764, 3453, 6259, 150, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[163060, 3608, 43, 0, 31, "Subsection"],
Cell[163106, 3610, 48451, 1117, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[211594, 4732, 43, 0, 31, "Subsection"],
Cell[211640, 4734, 6246, 148, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[217923, 4887, 37, 0, 31, "Subsection"],
Cell[217963, 4889, 123, 3, 70, "Text"],
Cell[218089, 4894, 813, 24, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[218939, 4923, 34, 0, 31, "Subsection"],
Cell[218976, 4925, 1472, 37, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[220485, 4967, 38, 0, 31, "Subsection"],
Cell[220526, 4969, 75502, 1557, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[296065, 6531, 41, 0, 31, "Subsection"],
Cell[296109, 6533, 14469, 308, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[310615, 6846, 49, 0, 31, "Subsection"],
Cell[310667, 6848, 6414, 144, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[317118, 6997, 60, 0, 31, "Subsection"],
Cell[317181, 6999, 163, 3, 70, "Text"],
Cell[317347, 7004, 30673, 718, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[348057, 7727, 36, 0, 31, "Subsection"],
Cell[348096, 7729, 32272, 669, 4782, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[380405, 8403, 28, 0, 31, "Subsection"],
Cell[380436, 8405, 846, 22, 142, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[381319, 8432, 42, 0, 31, "Subsection"],
Cell[381364, 8434, 6276, 146, 962, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[387677, 8585, 121, 1, 31, "Subsection"],
Cell[387801, 8588, 1860, 50, 242, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[389698, 8643, 137, 2, 31, "Subsection"],
Cell[389838, 8647, 332, 6, 68, "Text"],
Cell[390173, 8655, 122474, 2536, 17217, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[512684, 11196, 45, 0, 39, "Subsection"],
Cell[512732, 11198, 1922, 48, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[514691, 11251, 72, 0, 31, "Subsection"],
Cell[514766, 11253, 2495, 61, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[517298, 11319, 33, 0, 31, "Subsection"],
Cell[517334, 11321, 85, 2, 70, "Text"],
Cell[517422, 11325, 790, 21, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[518249, 11351, 37, 0, 31, "Subsection"],
Cell[518289, 11353, 28480, 599, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[546806, 11957, 99, 1, 31, "Subsection"],
Cell[546908, 11960, 2432, 60, 70, "Input",
 InitializationCell->True]
}, Closed]],
Cell[549355, 12023, 88, 1, 48, "Section"],
Cell[549446, 12026, 234, 4, 37, "Input",
 InitializationCell->True]
}
]
*)

(* End of internal cache information *)
